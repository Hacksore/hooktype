{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Schema": {
      "anyOf": [
        {
          "$ref": "#/definitions/BranchProtectionRuleEvent"
        },
        {
          "$ref": "#/definitions/CheckRunEvent"
        },
        {
          "$ref": "#/definitions/CheckSuiteEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertEvent"
        },
        {
          "$ref": "#/definitions/CommitCommentEvent"
        },
        {
          "$ref": "#/definitions/CreateEvent"
        },
        {
          "$ref": "#/definitions/DeleteEvent"
        },
        {
          "$ref": "#/definitions/DependabotAlertEvent"
        },
        {
          "$ref": "#/definitions/DeployKeyEvent"
        },
        {
          "$ref": "#/definitions/DeploymentEvent"
        },
        {
          "$ref": "#/definitions/DeploymentStatusEvent"
        },
        {
          "$ref": "#/definitions/DiscussionEvent"
        },
        {
          "$ref": "#/definitions/DiscussionCommentEvent"
        },
        {
          "$ref": "#/definitions/ForkEvent"
        },
        {
          "$ref": "#/definitions/GithubAppAuthorizationEvent"
        },
        {
          "$ref": "#/definitions/GollumEvent"
        },
        {
          "$ref": "#/definitions/InstallationEvent"
        },
        {
          "$ref": "#/definitions/InstallationRepositoriesEvent"
        },
        {
          "$ref": "#/definitions/InstallationTargetEvent"
        },
        {
          "$ref": "#/definitions/IssueCommentEvent"
        },
        {
          "$ref": "#/definitions/IssuesEvent"
        },
        {
          "$ref": "#/definitions/LabelEvent"
        },
        {
          "$ref": "#/definitions/MarketplacePurchaseEvent"
        },
        {
          "$ref": "#/definitions/MemberEvent"
        },
        {
          "$ref": "#/definitions/MembershipEvent"
        },
        {
          "$ref": "#/definitions/MergeGroupEvent"
        },
        {
          "$ref": "#/definitions/MetaEvent"
        },
        {
          "$ref": "#/definitions/MilestoneEvent"
        },
        {
          "$ref": "#/definitions/OrgBlockEvent"
        },
        {
          "$ref": "#/definitions/OrganizationEvent"
        },
        {
          "$ref": "#/definitions/PackageEvent"
        },
        {
          "$ref": "#/definitions/PageBuildEvent"
        },
        {
          "$ref": "#/definitions/PingEvent"
        },
        {
          "$ref": "#/definitions/ProjectEvent"
        },
        {
          "$ref": "#/definitions/ProjectCardEvent"
        },
        {
          "$ref": "#/definitions/ProjectColumnEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemEvent"
        },
        {
          "$ref": "#/definitions/PublicEvent"
        },
        {
          "$ref": "#/definitions/PullRequestEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewCommentEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewThreadEvent"
        },
        {
          "$ref": "#/definitions/PushEvent"
        },
        {
          "$ref": "#/definitions/RegistryPackageEvent"
        },
        {
          "$ref": "#/definitions/ReleaseEvent"
        },
        {
          "$ref": "#/definitions/RepositoryEvent"
        },
        {
          "$ref": "#/definitions/RepositoryDispatchEvent"
        },
        {
          "$ref": "#/definitions/RepositoryImportEvent"
        },
        {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertEvent"
        },
        {
          "$ref": "#/definitions/SecretScanningAlertEvent"
        },
        {
          "$ref": "#/definitions/SecurityAdvisoryEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipEvent"
        },
        {
          "$ref": "#/definitions/StarEvent"
        },
        {
          "$ref": "#/definitions/StatusEvent"
        },
        {
          "$ref": "#/definitions/TeamEvent"
        },
        {
          "$ref": "#/definitions/TeamAddEvent"
        },
        {
          "$ref": "#/definitions/WatchEvent"
        },
        {
          "$ref": "#/definitions/WorkflowDispatchEvent"
        },
        {
          "$ref": "#/definitions/WorkflowJobEvent"
        },
        {
          "$ref": "#/definitions/WorkflowRunEvent"
        }
      ],
      "description": "This file was automatically generated by json-schema-to-typescript. DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file, and run json-schema-to-typescript to regenerate this file."
    },
    "BranchProtectionRuleEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/BranchProtectionRuleCreatedEvent"
        },
        {
          "$ref": "#/definitions/BranchProtectionRuleDeletedEvent"
        },
        {
          "$ref": "#/definitions/BranchProtectionRuleEditedEvent"
        }
      ]
    },
    "BranchProtectionRuleCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "rule": {
          "$ref": "#/definitions/BranchProtectionRule"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "rule",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\""
    },
    "BranchProtectionRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "repository_id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "pull_request_reviews_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "required_approving_review_count": {
          "$ref": "#/definitions/BranchProtectionRuleNumber"
        },
        "dismiss_stale_reviews_on_push": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "require_code_owner_review": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "authorized_dismissal_actors_only": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "ignore_approvals_from_contributors": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "required_status_checks": {
          "$ref": "#/definitions/BranchProtectionRuleArray"
        },
        "required_status_checks_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "strict_required_status_checks_policy": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "signature_requirement_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "linear_history_requirement_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "admin_enforced": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "create_protected": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "allow_force_pushes_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "allow_deletions_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "merge_queue_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "required_deployments_enforcement_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "required_conversation_resolution_level": {
          "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
        },
        "authorized_actors_only": {
          "$ref": "#/definitions/BranchProtectionRuleBoolean"
        },
        "authorized_actor_names": {
          "$ref": "#/definitions/BranchProtectionRuleArray"
        }
      },
      "required": [
        "id",
        "repository_id",
        "name",
        "created_at",
        "updated_at",
        "pull_request_reviews_enforcement_level",
        "required_approving_review_count",
        "dismiss_stale_reviews_on_push",
        "require_code_owner_review",
        "authorized_dismissal_actors_only",
        "ignore_approvals_from_contributors",
        "required_status_checks",
        "required_status_checks_enforcement_level",
        "strict_required_status_checks_policy",
        "signature_requirement_enforcement_level",
        "linear_history_requirement_enforcement_level",
        "admin_enforced",
        "allow_force_pushes_enforcement_level",
        "allow_deletions_enforcement_level",
        "merge_queue_enforcement_level",
        "required_deployments_enforcement_level",
        "required_conversation_resolution_level",
        "authorized_actors_only",
        "authorized_actor_names"
      ],
      "additionalProperties": false,
      "description": "The branch protection rule. Includes a `name` and all the [branch protection settings](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-settings) applied to branches that match the name. Binary settings are boolean. Multi-level configurations are one of `off`, `non_admins`, or `everyone`. Actor and build lists are arrays of strings."
    },
    "BranchProtectionRuleEnforcementLevel": {
      "type": "string",
      "enum": [
        "off",
        "non_admins",
        "everyone"
      ]
    },
    "BranchProtectionRuleNumber": {
      "type": "number"
    },
    "BranchProtectionRuleBoolean": {
      "type": "boolean"
    },
    "BranchProtectionRuleArray": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier of the repository"
        },
        "node_id": {
          "type": "string",
          "description": "The GraphQL identifier of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "full_name": {
          "type": "string",
          "description": "The full, globally unique, name of the repository."
        },
        "private": {
          "type": "boolean",
          "description": "Whether the repository is private or public."
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "html_url": {
          "type": "string",
          "description": "The URL to view the repository on GitHub.com."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "The repository description."
        },
        "fork": {
          "type": "boolean",
          "description": "Whether the repository is a fork."
        },
        "url": {
          "type": "string",
          "description": "The URL to get more information about the repository from the GitHub API."
        },
        "forks_url": {
          "type": "string",
          "description": "The API URL to list the forks of the repository."
        },
        "keys_url": {
          "type": "string",
          "description": "A template for the API URL to get information about deploy keys on the repository."
        },
        "collaborators_url": {
          "type": "string",
          "description": "A template for the API URL to get information about collaborators of the repository."
        },
        "teams_url": {
          "type": "string",
          "description": "The API URL to list the teams on the repository."
        },
        "hooks_url": {
          "type": "string",
          "description": "The API URL to list the hooks on the repository."
        },
        "issue_events_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue events on the repository."
        },
        "events_url": {
          "type": "string",
          "description": "The API URL to list the events of the repository."
        },
        "assignees_url": {
          "type": "string",
          "description": "A template for the API URL to list the available assignees for issues in the repository."
        },
        "branches_url": {
          "type": "string",
          "description": "A template for the API URL to get information about branches in the repository."
        },
        "tags_url": {
          "type": "string",
          "description": "The API URL to get information about tags on the repository."
        },
        "blobs_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
        },
        "git_tags_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git tags of the repository."
        },
        "git_refs_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git refs of the repository."
        },
        "trees_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
        },
        "statuses_url": {
          "type": "string",
          "description": "A template for the API URL to get information about statuses of a commit."
        },
        "languages_url": {
          "type": "string",
          "description": "The API URL to get information about the languages of the repository."
        },
        "stargazers_url": {
          "type": "string",
          "description": "The API URL to list the stargazers on the repository."
        },
        "contributors_url": {
          "type": "string",
          "description": "A template for the API URL to list the contributors to the repository."
        },
        "subscribers_url": {
          "type": "string",
          "description": "The API URL to list the subscribers on the repository."
        },
        "subscription_url": {
          "type": "string",
          "description": "The API URL to subscribe to notifications for this repository."
        },
        "commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about commits on the repository."
        },
        "git_commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git commits of the repository."
        },
        "comments_url": {
          "type": "string",
          "description": "A template for the API URL to get information about comments on the repository."
        },
        "issue_comment_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue comments on the repository."
        },
        "contents_url": {
          "type": "string",
          "description": "A template for the API URL to get the contents of the repository."
        },
        "compare_url": {
          "type": "string",
          "description": "A template for the API URL to compare two commits or refs."
        },
        "merges_url": {
          "type": "string",
          "description": "The API URL to merge branches in the repository."
        },
        "archive_url": {
          "type": "string",
          "description": "A template for the API URL to download the repository as an archive."
        },
        "downloads_url": {
          "type": "string",
          "description": "The API URL to list the downloads on the repository."
        },
        "issues_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issues on the repository."
        },
        "pulls_url": {
          "type": "string",
          "description": "A template for the API URL to get information about pull requests on the repository."
        },
        "milestones_url": {
          "type": "string",
          "description": "A template for the API URL to get information about milestones of the repository."
        },
        "notifications_url": {
          "type": "string",
          "description": "A template for the API URL to get information about notifications on the repository."
        },
        "labels_url": {
          "type": "string",
          "description": "A template for the API URL to get information about labels of the repository."
        },
        "releases_url": {
          "type": "string",
          "description": "A template for the API URL to get information about releases on the repository."
        },
        "deployments_url": {
          "type": "string",
          "description": "The API URL to list the deployments of the repository."
        },
        "created_at": {
          "type": [
            "number",
            "string"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "pushed_at": {
          "type": [
            "number",
            "string",
            "null"
          ]
        },
        "git_url": {
          "type": "string"
        },
        "ssh_url": {
          "type": "string"
        },
        "clone_url": {
          "type": "string"
        },
        "svn_url": {
          "type": "string"
        },
        "homepage": {
          "type": [
            "string",
            "null"
          ]
        },
        "size": {
          "type": "number"
        },
        "stargazers_count": {
          "type": "number"
        },
        "watchers_count": {
          "type": "number"
        },
        "language": {
          "type": [
            "string",
            "null"
          ]
        },
        "has_issues": {
          "type": "boolean",
          "description": "Whether issues are enabled."
        },
        "has_projects": {
          "type": "boolean",
          "description": "Whether projects are enabled."
        },
        "has_downloads": {
          "type": "boolean",
          "description": "Whether downloads are enabled."
        },
        "has_wiki": {
          "type": "boolean",
          "description": "Whether the wiki is enabled."
        },
        "has_pages": {
          "type": "boolean"
        },
        "has_discussions": {
          "type": "boolean",
          "description": "Whether discussions are enabled."
        },
        "forks_count": {
          "type": "number"
        },
        "mirror_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "archived": {
          "type": "boolean",
          "description": "Whether the repository is archived."
        },
        "disabled": {
          "type": "boolean",
          "description": "Returns whether or not this repository is disabled."
        },
        "open_issues_count": {
          "type": "number"
        },
        "license": {
          "anyOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "type": "null"
            }
          ]
        },
        "forks": {
          "type": "number"
        },
        "open_issues": {
          "type": "number"
        },
        "watchers": {
          "type": "number"
        },
        "stargazers": {
          "type": "number"
        },
        "default_branch": {
          "type": "string",
          "description": "The default branch of the repository."
        },
        "allow_squash_merge": {
          "type": "boolean",
          "description": "Whether to allow squash merges for pull requests."
        },
        "allow_merge_commit": {
          "type": "boolean",
          "description": "Whether to allow merge commits for pull requests."
        },
        "allow_rebase_merge": {
          "type": "boolean",
          "description": "Whether to allow rebase merges for pull requests."
        },
        "allow_auto_merge": {
          "type": "boolean",
          "description": "Whether to allow auto-merge for pull requests."
        },
        "allow_forking": {
          "type": "boolean",
          "description": "Whether to allow private forks"
        },
        "allow_update_branch": {
          "type": "boolean"
        },
        "use_squash_pr_title_as_default": {
          "type": "boolean"
        },
        "squash_merge_commit_message": {
          "type": "string"
        },
        "squash_merge_commit_title": {
          "type": "string"
        },
        "merge_commit_message": {
          "type": "string"
        },
        "merge_commit_title": {
          "type": "string"
        },
        "is_template": {
          "type": "boolean"
        },
        "web_commit_signoff_required": {
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "visibility": {
          "type": "string",
          "enum": [
            "public",
            "private",
            "internal"
          ]
        },
        "delete_branch_on_merge": {
          "type": "boolean",
          "description": "Whether to delete head branches when pull requests are merged"
        },
        "master_branch": {
          "type": "string"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "pull": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "admin": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            }
          },
          "required": [
            "pull",
            "push",
            "admin"
          ],
          "additionalProperties": false
        },
        "public": {
          "type": "boolean"
        },
        "organization": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id",
        "name",
        "full_name",
        "private",
        "owner",
        "html_url",
        "description",
        "fork",
        "url",
        "forks_url",
        "keys_url",
        "collaborators_url",
        "teams_url",
        "hooks_url",
        "issue_events_url",
        "events_url",
        "assignees_url",
        "branches_url",
        "tags_url",
        "blobs_url",
        "git_tags_url",
        "git_refs_url",
        "trees_url",
        "statuses_url",
        "languages_url",
        "stargazers_url",
        "contributors_url",
        "subscribers_url",
        "subscription_url",
        "commits_url",
        "git_commits_url",
        "comments_url",
        "issue_comment_url",
        "contents_url",
        "compare_url",
        "merges_url",
        "archive_url",
        "downloads_url",
        "issues_url",
        "pulls_url",
        "milestones_url",
        "notifications_url",
        "labels_url",
        "releases_url",
        "deployments_url",
        "created_at",
        "updated_at",
        "pushed_at",
        "git_url",
        "ssh_url",
        "clone_url",
        "svn_url",
        "homepage",
        "size",
        "stargazers_count",
        "watchers_count",
        "language",
        "has_issues",
        "has_projects",
        "has_downloads",
        "has_wiki",
        "has_pages",
        "forks_count",
        "mirror_url",
        "archived",
        "open_issues_count",
        "license",
        "forks",
        "open_issues",
        "watchers",
        "default_branch",
        "is_template",
        "web_commit_signoff_required",
        "topics",
        "visibility"
      ],
      "additionalProperties": false,
      "description": "A git repository"
    },
    "User": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": [
            "string",
            "null"
          ]
        },
        "avatar_url": {
          "type": "string"
        },
        "gravatar_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "followers_url": {
          "type": "string"
        },
        "following_url": {
          "type": "string"
        },
        "gists_url": {
          "type": "string"
        },
        "starred_url": {
          "type": "string"
        },
        "subscriptions_url": {
          "type": "string"
        },
        "organizations_url": {
          "type": "string"
        },
        "repos_url": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "received_events_url": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Bot",
            "User",
            "Organization"
          ]
        },
        "site_admin": {
          "type": "boolean"
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "additionalProperties": false
    },
    "License": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "spdx_id": {
          "type": "string"
        },
        "url": {
          "type": [
            "string",
            "null"
          ]
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "name",
        "spdx_id",
        "url",
        "node_id"
      ],
      "additionalProperties": false
    },
    "InstallationLite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "The ID of the installation."
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id"
      ],
      "additionalProperties": false,
      "description": "Installation"
    },
    "Organization": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "repos_url": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "hooks_url": {
          "type": "string"
        },
        "issues_url": {
          "type": "string"
        },
        "members_url": {
          "type": "string"
        },
        "public_members_url": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "url",
        "repos_url",
        "events_url",
        "hooks_url",
        "issues_url",
        "members_url",
        "public_members_url",
        "avatar_url",
        "description"
      ],
      "additionalProperties": false
    },
    "BranchProtectionRuleDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "rule": {
          "$ref": "#/definitions/BranchProtectionRule"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "rule",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\""
    },
    "BranchProtectionRuleEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "rule": {
          "$ref": "#/definitions/BranchProtectionRule"
        },
        "changes": {
          "type": "object",
          "properties": {
            "admin_enforced": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleBoolean"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "allow_deletions_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "allow_force_pushes_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "authorized_actors_only": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleBoolean"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "authorized_actor_names": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleArray"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "authorized_dismissal_actors_only": {
              "type": "object",
              "properties": {
                "from": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/BranchProtectionRuleBoolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "dismiss_stale_reviews_on_push": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleBoolean"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "pull_request_reviews_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "require_code_owner_review": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleBoolean"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "required_approving_review_count": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleNumber"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "required_conversation_resolution_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "required_deployments_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "required_status_checks": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleArray"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "required_status_checks_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "signature_requirement_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "linear_history_requirement_enforcement_level": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/BranchProtectionRuleEnforcementLevel"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "If the action was `edited`, the changes to the rule."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "rule",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\""
    },
    "CheckRunEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/CheckRunCompletedEvent"
        },
        {
          "$ref": "#/definitions/CheckRunCreatedEvent"
        },
        {
          "$ref": "#/definitions/CheckRunRequestedActionEvent"
        },
        {
          "$ref": "#/definitions/CheckRunRerequestedEvent"
        }
      ]
    },
    "CheckRunCompletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "completed"
        },
        "check_run": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The id of the check."
            },
            "node_id": {
              "type": "string"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "details_url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "const": "completed",
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": "string",
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "properties": {
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "annotations_count": {
                  "type": "number"
                },
                "annotations_url": {
                  "type": "string"
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": {
                  "type": "string"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "in_progress",
                    "completed",
                    "queued"
                  ]
                },
                "conclusion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": {
                  "type": "string"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pull_requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckRunPullRequest"
                  },
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.\n\n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
                },
                "deployment": {
                  "$ref": "#/definitions/CheckRunDeployment"
                },
                "app": {
                  "$ref": "#/definitions/App"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "additionalProperties": false
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              }
            },
            "deployment": {
              "$ref": "#/definitions/CheckRunDeployment"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run)."
        },
        "requested_action": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The integrator reference of the action requested by the user."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ],
          "description": "The action requested by the user."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CheckRunPullRequest": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "number": {
          "type": "number"
        },
        "head": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/RepoRef"
            }
          },
          "required": [
            "ref",
            "sha",
            "repo"
          ],
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/RepoRef"
            }
          },
          "required": [
            "ref",
            "sha",
            "repo"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "url",
        "id",
        "number",
        "head",
        "base"
      ],
      "additionalProperties": false
    },
    "RepoRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "url",
        "name"
      ],
      "additionalProperties": false
    },
    "CheckRunDeployment": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "task": {
          "type": "string"
        },
        "original_environment": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "statuses_url": {
          "type": "string"
        },
        "repository_url": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "task",
        "original_environment",
        "environment",
        "description",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "additionalProperties": false,
      "description": "A deployment to a repository environment. This will only be populated if the check run was created by a GitHub Actions workflow job that references an environment."
    },
    "App": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier of the GitHub app"
        },
        "slug": {
          "type": "string",
          "description": "The slug name of the GitHub app"
        },
        "node_id": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "name": {
          "type": "string",
          "description": "The name of the GitHub app"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "actions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "administration": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "blocking": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "checks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "content_references": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "contents": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "deployments": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "discussions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "emails": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "environments": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "followers": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "issues": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "keys": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "members": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "merge_queues": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "metadata": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_administration": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_hooks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_packages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_plan": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_projects": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_secrets": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_self_hosted_runners": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_user_blocking": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "packages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "pages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "pull_requests": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "repository_hooks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "repository_projects": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "secret_scanning_alerts": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "secrets": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "security_events": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "security_scanning_alert": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "single_file": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "statuses": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "team_discussions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "vulnerability_alerts": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "workflows": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            }
          },
          "additionalProperties": false,
          "description": "The set of permissions for the GitHub app"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "content_reference",
              "create",
              "delete",
              "deployment",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "merge_group",
              "merge_queue_entry",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "security_and_analysis",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_run",
              "workflow_job"
            ]
          },
          "description": "The list of events for the GitHub app"
        }
      },
      "required": [
        "id",
        "node_id",
        "owner",
        "name",
        "description",
        "external_url",
        "html_url",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false,
      "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub."
    },
    "CheckRunCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "check_run": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The id of the check."
            },
            "node_id": {
              "type": "string"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "details_url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "queued",
                "in_progress",
                "completed",
                "waiting"
              ],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "properties": {
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "annotations_count": {
                  "type": "number"
                },
                "annotations_url": {
                  "type": "string"
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": {
                  "type": "string"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed"
                  ]
                },
                "conclusion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": {
                  "type": "string"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pull_requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckRunPullRequest"
                  },
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.\n\n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
                },
                "deployment": {
                  "$ref": "#/definitions/CheckRunDeployment"
                },
                "app": {
                  "$ref": "#/definitions/App"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "additionalProperties": false
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              }
            },
            "deployment": {
              "$ref": "#/definitions/CheckRunDeployment"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run)."
        },
        "requested_action": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The integrator reference of the action requested by the user."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ],
          "description": "The action requested by the user."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CheckRunRequestedActionEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "requested_action"
        },
        "check_run": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The id of the check."
            },
            "node_id": {
              "type": "string"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "details_url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "queued",
                "in_progress",
                "completed"
              ],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "properties": {
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "annotations_count": {
                  "type": "number"
                },
                "annotations_url": {
                  "type": "string"
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": {
                  "type": "string"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed",
                    "waiting"
                  ]
                },
                "conclusion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": {
                  "type": "string"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pull_requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckRunPullRequest"
                  },
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.\n\n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
                },
                "deployment": {
                  "$ref": "#/definitions/CheckRunDeployment"
                },
                "app": {
                  "$ref": "#/definitions/App"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "additionalProperties": false
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              }
            },
            "deployment": {
              "$ref": "#/definitions/CheckRunDeployment"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run)."
        },
        "requested_action": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The integrator reference of the action requested by the user."
            }
          },
          "additionalProperties": false,
          "description": "The action requested by the user."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_run",
        "requested_action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CheckRunRerequestedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "rerequested"
        },
        "check_run": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The id of the check."
            },
            "node_id": {
              "type": "string"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "details_url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "const": "completed",
              "description": "The phase of the lifecycle that the check is currently in."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`."
            },
            "started_at": {
              "type": "string",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": "string",
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "properties": {
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "annotations_count": {
                  "type": "number"
                },
                "annotations_url": {
                  "type": "string"
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check."
            },
            "check_suite": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": {
                  "type": "string"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "const": "completed"
                },
                "conclusion": {
                  "type": "string",
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale"
                  ]
                },
                "url": {
                  "type": "string"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pull_requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckRunPullRequest"
                  },
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.\n\n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
                },
                "deployment": {
                  "$ref": "#/definitions/CheckRunDeployment"
                },
                "app": {
                  "$ref": "#/definitions/App"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "additionalProperties": false
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              }
            },
            "deployment": {
              "$ref": "#/definitions/CheckRunDeployment"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run)."
        },
        "requested_action": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The integrator reference of the action requested by the user."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ],
          "description": "The action requested by the user."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CheckSuiteEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/CheckSuiteCompletedEvent"
        },
        {
          "$ref": "#/definitions/CheckSuiteRequestedEvent"
        },
        {
          "$ref": "#/definitions/CheckSuiteRerequestedEvent"
        }
      ]
    },
    "CheckSuiteCompletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "completed"
        },
        "check_suite": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "head_branch": {
              "type": [
                "string",
                "null"
              ],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`."
            },
            "url": {
              "type": "string",
              "description": "URL that points to the check suite API resource."
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "runs_rerequestable": {
              "type": "boolean"
            },
            "rerequestable": {
              "type": "boolean"
            },
            "latest_check_runs_count": {
              "type": "number"
            },
            "check_runs_url": {
              "type": "string"
            },
            "head_commit": {
              "$ref": "#/definitions/SimpleCommit"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites)."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "SimpleCommit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tree_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Committer"
        },
        "committer": {
          "$ref": "#/definitions/Committer"
        }
      },
      "required": [
        "id",
        "tree_id",
        "message",
        "timestamp",
        "author",
        "committer"
      ],
      "additionalProperties": false
    },
    "Committer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The git author's name."
        },
        "email": {
          "type": [
            "string",
            "null"
          ],
          "description": "The git author's email address."
        },
        "date": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email"
      ],
      "additionalProperties": false,
      "description": "Metaproperties for Git author/committer information."
    },
    "CheckSuiteRequestedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "requested"
        },
        "check_suite": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "head_branch": {
              "type": [
                "string",
                "null"
              ],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "url": {
              "type": "string",
              "description": "URL that points to the check suite API resource."
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "runs_rerequestable": {
              "type": "boolean"
            },
            "rerequestable": {
              "type": "boolean"
            },
            "latest_check_runs_count": {
              "type": "number"
            },
            "check_runs_url": {
              "type": "string"
            },
            "head_commit": {
              "$ref": "#/definitions/SimpleCommit"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites)."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CheckSuiteRerequestedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "rerequested"
        },
        "check_suite": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "head_branch": {
              "type": [
                "string",
                "null"
              ],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "url": {
              "type": "string",
              "description": "URL that points to the check suite API resource."
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckRunPullRequest"
              },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": {
              "$ref": "#/definitions/App"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "latest_check_runs_count": {
              "type": "number"
            },
            "check_runs_url": {
              "type": "string"
            },
            "head_commit": {
              "$ref": "#/definitions/SimpleCommit"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites)."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/CodeScanningAlertAppearedInBranchEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertClosedByUserEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertCreatedEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertFixedEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertReopenedEvent"
        },
        {
          "$ref": "#/definitions/CodeScanningAlertReopenedByUserEvent"
        }
      ]
    },
    "CodeScanningAlertAppearedInBranchEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "appeared_in_branch"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertInstance"
              }
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "dismissed",
                "fixed"
              ],
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "AlertInstance": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
        },
        "analysis_key": {
          "type": "string",
          "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
        },
        "environment": {
          "type": "string",
          "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "dismissed",
            "fixed"
          ],
          "description": "State of a code scanning alert."
        },
        "commit_sha": {
          "type": "string"
        },
        "message": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "location": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "start_line": {
              "type": "number"
            },
            "end_line": {
              "type": "number"
            },
            "start_column": {
              "type": "number"
            },
            "end_column": {
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "classifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "ref",
        "analysis_key",
        "environment",
        "state"
      ],
      "additionalProperties": false
    },
    "GitHubOrg": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "const": "github"
        },
        "id": {
          "type": "number",
          "const": 9919
        },
        "node_id": {
          "type": "string",
          "const": "MDEyOk9yZ2FuaXphdGlvbjk5MTk="
        },
        "name": {
          "type": "string",
          "const": "GitHub"
        },
        "email": {
          "type": "null"
        },
        "avatar_url": {
          "type": "string",
          "const": "https://avatars.githubusercontent.com/u/9919?v=4"
        },
        "gravatar_id": {
          "type": "string",
          "const": ""
        },
        "url": {
          "type": "string",
          "const": "https://api.github.com/users/github"
        },
        "html_url": {
          "type": "string",
          "const": "https://github.com/github"
        },
        "followers_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/followers"
        },
        "following_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/following{/other_user}"
        },
        "gists_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/gists{/gist_id}"
        },
        "starred_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/starred{/owner}{/repo}"
        },
        "subscriptions_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/subscriptions"
        },
        "organizations_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/orgs"
        },
        "repos_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/repos"
        },
        "events_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/events{/privacy}"
        },
        "received_events_url": {
          "type": "string",
          "const": "https://api.github.com/users/github/received_events"
        },
        "type": {
          "type": "string",
          "const": "Organization"
        },
        "site_admin": {
          "type": "boolean",
          "const": false
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertClosedByUserEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "closed_by_user"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "State of a code scanning alert.",
                    "const": "dismissed"
                  },
                  "ref": {
                    "type": "string",
                    "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
                  },
                  "analysis_key": {
                    "type": "string",
                    "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                  },
                  "commit_sha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "start_line": {
                        "type": "number"
                      },
                      "end_line": {
                        "type": "number"
                      },
                      "start_column": {
                        "type": "number"
                      },
                      "end_column": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "classifications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "analysis_key",
                  "environment",
                  "ref",
                  "state"
                ]
              }
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "state": {
              "type": "string",
              "const": "dismissed",
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "$ref": "#/definitions/User"
            },
            "dismissed_at": {
              "type": "string",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": {
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "tags": {
                  "type": "null"
                },
                "help": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "string",
                    "enum": [
                      "open",
                      "dismissed"
                    ],
                    "description": "State of a code scanning alert."
                  },
                  "ref": {
                    "type": "string",
                    "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
                  },
                  "analysis_key": {
                    "type": "string",
                    "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                  },
                  "commit_sha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "start_line": {
                        "type": "number"
                      },
                      "end_line": {
                        "type": "number"
                      },
                      "start_column": {
                        "type": "number"
                      },
                      "end_column": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "classifications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "analysis_key",
                  "environment",
                  "ref",
                  "state"
                ]
              }
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "dismissed"
              ],
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": {
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "tags": {
                  "type": "null"
                },
                "help": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertFixedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "fixed"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "State of a code scanning alert.",
                    "const": "fixed"
                  },
                  "ref": {
                    "type": "string",
                    "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
                  },
                  "analysis_key": {
                    "type": "string",
                    "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                  },
                  "commit_sha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "start_line": {
                        "type": "number"
                      },
                      "end_line": {
                        "type": "number"
                      },
                      "start_column": {
                        "type": "number"
                      },
                      "end_column": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "classifications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "analysis_key",
                  "environment",
                  "ref",
                  "state"
                ]
              }
            },
            "state": {
              "type": "string",
              "const": "fixed",
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": {
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "tags": {
                  "type": "null"
                },
                "help": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "instances_url": {
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "State of a code scanning alert.",
                    "const": "open"
                  },
                  "ref": {
                    "type": "string",
                    "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
                  },
                  "analysis_key": {
                    "type": "string",
                    "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                  },
                  "commit_sha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "start_line": {
                        "type": "number"
                      },
                      "end_line": {
                        "type": "number"
                      },
                      "start_column": {
                        "type": "number"
                      },
                      "end_column": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "classifications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "analysis_key",
                  "environment",
                  "ref",
                  "state"
                ]
              }
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "dismissed",
                "fixed"
              ],
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": {
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "tags": {
                  "type": "null"
                },
                "help": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CodeScanningAlertReopenedByUserEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened_by_user"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "State of a code scanning alert.",
                    "const": "open"
                  },
                  "ref": {
                    "type": "string",
                    "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
                  },
                  "analysis_key": {
                    "type": "string",
                    "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                  },
                  "commit_sha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "start_line": {
                        "type": "number"
                      },
                      "end_line": {
                        "type": "number"
                      },
                      "start_column": {
                        "type": "number"
                      },
                      "end_column": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "classifications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "analysis_key",
                  "environment",
                  "ref",
                  "state"
                ]
              }
            },
            "most_recent_instance": {
              "$ref": "#/definitions/AlertInstance"
            },
            "state": {
              "type": "string",
              "const": "open",
              "description": "State of a code scanning alert."
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The version of the tool used to detect the alert."
                }
              },
              "required": [
                "name",
                "version"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event."
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "CommitCommentEvent": {
      "$ref": "#/definitions/CommitCommentCreatedEvent"
    },
    "CommitCommentCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created",
          "description": "The action performed. Can be `created`."
        },
        "comment": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number",
              "description": "The ID of the commit comment."
            },
            "node_id": {
              "type": "string",
              "description": "The node ID of the commit comment."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "position": {
              "type": [
                "number",
                "null"
              ],
              "description": "The line index in the diff to which the comment applies."
            },
            "line": {
              "type": [
                "number",
                "null"
              ],
              "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
            },
            "path": {
              "type": [
                "string",
                "null"
              ],
              "description": "The relative path of the file to which the comment applies."
            },
            "commit_id": {
              "type": "string",
              "description": "The SHA of the commit to which the comment applies."
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "body": {
              "type": "string",
              "description": "The text of the comment."
            }
          },
          "required": [
            "url",
            "html_url",
            "id",
            "node_id",
            "user",
            "position",
            "line",
            "path",
            "commit_id",
            "created_at",
            "updated_at",
            "author_association",
            "body"
          ],
          "additionalProperties": false,
          "description": "The [commit comment](https://docs.github.com/en/rest/reference/repos#get-a-commit-comment) resource."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "comment",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "A commit comment is created. The type of activity is specified in the `action` property."
    },
    "AuthorAssociation": {
      "type": "string",
      "enum": [
        "COLLABORATOR",
        "CONTRIBUTOR",
        "FIRST_TIMER",
        "FIRST_TIME_CONTRIBUTOR",
        "MANNEQUIN",
        "MEMBER",
        "NONE",
        "OWNER"
      ],
      "description": "How the author is associated with the repository."
    },
    "CreateEvent": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource."
        },
        "ref_type": {
          "type": "string",
          "enum": [
            "tag",
            "branch"
          ],
          "description": "The type of Git ref object created in the repository. Can be either `branch` or `tag`."
        },
        "master_branch": {
          "type": "string",
          "description": "The name of the repository's default branch (usually `main`)."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "The repository's current description."
        },
        "pusher_type": {
          "type": "string",
          "description": "The pusher type for the event. Can be either `user` or a deploy key."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "ref",
        "ref_type",
        "master_branch",
        "description",
        "pusher_type",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "A Git branch or tag is created."
    },
    "DeleteEvent": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource."
        },
        "ref_type": {
          "type": "string",
          "enum": [
            "tag",
            "branch"
          ],
          "description": "The type of Git ref object deleted in the repository. Can be either `branch` or `tag`."
        },
        "pusher_type": {
          "type": "string",
          "description": "The pusher type for the event. Can be either `user` or a deploy key."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "ref",
        "ref_type",
        "pusher_type",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "A Git branch or tag is deleted."
    },
    "DependabotAlertEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/DependabotAlertCreatedEvent"
        },
        {
          "$ref": "#/definitions/DependabotAlertDismissedEvent"
        },
        {
          "$ref": "#/definitions/DependabotAlertFixedEvent"
        },
        {
          "$ref": "#/definitions/DependabotAlertReintroducedEvent"
        },
        {
          "$ref": "#/definitions/DependabotAlertReopenedEvent"
        }
      ]
    },
    "DependabotAlertCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the Dependabot alert.",
              "const": "open"
            },
            "fixed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "fix_started",
                "inaccurate",
                "no_bandwidth",
                "not_used",
                "tolerable_risk",
                null
              ],
              "description": "The reason that the alert was dismissed."
            },
            "dismissed_comment": {
              "type": [
                "string",
                "null"
              ],
              "description": "An optional comment associated with the alert's dismissal."
            },
            "number": {
              "type": "number",
              "description": "The security alert number."
            },
            "dependency": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "manifest_path": {
                  "type": "string",
                  "description": "The full path to the dependency manifest file, relative to the root of the repository."
                },
                "scope": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "development",
                    "runtime",
                    null
                  ],
                  "description": "The execution scope of the vulnerable dependency."
                }
              },
              "required": [
                "package",
                "manifest_path",
                "scope"
              ],
              "additionalProperties": false,
              "description": "Details for the vulnerable dependency."
            },
            "security_advisory": {
              "type": "object",
              "properties": {
                "ghsa_id": {
                  "type": "string",
                  "description": "Details for the GitHub Security Advisory."
                },
                "cve_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The unique CVE ID assigned to the advisory."
                },
                "summary": {
                  "type": "string",
                  "description": "A short, plain text summary of the advisory."
                },
                "description": {
                  "type": "string",
                  "description": "A long-form Markdown-supported description of the advisory."
                },
                "vulnerabilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "package": {
                        "$ref": "#/definitions/DependabotAlertPackage"
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high",
                          "critical"
                        ],
                        "description": "The severity of the vulnerability."
                      },
                      "vulnerable_version_range": {
                        "type": "string",
                        "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                      },
                      "first_patched_version": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string",
                            "description": "The package version that patches this vulnerability."
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false,
                        "description": "Details pertaining to the package version that patches this vulnerability."
                      }
                    },
                    "required": [
                      "package",
                      "severity",
                      "vulnerable_version_range",
                      "first_patched_version"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Vulnerable version range information for the advisory."
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the advisory."
                },
                "cvss": {
                  "$ref": "#/definitions/SecurityAdvisoryCvss"
                },
                "cwes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SecurityAdvisoryCwes"
                  },
                  "description": "Details for the advisory pertaining to Common Weakness Enumeration."
                },
                "identifiers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CVE",
                          "GHSA"
                        ],
                        "description": "The type of advisory identifier."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the advisory identifer."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Values that identify this advisory among security information sources."
                },
                "references": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL of the reference."
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Links to additional advisory information."
                },
                "published_at": {
                  "type": "string",
                  "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "withdrawn_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                }
              },
              "required": [
                "ghsa_id",
                "cve_id",
                "summary",
                "description",
                "vulnerabilities",
                "severity",
                "cvss",
                "cwes",
                "identifiers",
                "references",
                "published_at",
                "updated_at",
                "withdrawn_at"
              ],
              "additionalProperties": false,
              "description": "Details for the GitHub Security Advisory."
            },
            "security_vulnerability": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the vulnerability."
                },
                "vulnerable_version_range": {
                  "type": "string",
                  "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                },
                "first_patched_version": {
                  "type": "object",
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "description": "The package version that patches this vulnerability."
                    }
                  },
                  "required": [
                    "identifier"
                  ],
                  "additionalProperties": false,
                  "description": "Details pertaining to the package version that patches this vulnerability."
                }
              },
              "required": [
                "package",
                "severity",
                "vulnerable_version_range",
                "first_patched_version"
              ],
              "additionalProperties": false,
              "description": "Details pertaining to one vulnerable version range for the advisory."
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "updated_at": {
              "type": "string",
              "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            }
          },
          "required": [
            "created_at",
            "dependency",
            "dismissed_at",
            "dismissed_by",
            "dismissed_comment",
            "dismissed_reason",
            "fixed_at",
            "html_url",
            "number",
            "security_advisory",
            "security_vulnerability",
            "state",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DependabotAlert": {
      "type": "object",
      "properties": {
        "number": {
          "type": "number",
          "description": "The security alert number."
        },
        "state": {
          "type": "string",
          "description": "The state of the Dependabot alert.",
          "const": "open"
        },
        "dependency": {
          "type": "object",
          "properties": {
            "package": {
              "$ref": "#/definitions/DependabotAlertPackage"
            },
            "manifest_path": {
              "type": "string",
              "description": "The full path to the dependency manifest file, relative to the root of the repository."
            },
            "scope": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "development",
                "runtime",
                null
              ],
              "description": "The execution scope of the vulnerable dependency."
            }
          },
          "required": [
            "package",
            "manifest_path",
            "scope"
          ],
          "additionalProperties": false,
          "description": "Details for the vulnerable dependency."
        },
        "security_advisory": {
          "type": "object",
          "properties": {
            "ghsa_id": {
              "type": "string",
              "description": "Details for the GitHub Security Advisory."
            },
            "cve_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unique CVE ID assigned to the advisory."
            },
            "summary": {
              "type": "string",
              "description": "A short, plain text summary of the advisory."
            },
            "description": {
              "type": "string",
              "description": "A long-form Markdown-supported description of the advisory."
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package": {
                    "$ref": "#/definitions/DependabotAlertPackage"
                  },
                  "severity": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high",
                      "critical"
                    ],
                    "description": "The severity of the vulnerability."
                  },
                  "vulnerable_version_range": {
                    "type": "string",
                    "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                  },
                  "first_patched_version": {
                    "type": "object",
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "description": "The package version that patches this vulnerability."
                      }
                    },
                    "required": [
                      "identifier"
                    ],
                    "additionalProperties": false,
                    "description": "Details pertaining to the package version that patches this vulnerability."
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "additionalProperties": false
              },
              "description": "Vulnerable version range information for the advisory."
            },
            "severity": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ],
              "description": "The severity of the advisory."
            },
            "cvss": {
              "$ref": "#/definitions/SecurityAdvisoryCvss"
            },
            "cwes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityAdvisoryCwes"
              },
              "description": "Details for the advisory pertaining to Common Weakness Enumeration."
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CVE",
                      "GHSA"
                    ],
                    "description": "The type of advisory identifier."
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the advisory identifer."
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "additionalProperties": false
              },
              "description": "Values that identify this advisory among security information sources."
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL of the reference."
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              },
              "description": "Links to additional advisory information."
            },
            "published_at": {
              "type": "string",
              "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "updated_at": {
              "type": "string",
              "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            }
          },
          "required": [
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "vulnerabilities",
            "severity",
            "cvss",
            "cwes",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at"
          ],
          "additionalProperties": false,
          "description": "Details for the GitHub Security Advisory."
        },
        "security_vulnerability": {
          "type": "object",
          "properties": {
            "package": {
              "$ref": "#/definitions/DependabotAlertPackage"
            },
            "severity": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ],
              "description": "The severity of the vulnerability."
            },
            "vulnerable_version_range": {
              "type": "string",
              "description": "Conditions that identify vulnerable versions of this vulnerability's package."
            },
            "first_patched_version": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The package version that patches this vulnerability."
                }
              },
              "required": [
                "identifier"
              ],
              "additionalProperties": false,
              "description": "Details pertaining to the package version that patches this vulnerability."
            }
          },
          "required": [
            "package",
            "severity",
            "vulnerable_version_range",
            "first_patched_version"
          ],
          "additionalProperties": false,
          "description": "Details pertaining to one vulnerable version range for the advisory."
        },
        "url": {
          "type": "string",
          "description": "The REST API URL of the alert resource."
        },
        "html_url": {
          "type": "string",
          "description": "The GitHub URL of the alert resource."
        },
        "created_at": {
          "type": "string",
          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "updated_at": {
          "type": "string",
          "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "dismissed_at": {
          "type": [
            "string",
            "null"
          ],
          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "dismissed_by": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "dismissed_reason": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "fix_started",
            "inaccurate",
            "no_bandwidth",
            "not_used",
            "tolerable_risk",
            null
          ],
          "description": "The reason that the alert was dismissed."
        },
        "dismissed_comment": {
          "type": [
            "string",
            "null"
          ],
          "description": "An optional comment associated with the alert's dismissal."
        },
        "fixed_at": {
          "type": [
            "string",
            "null"
          ],
          "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        }
      },
      "required": [
        "number",
        "state",
        "dependency",
        "security_advisory",
        "security_vulnerability",
        "url",
        "html_url",
        "created_at",
        "updated_at",
        "dismissed_at",
        "dismissed_by",
        "dismissed_reason",
        "dismissed_comment",
        "fixed_at"
      ],
      "additionalProperties": false,
      "description": "A Dependabot alert."
    },
    "DependabotAlertPackage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique package name within its ecosystem."
        },
        "ecosystem": {
          "type": "string",
          "description": "The package's language or package management ecosystem."
        }
      },
      "required": [
        "name",
        "ecosystem"
      ],
      "additionalProperties": false,
      "description": "Details for the vulnerable package."
    },
    "SecurityAdvisoryCvss": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "The overall CVSS score of the advisory."
        },
        "vector_string": {
          "type": [
            "string",
            "null"
          ],
          "description": "The full CVSS vector string for the advisory."
        }
      },
      "required": [
        "score",
        "vector_string"
      ],
      "additionalProperties": false,
      "description": "Details for the advisory pertaining to the Common Vulnerability Scoring System."
    },
    "SecurityAdvisoryCwes": {
      "type": "object",
      "properties": {
        "cwe_id": {
          "type": "string",
          "description": "The unique CWE ID."
        },
        "name": {
          "type": "string",
          "description": "The short, plain text name of the CWE."
        }
      },
      "required": [
        "cwe_id",
        "name"
      ],
      "additionalProperties": false,
      "description": "A CWE weakness assigned to the advisory."
    },
    "DependabotAlertDismissedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "dismissed"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the Dependabot alert.",
              "const": "dismissed"
            },
            "dismissed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "fix_started",
                "inaccurate",
                "no_bandwidth",
                "not_used",
                "tolerable_risk",
                null
              ],
              "description": "The reason that the alert was dismissed."
            },
            "number": {
              "type": "number",
              "description": "The security alert number."
            },
            "dependency": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "manifest_path": {
                  "type": "string",
                  "description": "The full path to the dependency manifest file, relative to the root of the repository."
                },
                "scope": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "development",
                    "runtime",
                    null
                  ],
                  "description": "The execution scope of the vulnerable dependency."
                }
              },
              "required": [
                "package",
                "manifest_path",
                "scope"
              ],
              "additionalProperties": false,
              "description": "Details for the vulnerable dependency."
            },
            "security_advisory": {
              "type": "object",
              "properties": {
                "ghsa_id": {
                  "type": "string",
                  "description": "Details for the GitHub Security Advisory."
                },
                "cve_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The unique CVE ID assigned to the advisory."
                },
                "summary": {
                  "type": "string",
                  "description": "A short, plain text summary of the advisory."
                },
                "description": {
                  "type": "string",
                  "description": "A long-form Markdown-supported description of the advisory."
                },
                "vulnerabilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "package": {
                        "$ref": "#/definitions/DependabotAlertPackage"
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high",
                          "critical"
                        ],
                        "description": "The severity of the vulnerability."
                      },
                      "vulnerable_version_range": {
                        "type": "string",
                        "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                      },
                      "first_patched_version": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string",
                            "description": "The package version that patches this vulnerability."
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false,
                        "description": "Details pertaining to the package version that patches this vulnerability."
                      }
                    },
                    "required": [
                      "package",
                      "severity",
                      "vulnerable_version_range",
                      "first_patched_version"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Vulnerable version range information for the advisory."
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the advisory."
                },
                "cvss": {
                  "$ref": "#/definitions/SecurityAdvisoryCvss"
                },
                "cwes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SecurityAdvisoryCwes"
                  },
                  "description": "Details for the advisory pertaining to Common Weakness Enumeration."
                },
                "identifiers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CVE",
                          "GHSA"
                        ],
                        "description": "The type of advisory identifier."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the advisory identifer."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Values that identify this advisory among security information sources."
                },
                "references": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL of the reference."
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Links to additional advisory information."
                },
                "published_at": {
                  "type": "string",
                  "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "withdrawn_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                }
              },
              "required": [
                "ghsa_id",
                "cve_id",
                "summary",
                "description",
                "vulnerabilities",
                "severity",
                "cvss",
                "cwes",
                "identifiers",
                "references",
                "published_at",
                "updated_at",
                "withdrawn_at"
              ],
              "additionalProperties": false,
              "description": "Details for the GitHub Security Advisory."
            },
            "security_vulnerability": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the vulnerability."
                },
                "vulnerable_version_range": {
                  "type": "string",
                  "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                },
                "first_patched_version": {
                  "type": "object",
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "description": "The package version that patches this vulnerability."
                    }
                  },
                  "required": [
                    "identifier"
                  ],
                  "additionalProperties": false,
                  "description": "Details pertaining to the package version that patches this vulnerability."
                }
              },
              "required": [
                "package",
                "severity",
                "vulnerable_version_range",
                "first_patched_version"
              ],
              "additionalProperties": false,
              "description": "Details pertaining to one vulnerable version range for the advisory."
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "updated_at": {
              "type": "string",
              "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_comment": {
              "type": [
                "string",
                "null"
              ],
              "description": "An optional comment associated with the alert's dismissal."
            },
            "fixed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            }
          },
          "required": [
            "created_at",
            "dependency",
            "dismissed_at",
            "dismissed_by",
            "dismissed_comment",
            "dismissed_reason",
            "fixed_at",
            "html_url",
            "number",
            "security_advisory",
            "security_vulnerability",
            "state",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DependabotAlertFixedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "fixed"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the Dependabot alert.",
              "const": "fixed"
            },
            "fixed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "number": {
              "type": "number",
              "description": "The security alert number."
            },
            "dependency": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "manifest_path": {
                  "type": "string",
                  "description": "The full path to the dependency manifest file, relative to the root of the repository."
                },
                "scope": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "development",
                    "runtime",
                    null
                  ],
                  "description": "The execution scope of the vulnerable dependency."
                }
              },
              "required": [
                "package",
                "manifest_path",
                "scope"
              ],
              "additionalProperties": false,
              "description": "Details for the vulnerable dependency."
            },
            "security_advisory": {
              "type": "object",
              "properties": {
                "ghsa_id": {
                  "type": "string",
                  "description": "Details for the GitHub Security Advisory."
                },
                "cve_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The unique CVE ID assigned to the advisory."
                },
                "summary": {
                  "type": "string",
                  "description": "A short, plain text summary of the advisory."
                },
                "description": {
                  "type": "string",
                  "description": "A long-form Markdown-supported description of the advisory."
                },
                "vulnerabilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "package": {
                        "$ref": "#/definitions/DependabotAlertPackage"
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high",
                          "critical"
                        ],
                        "description": "The severity of the vulnerability."
                      },
                      "vulnerable_version_range": {
                        "type": "string",
                        "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                      },
                      "first_patched_version": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string",
                            "description": "The package version that patches this vulnerability."
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false,
                        "description": "Details pertaining to the package version that patches this vulnerability."
                      }
                    },
                    "required": [
                      "package",
                      "severity",
                      "vulnerable_version_range",
                      "first_patched_version"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Vulnerable version range information for the advisory."
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the advisory."
                },
                "cvss": {
                  "$ref": "#/definitions/SecurityAdvisoryCvss"
                },
                "cwes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SecurityAdvisoryCwes"
                  },
                  "description": "Details for the advisory pertaining to Common Weakness Enumeration."
                },
                "identifiers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CVE",
                          "GHSA"
                        ],
                        "description": "The type of advisory identifier."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the advisory identifer."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Values that identify this advisory among security information sources."
                },
                "references": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL of the reference."
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Links to additional advisory information."
                },
                "published_at": {
                  "type": "string",
                  "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                },
                "withdrawn_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                }
              },
              "required": [
                "ghsa_id",
                "cve_id",
                "summary",
                "description",
                "vulnerabilities",
                "severity",
                "cvss",
                "cwes",
                "identifiers",
                "references",
                "published_at",
                "updated_at",
                "withdrawn_at"
              ],
              "additionalProperties": false,
              "description": "Details for the GitHub Security Advisory."
            },
            "security_vulnerability": {
              "type": "object",
              "properties": {
                "package": {
                  "$ref": "#/definitions/DependabotAlertPackage"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "description": "The severity of the vulnerability."
                },
                "vulnerable_version_range": {
                  "type": "string",
                  "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                },
                "first_patched_version": {
                  "type": "object",
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "description": "The package version that patches this vulnerability."
                    }
                  },
                  "required": [
                    "identifier"
                  ],
                  "additionalProperties": false,
                  "description": "Details pertaining to the package version that patches this vulnerability."
                }
              },
              "required": [
                "package",
                "severity",
                "vulnerable_version_range",
                "first_patched_version"
              ],
              "additionalProperties": false,
              "description": "Details pertaining to one vulnerable version range for the advisory."
            },
            "url": {
              "type": "string",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "description": "The GitHub URL of the alert resource."
            },
            "created_at": {
              "type": "string",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "updated_at": {
              "type": "string",
              "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "fix_started",
                "inaccurate",
                "no_bandwidth",
                "not_used",
                "tolerable_risk",
                null
              ],
              "description": "The reason that the alert was dismissed."
            },
            "dismissed_comment": {
              "type": [
                "string",
                "null"
              ],
              "description": "An optional comment associated with the alert's dismissal."
            }
          },
          "required": [
            "created_at",
            "dependency",
            "dismissed_at",
            "dismissed_by",
            "dismissed_comment",
            "dismissed_reason",
            "fixed_at",
            "html_url",
            "number",
            "security_advisory",
            "security_vulnerability",
            "state",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DependabotAlertReintroducedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reintroduced"
        },
        "alert": {
          "$ref": "#/definitions/DependabotAlert"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DependabotAlertReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "alert": {
          "$ref": "#/definitions/DependabotAlert"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DeployKeyEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/DeployKeyCreatedEvent"
        },
        {
          "$ref": "#/definitions/DeployKeyDeletedEvent"
        }
      ]
    },
    "DeployKeyCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "key": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "key": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "verified": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string"
            },
            "read_only": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "additionalProperties": false,
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "key",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DeployKeyDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "key": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "key": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "verified": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string"
            },
            "read_only": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "additionalProperties": false,
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "key",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DeploymentEvent": {
      "$ref": "#/definitions/DeploymentCreatedEvent"
    },
    "DeploymentCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "workflow": {
          "anyOf": [
            {
              "$ref": "#/definitions/Workflow"
            },
            {
              "type": "null"
            }
          ]
        },
        "workflow_run": {
          "anyOf": [
            {
              "$ref": "#/definitions/DeploymentWorkflowRun"
            },
            {
              "type": "null"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "deployment",
        "workflow",
        "workflow_run",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "type": "number",
          "description": "Unique identifier of the deployment"
        },
        "node_id": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "ref": {
          "type": "string",
          "description": "The ref to deploy. This can be a branch, tag, or sha."
        },
        "task": {
          "type": "string",
          "description": "Parameter to specify a task to execute"
        },
        "payload": {
          "type": "object",
          "additionalProperties": {}
        },
        "original_environment": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "description": "Name of the target deployment environment."
        },
        "transient_environment": {
          "type": "boolean",
          "description": "Specifies if the given environment will no longer exist at some point in the future. Default: false."
        },
        "production_environment": {
          "type": "boolean",
          "description": "Specifies if the given environment is one that end-users directly interact with. Default: false."
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "statuses_url": {
          "type": "string"
        },
        "repository_url": {
          "type": "string"
        },
        "performed_via_github_app": {
          "anyOf": [
            {
              "$ref": "#/definitions/App"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "sha",
        "ref",
        "task",
        "payload",
        "original_environment",
        "environment",
        "description",
        "creator",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "additionalProperties": false,
      "description": "The [deployment](https://docs.github.com/en/rest/reference/deployments#list-deployments)."
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "badge_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "badge_url",
        "created_at",
        "html_url",
        "id",
        "name",
        "node_id",
        "path",
        "state",
        "updated_at",
        "url"
      ],
      "additionalProperties": false
    },
    "DeploymentWorkflowRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "display_title": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "head_branch": {
          "type": "string"
        },
        "head_sha": {
          "type": "string"
        },
        "run_number": {
          "type": "number"
        },
        "event": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "requested",
            "in_progress",
            "completed",
            "queued"
          ]
        },
        "conclusion": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            null
          ]
        },
        "workflow_id": {
          "type": "number"
        },
        "check_suite_id": {
          "type": "number"
        },
        "check_suite_node_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "pull_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckRunPullRequest"
          }
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/User"
        },
        "triggering_actor": {
          "$ref": "#/definitions/User"
        },
        "run_attempt": {
          "type": "number"
        },
        "run_started_at": {
          "type": "string"
        },
        "referenced_workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencedWorkflow"
          }
        }
      },
      "required": [
        "id",
        "name",
        "node_id",
        "head_branch",
        "head_sha",
        "run_number",
        "event",
        "status",
        "conclusion",
        "workflow_id",
        "check_suite_id",
        "check_suite_node_id",
        "url",
        "html_url",
        "pull_requests",
        "created_at",
        "updated_at",
        "actor",
        "triggering_actor",
        "run_attempt",
        "run_started_at"
      ],
      "additionalProperties": false
    },
    "ReferencedWorkflow": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        }
      },
      "required": [
        "path",
        "sha"
      ],
      "additionalProperties": false,
      "description": "A workflow referenced/reused by the initial caller workflow"
    },
    "DeploymentStatusEvent": {
      "$ref": "#/definitions/DeploymentStatusCreatedEvent"
    },
    "DeploymentStatusCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "deployment_status": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "description": "The new state. Can be `pending`, `success`, `failure`, or `error`."
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "description": {
              "type": "string",
              "description": "The optional human-readable description added to the status."
            },
            "environment": {
              "type": "string"
            },
            "environment_url": {
              "type": "string"
            },
            "log_url": {
              "type": "string"
            },
            "target_url": {
              "type": "string",
              "description": "The optional link added to the status."
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "deployment_url": {
              "type": "string"
            },
            "repository_url": {
              "type": "string"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "state",
            "creator",
            "description",
            "environment",
            "target_url",
            "created_at",
            "updated_at",
            "deployment_url",
            "repository_url"
          ],
          "additionalProperties": false,
          "description": "The [deployment status](https://docs.github.com/en/rest/reference/deployments#list-deployment-statuses)."
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "check_run": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The id of the check."
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "node_id": {
              "type": "string"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "details_url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "queued",
                "in_progress",
                "completed",
                "waiting"
              ],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "id",
            "name",
            "node_id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "details_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at"
          ],
          "additionalProperties": false
        },
        "workflow_run": {
          "$ref": "#/definitions/DeploymentWorkflowRun"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "deployment_status",
        "deployment",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/DiscussionAnsweredEvent"
        },
        {
          "$ref": "#/definitions/DiscussionCategoryChangedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionCreatedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionDeletedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionEditedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionLabeledEvent"
        },
        {
          "$ref": "#/definitions/DiscussionLockedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionPinnedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionTransferredEvent"
        },
        {
          "$ref": "#/definitions/DiscussionUnansweredEvent"
        },
        {
          "$ref": "#/definitions/DiscussionUnlabeledEvent"
        },
        {
          "$ref": "#/definitions/DiscussionUnlockedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionUnpinnedEvent"
        }
      ]
    },
    "DiscussionAnsweredEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "answered"
        },
        "discussion": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "repository_id": {
                  "type": "number"
                },
                "emoji": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "is_answerable": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "repository_id",
                "emoji",
                "name",
                "description",
                "created_at",
                "updated_at",
                "slug",
                "is_answerable"
              ],
              "additionalProperties": false
            },
            "answer_html_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "repository_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "The discussion post's title."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "locked",
                "converting"
              ]
            },
            "locked": {
              "type": "boolean"
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string",
              "description": "The discussion post's body text."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "active_lock_reason",
            "answer_chosen_at",
            "answer_chosen_by",
            "answer_html_url",
            "author_association",
            "body",
            "category",
            "comments",
            "created_at",
            "html_url",
            "id",
            "locked",
            "node_id",
            "number",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "user"
          ]
        },
        "answer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "parent_id": {
              "type": "null"
            },
            "child_comment_count": {
              "type": "number"
            },
            "repository_url": {
              "type": "string"
            },
            "discussion_id": {
              "type": "number"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "body": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "answer",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Discussion": {
      "type": "object",
      "properties": {
        "repository_url": {
          "type": "string"
        },
        "category": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "repository_id": {
              "type": "number"
            },
            "emoji": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "is_answerable": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "repository_id",
            "emoji",
            "name",
            "description",
            "created_at",
            "updated_at",
            "slug",
            "is_answerable"
          ],
          "additionalProperties": false
        },
        "answer_html_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "answer_chosen_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "answer_chosen_by": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "number"
        },
        "title": {
          "type": "string",
          "description": "The discussion post's title."
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "locked",
            "converting"
          ]
        },
        "locked": {
          "type": "boolean"
        },
        "comments": {
          "type": "number"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "active_lock_reason": {
          "type": [
            "string",
            "null"
          ]
        },
        "body": {
          "type": "string",
          "description": "The discussion post's body text."
        },
        "reactions": {
          "$ref": "#/definitions/Reactions"
        }
      },
      "required": [
        "repository_url",
        "category",
        "answer_html_url",
        "answer_chosen_at",
        "answer_chosen_by",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "state",
        "locked",
        "comments",
        "created_at",
        "updated_at",
        "author_association",
        "active_lock_reason",
        "body"
      ],
      "additionalProperties": false
    },
    "Reactions": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "total_count": {
          "type": "number"
        },
        "+1": {
          "type": "number"
        },
        "-1": {
          "type": "number"
        },
        "laugh": {
          "type": "number"
        },
        "hooray": {
          "type": "number"
        },
        "confused": {
          "type": "number"
        },
        "heart": {
          "type": "number"
        },
        "rocket": {
          "type": "number"
        },
        "eyes": {
          "type": "number"
        }
      },
      "required": [
        "url",
        "total_count",
        "+1",
        "-1",
        "laugh",
        "hooray",
        "confused",
        "heart",
        "rocket",
        "eyes"
      ],
      "additionalProperties": false
    },
    "DiscussionCategoryChangedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "repository_id": {
                      "type": "number"
                    },
                    "emoji": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "is_answerable": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "repository_id",
                    "emoji",
                    "name",
                    "description",
                    "created_at",
                    "updated_at",
                    "slug",
                    "is_answerable"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "category"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "category_changed"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "changes",
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "discussion": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "enum": [
                "open",
                "converting"
              ]
            },
            "locked": {
              "type": "boolean",
              "const": false
            },
            "answer_html_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "repository_url": {
              "type": "string"
            },
            "category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "repository_id": {
                  "type": "number"
                },
                "emoji": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "is_answerable": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "repository_id",
                "emoji",
                "name",
                "description",
                "created_at",
                "updated_at",
                "slug",
                "is_answerable"
              ],
              "additionalProperties": false
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "The discussion post's title."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string",
              "description": "The discussion post's body text."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "active_lock_reason",
            "answer_chosen_at",
            "answer_chosen_by",
            "answer_html_url",
            "author_association",
            "body",
            "category",
            "comments",
            "created_at",
            "html_url",
            "id",
            "locked",
            "node_id",
            "number",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionEditedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "title": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "edited"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionLabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "labeled"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Label": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "URL for the label"
        },
        "name": {
          "type": "string",
          "description": "The name of the label."
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "color": {
          "type": "string",
          "description": "6-character hex code, without the leading #, identifying the color"
        },
        "default": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "node_id",
        "url",
        "name",
        "description",
        "color",
        "default"
      ],
      "additionalProperties": false
    },
    "DiscussionLockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "locked"
        },
        "discussion": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "locked"
            },
            "locked": {
              "type": "boolean",
              "const": true
            },
            "repository_url": {
              "type": "string"
            },
            "category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "repository_id": {
                  "type": "number"
                },
                "emoji": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "is_answerable": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "repository_id",
                "emoji",
                "name",
                "description",
                "created_at",
                "updated_at",
                "slug",
                "is_answerable"
              ],
              "additionalProperties": false
            },
            "answer_html_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "The discussion post's title."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string",
              "description": "The discussion post's body text."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "active_lock_reason",
            "answer_chosen_at",
            "answer_chosen_by",
            "answer_html_url",
            "author_association",
            "body",
            "category",
            "comments",
            "created_at",
            "html_url",
            "id",
            "locked",
            "node_id",
            "number",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionPinnedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pinned"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionTransferredEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "new_discussion": {
              "$ref": "#/definitions/Discussion"
            },
            "new_repository": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "new_discussion",
            "new_repository"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "transferred"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "changes",
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionUnansweredEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unanswered"
        },
        "discussion": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "repository_id": {
                  "type": "number"
                },
                "emoji": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "is_answerable": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "repository_id",
                "emoji",
                "name",
                "description",
                "created_at",
                "updated_at",
                "slug",
                "is_answerable"
              ],
              "additionalProperties": false
            },
            "answer_html_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "repository_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "The discussion post's title."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "locked",
                "converting"
              ]
            },
            "locked": {
              "type": "boolean"
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string",
              "description": "The discussion post's body text."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "active_lock_reason",
            "answer_chosen_at",
            "answer_chosen_by",
            "answer_html_url",
            "author_association",
            "body",
            "category",
            "comments",
            "created_at",
            "html_url",
            "id",
            "locked",
            "node_id",
            "number",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "user"
          ]
        },
        "old_answer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "parent_id": {
              "type": "null"
            },
            "child_comment_count": {
              "type": "number"
            },
            "repository_url": {
              "type": "string"
            },
            "discussion_id": {
              "type": "number"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "body": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "old_answer",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionUnlabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlabeled"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionUnlockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlocked"
        },
        "discussion": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "open"
            },
            "locked": {
              "type": "boolean",
              "const": false
            },
            "repository_url": {
              "type": "string"
            },
            "category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "repository_id": {
                  "type": "number"
                },
                "emoji": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "is_answerable": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "repository_id",
                "emoji",
                "name",
                "description",
                "created_at",
                "updated_at",
                "slug",
                "is_answerable"
              ],
              "additionalProperties": false
            },
            "answer_html_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "answer_chosen_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "The discussion post's title."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string",
              "description": "The discussion post's body text."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "active_lock_reason",
            "answer_chosen_at",
            "answer_chosen_by",
            "answer_html_url",
            "author_association",
            "body",
            "category",
            "comments",
            "created_at",
            "html_url",
            "id",
            "locked",
            "node_id",
            "number",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionUnpinnedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unpinned"
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "DiscussionCommentEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/DiscussionCommentCreatedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionCommentDeletedEvent"
        },
        {
          "$ref": "#/definitions/DiscussionCommentEditedEvent"
        }
      ]
    },
    "DiscussionCommentCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "comment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "number",
                "null"
              ]
            },
            "child_comment_count": {
              "type": "number"
            },
            "repository_url": {
              "type": "string"
            },
            "discussion_id": {
              "type": "number"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "additionalProperties": false
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "additionalProperties": false
    },
    "DiscussionCommentDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "comment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "number",
                "null"
              ]
            },
            "child_comment_count": {
              "type": "number"
            },
            "repository_url": {
              "type": "string"
            },
            "discussion_id": {
              "type": "number"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "additionalProperties": false
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "additionalProperties": false
    },
    "DiscussionCommentEditedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "body"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "edited"
        },
        "comment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "number",
                "null"
              ]
            },
            "child_comment_count": {
              "type": "number"
            },
            "repository_url": {
              "type": "string"
            },
            "discussion_id": {
              "type": "number"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "additionalProperties": false
        },
        "discussion": {
          "$ref": "#/definitions/Discussion"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "changes",
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "additionalProperties": false
    },
    "ForkEvent": {
      "type": "object",
      "properties": {
        "forkee": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork.",
              "const": true
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived."
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ],
          "description": "The created [`repository`](https://docs.github.com/en/rest/reference/repos#get-a-repository) resource."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "forkee",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "A user forks a repository."
    },
    "GithubAppAuthorizationEvent": {
      "$ref": "#/definitions/GithubAppAuthorizationRevokedEvent"
    },
    "GithubAppAuthorizationRevokedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "revoked"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sender"
      ],
      "additionalProperties": false
    },
    "GollumEvent": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "page_name": {
                "type": "string",
                "description": "The name of the page."
              },
              "title": {
                "type": "string",
                "description": "The current page title."
              },
              "summary": {
                "type": "null"
              },
              "action": {
                "type": "string",
                "enum": [
                  "created",
                  "edited"
                ],
                "description": "The action that was performed on the page. Can be `created` or `edited`."
              },
              "sha": {
                "type": "string",
                "description": "The latest commit SHA of the page."
              },
              "html_url": {
                "type": "string",
                "description": "Points to the HTML wiki page."
              }
            },
            "required": [
              "page_name",
              "title",
              "summary",
              "action",
              "sha",
              "html_url"
            ],
            "additionalProperties": false
          },
          "description": "The pages that were updated."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "pages",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "A wiki page is created or updated."
    },
    "InstallationEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/InstallationCreatedEvent"
        },
        {
          "$ref": "#/definitions/InstallationDeletedEvent"
        },
        {
          "$ref": "#/definitions/InstallationNewPermissionsAcceptedEvent"
        },
        {
          "$ref": "#/definitions/InstallationSuspendEvent"
        },
        {
          "$ref": "#/definitions/InstallationUnsuspendEvent"
        }
      ]
    },
    "InstallationCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "installation": {
          "$ref": "#/definitions/Installation"
        },
        "repositories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects that the installation can access."
        },
        "requester": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "additionalProperties": false
    },
    "Installation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "The ID of the installation."
        },
        "account": {
          "$ref": "#/definitions/User"
        },
        "repository_selection": {
          "type": "string",
          "enum": [
            "all",
            "selected"
          ],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "access_tokens_url": {
          "type": "string"
        },
        "repositories_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "app_id": {
          "type": "number"
        },
        "app_slug": {
          "type": "string"
        },
        "target_id": {
          "type": "number",
          "description": "The ID of the user or organization this token is being scoped to."
        },
        "target_type": {
          "type": "string",
          "enum": [
            "User",
            "Organization"
          ]
        },
        "permissions": {
          "type": "object",
          "properties": {
            "actions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for GitHub Actions workflows, workflow runs, and artifacts."
            },
            "administration": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for repository creation, deletion, settings, teams, and collaborators creation."
            },
            "blocking": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "checks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for checks on code."
            },
            "content_references": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "contents": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for repository contents, commits, branches, downloads, releases, and merges."
            },
            "deployments": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for deployments and deployment statuses."
            },
            "discussions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "emails": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "environments": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for managing repository environments."
            },
            "issues": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for issues and related comments, assignees, labels, and milestones."
            },
            "members": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for organization teams and members."
            },
            "merge_queues": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "metadata": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to search repositories, list collaborators, and access repository metadata."
            },
            "organization_administration": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage access to an organization."
            },
            "organization_events": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "organization_hooks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage the post-receive hooks for an organization."
            },
            "organization_packages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for organization packages published to GitHub Packages."
            },
            "organization_plan": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for viewing an organization's plan."
            },
            "organization_projects": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage organization projects and projects beta (where available)."
            },
            "organization_secrets": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage organization secrets."
            },
            "organization_self_hosted_runners": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to view and manage GitHub Actions self-hosted runners available to an organization."
            },
            "organization_user_blocking": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to view and manage users blocked by the organization."
            },
            "packages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for packages published to GitHub Packages."
            },
            "pages": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
            },
            "pull_requests": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for pull requests and related comments, assignees, labels, milestones, and merges."
            },
            "repository_hooks": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage the post-receive hooks for a repository."
            },
            "repository_projects": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage repository projects, columns, and cards."
            },
            "secret_scanning_alerts": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to view and manage secret scanning alerts."
            },
            "secrets": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage repository secrets."
            },
            "security_events": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to view and manage security events like code scanning alerts."
            },
            "security_scanning_alert": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ]
            },
            "single_file": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage just a single file."
            },
            "statuses": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token for commit statuses."
            },
            "team_discussions": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage team discussions and related comments."
            },
            "vulnerability_alerts": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to manage Dependabot alerts."
            },
            "workflows": {
              "type": "string",
              "enum": [
                "read",
                "write"
              ],
              "description": "The level of permission granted to the access token to update GitHub Actions workflow files."
            }
          },
          "additionalProperties": false
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "content_reference",
              "create",
              "delete",
              "deployment",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "merge_queue_entry",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_job",
              "workflow_run"
            ]
          }
        },
        "created_at": {
          "type": [
            "string",
            "number"
          ]
        },
        "updated_at": {
          "type": [
            "string",
            "number"
          ]
        },
        "single_file_name": {
          "type": [
            "string",
            "null"
          ]
        },
        "has_multiple_single_files": {
          "type": "boolean"
        },
        "single_file_paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suspended_by": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "suspended_at": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "id",
        "account",
        "repository_selection",
        "access_tokens_url",
        "repositories_url",
        "html_url",
        "app_id",
        "target_id",
        "target_type",
        "permissions",
        "events",
        "created_at",
        "updated_at",
        "single_file_name",
        "suspended_by",
        "suspended_at"
      ],
      "additionalProperties": false,
      "description": "The GitHub App installation."
    },
    "InstallationDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "installation": {
          "$ref": "#/definitions/Installation"
        },
        "repositories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects that the installation can access."
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationNewPermissionsAcceptedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "new_permissions_accepted"
        },
        "installation": {
          "$ref": "#/definitions/Installation"
        },
        "repositories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects that the installation can access."
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationSuspendEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "suspend"
        },
        "installation": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "suspended_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "suspended_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number",
              "description": "The ID of the installation."
            },
            "account": {
              "$ref": "#/definitions/User"
            },
            "repository_selection": {
              "type": "string",
              "enum": [
                "all",
                "selected"
              ],
              "description": "Describe whether all repositories have been selected or there's a selection involved"
            },
            "access_tokens_url": {
              "type": "string"
            },
            "repositories_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "app_id": {
              "type": "number"
            },
            "app_slug": {
              "type": "string"
            },
            "target_id": {
              "type": "number",
              "description": "The ID of the user or organization this token is being scoped to."
            },
            "target_type": {
              "type": "string",
              "enum": [
                "User",
                "Organization"
              ]
            },
            "permissions": {
              "type": "object",
              "properties": {
                "actions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for GitHub Actions workflows, workflow runs, and artifacts."
                },
                "administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for repository creation, deletion, settings, teams, and collaborators creation."
                },
                "blocking": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "checks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for checks on code."
                },
                "content_references": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "contents": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for repository contents, commits, branches, downloads, releases, and merges."
                },
                "deployments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for deployments and deployment statuses."
                },
                "discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "emails": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "environments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for managing repository environments."
                },
                "issues": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for issues and related comments, assignees, labels, and milestones."
                },
                "members": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for organization teams and members."
                },
                "merge_queues": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "metadata": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to search repositories, list collaborators, and access repository metadata."
                },
                "organization_administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage access to an organization."
                },
                "organization_events": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage the post-receive hooks for an organization."
                },
                "organization_packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for organization packages published to GitHub Packages."
                },
                "organization_plan": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for viewing an organization's plan."
                },
                "organization_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage organization projects and projects beta (where available)."
                },
                "organization_secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage organization secrets."
                },
                "organization_self_hosted_runners": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage GitHub Actions self-hosted runners available to an organization."
                },
                "organization_user_blocking": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage users blocked by the organization."
                },
                "packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for packages published to GitHub Packages."
                },
                "pages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
                },
                "pull_requests": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for pull requests and related comments, assignees, labels, milestones, and merges."
                },
                "repository_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage the post-receive hooks for a repository."
                },
                "repository_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage repository projects, columns, and cards."
                },
                "secret_scanning_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage secret scanning alerts."
                },
                "secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage repository secrets."
                },
                "security_events": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage security events like code scanning alerts."
                },
                "security_scanning_alert": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "single_file": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage just a single file."
                },
                "statuses": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for commit statuses."
                },
                "team_discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage team discussions and related comments."
                },
                "vulnerability_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage Dependabot alerts."
                },
                "workflows": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to update GitHub Actions workflow files."
                }
              },
              "additionalProperties": false
            },
            "events": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "branch_protection_rule",
                  "check_run",
                  "check_suite",
                  "code_scanning_alert",
                  "commit_comment",
                  "content_reference",
                  "create",
                  "delete",
                  "deployment",
                  "deployment_review",
                  "deployment_status",
                  "deploy_key",
                  "discussion",
                  "discussion_comment",
                  "fork",
                  "gollum",
                  "issues",
                  "issue_comment",
                  "label",
                  "member",
                  "membership",
                  "merge_queue_entry",
                  "milestone",
                  "organization",
                  "org_block",
                  "page_build",
                  "project",
                  "projects_v2_item",
                  "project_card",
                  "project_column",
                  "public",
                  "pull_request",
                  "pull_request_review",
                  "pull_request_review_comment",
                  "pull_request_review_thread",
                  "push",
                  "registry_package",
                  "release",
                  "repository",
                  "repository_dispatch",
                  "secret_scanning_alert",
                  "secret_scanning_alert_location",
                  "star",
                  "status",
                  "team",
                  "team_add",
                  "watch",
                  "workflow_dispatch",
                  "workflow_job",
                  "workflow_run"
                ]
              }
            },
            "created_at": {
              "type": [
                "string",
                "number"
              ]
            },
            "updated_at": {
              "type": [
                "string",
                "number"
              ]
            },
            "single_file_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_multiple_single_files": {
              "type": "boolean"
            },
            "single_file_paths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "access_tokens_url",
            "account",
            "app_id",
            "created_at",
            "events",
            "html_url",
            "id",
            "permissions",
            "repositories_url",
            "repository_selection",
            "single_file_name",
            "suspended_at",
            "suspended_by",
            "target_id",
            "target_type",
            "updated_at"
          ]
        },
        "repositories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects that the installation can access."
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationUnsuspendEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unsuspend"
        },
        "installation": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "suspended_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "suspended_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number",
              "description": "The ID of the installation."
            },
            "account": {
              "$ref": "#/definitions/User"
            },
            "repository_selection": {
              "type": "string",
              "enum": [
                "all",
                "selected"
              ],
              "description": "Describe whether all repositories have been selected or there's a selection involved"
            },
            "access_tokens_url": {
              "type": "string"
            },
            "repositories_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "app_id": {
              "type": "number"
            },
            "app_slug": {
              "type": "string"
            },
            "target_id": {
              "type": "number",
              "description": "The ID of the user or organization this token is being scoped to."
            },
            "target_type": {
              "type": "string",
              "enum": [
                "User",
                "Organization"
              ]
            },
            "permissions": {
              "type": "object",
              "properties": {
                "actions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for GitHub Actions workflows, workflow runs, and artifacts."
                },
                "administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for repository creation, deletion, settings, teams, and collaborators creation."
                },
                "blocking": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "checks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for checks on code."
                },
                "content_references": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "contents": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for repository contents, commits, branches, downloads, releases, and merges."
                },
                "deployments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for deployments and deployment statuses."
                },
                "discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "emails": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "environments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for managing repository environments."
                },
                "issues": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for issues and related comments, assignees, labels, and milestones."
                },
                "members": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for organization teams and members."
                },
                "merge_queues": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "metadata": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to search repositories, list collaborators, and access repository metadata."
                },
                "organization_administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage access to an organization."
                },
                "organization_events": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage the post-receive hooks for an organization."
                },
                "organization_packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for organization packages published to GitHub Packages."
                },
                "organization_plan": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for viewing an organization's plan."
                },
                "organization_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage organization projects and projects beta (where available)."
                },
                "organization_secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage organization secrets."
                },
                "organization_self_hosted_runners": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage GitHub Actions self-hosted runners available to an organization."
                },
                "organization_user_blocking": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage users blocked by the organization."
                },
                "packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for packages published to GitHub Packages."
                },
                "pages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
                },
                "pull_requests": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for pull requests and related comments, assignees, labels, milestones, and merges."
                },
                "repository_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage the post-receive hooks for a repository."
                },
                "repository_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage repository projects, columns, and cards."
                },
                "secret_scanning_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage secret scanning alerts."
                },
                "secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage repository secrets."
                },
                "security_events": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to view and manage security events like code scanning alerts."
                },
                "security_scanning_alert": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "single_file": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage just a single file."
                },
                "statuses": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token for commit statuses."
                },
                "team_discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage team discussions and related comments."
                },
                "vulnerability_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to manage Dependabot alerts."
                },
                "workflows": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ],
                  "description": "The level of permission granted to the access token to update GitHub Actions workflow files."
                }
              },
              "additionalProperties": false
            },
            "events": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "branch_protection_rule",
                  "check_run",
                  "check_suite",
                  "code_scanning_alert",
                  "commit_comment",
                  "content_reference",
                  "create",
                  "delete",
                  "deployment",
                  "deployment_review",
                  "deployment_status",
                  "deploy_key",
                  "discussion",
                  "discussion_comment",
                  "fork",
                  "gollum",
                  "issues",
                  "issue_comment",
                  "label",
                  "member",
                  "membership",
                  "merge_queue_entry",
                  "milestone",
                  "organization",
                  "org_block",
                  "page_build",
                  "project",
                  "projects_v2_item",
                  "project_card",
                  "project_column",
                  "public",
                  "pull_request",
                  "pull_request_review",
                  "pull_request_review_comment",
                  "pull_request_review_thread",
                  "push",
                  "registry_package",
                  "release",
                  "repository",
                  "repository_dispatch",
                  "secret_scanning_alert",
                  "secret_scanning_alert_location",
                  "star",
                  "status",
                  "team",
                  "team_add",
                  "watch",
                  "workflow_dispatch",
                  "workflow_job",
                  "workflow_run"
                ]
              }
            },
            "created_at": {
              "type": [
                "string",
                "number"
              ]
            },
            "updated_at": {
              "type": [
                "string",
                "number"
              ]
            },
            "single_file_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_multiple_single_files": {
              "type": "boolean"
            },
            "single_file_paths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "access_tokens_url",
            "account",
            "app_id",
            "created_at",
            "events",
            "html_url",
            "id",
            "permissions",
            "repositories_url",
            "repository_selection",
            "single_file_name",
            "suspended_at",
            "suspended_by",
            "target_id",
            "target_type",
            "updated_at"
          ]
        },
        "repositories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects that the installation can access."
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationRepositoriesEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/InstallationRepositoriesAddedEvent"
        },
        {
          "$ref": "#/definitions/InstallationRepositoriesRemovedEvent"
        }
      ]
    },
    "InstallationRepositoriesAddedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "added"
        },
        "installation": {
          "$ref": "#/definitions/Installation"
        },
        "repository_selection": {
          "type": "string",
          "enum": [
            "all",
            "selected"
          ],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "repositories_added": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects, which were added to the installation."
        },
        "repositories_removed": {
          "type": "array",
          "minItems": 0,
          "maxItems": 0,
          "description": "An array of repository objects, which were removed from the installation."
        },
        "requester": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationRepositoriesRemovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "removed"
        },
        "installation": {
          "$ref": "#/definitions/Installation"
        },
        "repository_selection": {
          "type": "string",
          "enum": [
            "all",
            "selected"
          ],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "repositories_added": {
          "type": "array",
          "minItems": 0,
          "maxItems": 0,
          "description": "An array of repository objects, which were added to the installation."
        },
        "repositories_removed": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier of the repository"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": {
                "type": "string"
              },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "additionalProperties": false
          },
          "description": "An array of repository objects, which were removed from the installation."
        },
        "requester": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "additionalProperties": false
    },
    "InstallationTargetEvent": {
      "$ref": "#/definitions/InstallationTargetRenamedEvent"
    },
    "InstallationTargetRenamedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "login": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "slug": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "renamed"
        },
        "account": {
          "type": "object",
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "description": {
              "type": "null"
            },
            "events_url": {
              "type": "string"
            },
            "followers": {
              "type": "number"
            },
            "followers_url": {
              "type": "string"
            },
            "following": {
              "type": "number"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "has_organization_projects": {
              "type": "boolean"
            },
            "has_repository_projects": {
              "type": "boolean"
            },
            "hooks_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "is_verified": {
              "type": "boolean"
            },
            "issues_url": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "members_url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "public_gists": {
              "type": "number"
            },
            "public_members_url": {
              "type": "string"
            },
            "public_repos": {
              "type": "number"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "slug": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "Bot",
                "User",
                "Organization"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "website_url": {
              "type": "null"
            }
          },
          "required": [
            "avatar_url",
            "html_url",
            "id",
            "node_id"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "target_type": {
          "type": "string"
        }
      },
      "required": [
        "changes",
        "action",
        "account",
        "installation",
        "target_type"
      ],
      "additionalProperties": false,
      "description": "Somebody renamed the user or organization account that a GitHub App is installed on."
    },
    "IssueCommentEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/IssueCommentCreatedEvent"
        },
        {
          "$ref": "#/definitions/IssueCommentDeletedEvent"
        },
        {
          "$ref": "#/definitions/IssueCommentEditedEvent"
        }
      ]
    },
    "IssueCommentCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "locked": {
              "type": "boolean"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignee",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels",
            "labels_url",
            "locked",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "comment": {
          "$ref": "#/definitions/IssueComment"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Issue": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL for the issue"
        },
        "repository_url": {
          "type": "string"
        },
        "labels_url": {
          "type": "string"
        },
        "comments_url": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "number",
          "description": "Number uniquely identifying the issue within its repository"
        },
        "title": {
          "type": "string",
          "description": "Title of the issue"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ],
          "description": "State of the issue; either 'open' or 'closed'"
        },
        "locked": {
          "type": "boolean"
        },
        "assignee": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "milestone": {
          "anyOf": [
            {
              "$ref": "#/definitions/Milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "comments": {
          "type": "number"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "closed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "active_lock_reason": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ]
        },
        "draft": {
          "type": "boolean"
        },
        "performed_via_github_app": {
          "anyOf": [
            {
              "$ref": "#/definitions/App"
            },
            {
              "type": "null"
            }
          ]
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "body": {
          "type": [
            "string",
            "null"
          ],
          "description": "Contents of the issue"
        },
        "reactions": {
          "$ref": "#/definitions/Reactions"
        },
        "timeline_url": {
          "type": "string"
        },
        "state_reason": {
          "type": [
            "string",
            "null"
          ],
          "description": "The reason for the current state"
        }
      },
      "required": [
        "url",
        "repository_url",
        "labels_url",
        "comments_url",
        "events_url",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "assignees",
        "milestone",
        "comments",
        "created_at",
        "updated_at",
        "closed_at",
        "author_association",
        "active_lock_reason",
        "body",
        "reactions"
      ],
      "additionalProperties": false,
      "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself."
    },
    "Milestone": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "labels_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "number",
          "description": "The number of the milestone."
        },
        "title": {
          "type": "string",
          "description": "The title of the milestone."
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "open_issues": {
          "type": "number"
        },
        "closed_issues": {
          "type": "number"
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ],
          "description": "The state of the milestone."
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "due_on": {
          "type": [
            "string",
            "null"
          ]
        },
        "closed_at": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "url",
        "html_url",
        "labels_url",
        "id",
        "node_id",
        "number",
        "title",
        "description",
        "creator",
        "open_issues",
        "closed_issues",
        "state",
        "created_at",
        "updated_at",
        "due_on",
        "closed_at"
      ],
      "additionalProperties": false,
      "description": "A collection of related issues and pull requests."
    },
    "IssueComment": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL for the issue comment"
        },
        "html_url": {
          "type": "string"
        },
        "issue_url": {
          "type": "string"
        },
        "id": {
          "type": "number",
          "description": "Unique identifier of the issue comment"
        },
        "node_id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "body": {
          "type": "string",
          "description": "Contents of the issue comment"
        },
        "reactions": {
          "$ref": "#/definitions/Reactions"
        },
        "performed_via_github_app": {
          "anyOf": [
            {
              "$ref": "#/definitions/App"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "url",
        "html_url",
        "issue_url",
        "id",
        "node_id",
        "user",
        "created_at",
        "updated_at",
        "author_association",
        "body",
        "reactions",
        "performed_via_github_app"
      ],
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/issues#comments) itself."
    },
    "IssueCommentDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "locked": {
              "type": "boolean"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignee",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels",
            "labels_url",
            "locked",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "comment": {
          "$ref": "#/definitions/IssueComment"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssueCommentEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the comment."
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "locked": {
              "type": "boolean"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignee",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels",
            "labels_url",
            "locked",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "comment": {
          "$ref": "#/definitions/IssueComment"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/IssuesAssignedEvent"
        },
        {
          "$ref": "#/definitions/IssuesClosedEvent"
        },
        {
          "$ref": "#/definitions/IssuesDeletedEvent"
        },
        {
          "$ref": "#/definitions/IssuesDemilestonedEvent"
        },
        {
          "$ref": "#/definitions/IssuesEditedEvent"
        },
        {
          "$ref": "#/definitions/IssuesLabeledEvent"
        },
        {
          "$ref": "#/definitions/IssuesLockedEvent"
        },
        {
          "$ref": "#/definitions/IssuesMilestonedEvent"
        },
        {
          "$ref": "#/definitions/IssuesOpenedEvent"
        },
        {
          "$ref": "#/definitions/IssuesPinnedEvent"
        },
        {
          "$ref": "#/definitions/IssuesReopenedEvent"
        },
        {
          "$ref": "#/definitions/IssuesTransferredEvent"
        },
        {
          "$ref": "#/definitions/IssuesUnassignedEvent"
        },
        {
          "$ref": "#/definitions/IssuesUnlabeledEvent"
        },
        {
          "$ref": "#/definitions/IssuesUnlockedEvent"
        },
        {
          "$ref": "#/definitions/IssuesUnpinnedEvent"
        }
      ]
    },
    "IssuesAssignedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "assigned",
          "description": "The action that was performed."
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "assignee": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ],
          "description": "The optional user who was assigned or unassigned from the issue."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Activity related to an issue. The type of activity is specified in the action property."
    },
    "IssuesClosedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "closed",
          "description": "The action that was performed."
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the issue; either 'open' or 'closed'",
              "const": "closed"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "locked": {
              "type": "boolean"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesDemilestonedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "demilestoned"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "locked": {
              "type": "boolean"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "milestone": {
          "$ref": "#/definitions/Milestone"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the issue."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "changes",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesLabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "labeled"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesLockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "locked"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "locked": {
              "type": "boolean",
              "const": true
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "locked",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesMilestonedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "milestoned"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "locked": {
              "type": "boolean"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "milestone": {
          "$ref": "#/definitions/Milestone"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesOpenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "opened"
        },
        "changes": {
          "type": "object",
          "properties": {
            "old_issue": {
              "$ref": "#/definitions/Issue"
            },
            "old_repository": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "old_issue",
            "old_repository"
          ],
          "additionalProperties": false
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the issue; either 'open' or 'closed'",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "locked": {
              "type": "boolean"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesPinnedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pinned"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the issue; either 'open' or 'closed'",
              "const": "open"
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "locked": {
              "type": "boolean"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "state",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesTransferredEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "transferred"
        },
        "changes": {
          "type": "object",
          "properties": {
            "new_issue": {
              "$ref": "#/definitions/Issue"
            },
            "new_repository": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "new_issue",
            "new_repository"
          ],
          "additionalProperties": false
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesUnassignedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unassigned",
          "description": "The action that was performed."
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "assignee": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ],
          "description": "The optional user who was assigned or unassigned from the issue."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesUnlabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlabeled"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesUnlockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlocked"
        },
        "issue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "locked": {
              "type": "boolean",
              "const": false
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "url": {
              "type": "string",
              "description": "URL for the issue"
            },
            "repository_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the issue within its repository"
            },
            "title": {
              "type": "string",
              "description": "Title of the issue"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of the issue; either 'open' or 'closed'"
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "draft": {
              "type": "boolean"
            },
            "performed_via_github_app": {
              "anyOf": [
                {
                  "$ref": "#/definitions/App"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "diff_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                },
                "merged_at": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "Contents of the issue"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "timeline_url": {
              "type": "string"
            },
            "state_reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The reason for the current state"
            }
          },
          "required": [
            "active_lock_reason",
            "assignees",
            "author_association",
            "body",
            "closed_at",
            "comments",
            "comments_url",
            "created_at",
            "events_url",
            "html_url",
            "id",
            "labels_url",
            "locked",
            "milestone",
            "node_id",
            "number",
            "reactions",
            "repository_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "IssuesUnpinnedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unpinned"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "LabelEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/LabelCreatedEvent"
        },
        {
          "$ref": "#/definitions/LabelDeletedEvent"
        },
        {
          "$ref": "#/definitions/LabelEditedEvent"
        }
      ]
    },
    "LabelCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "LabelDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "LabelEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "changes": {
          "type": "object",
          "properties": {
            "color": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the color if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "description": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the label if the action was `edited`."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchaseEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/MarketplacePurchaseCancelledEvent"
        },
        {
          "$ref": "#/definitions/MarketplacePurchaseChangedEvent"
        },
        {
          "$ref": "#/definitions/MarketplacePurchasePendingChangeEvent"
        },
        {
          "$ref": "#/definitions/MarketplacePurchasePendingChangeCancelledEvent"
        },
        {
          "$ref": "#/definitions/MarketplacePurchasePurchasedEvent"
        }
      ]
    },
    "MarketplacePurchaseCancelledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "cancelled"
        },
        "effective_date": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "login": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "next_billing_date": {
              "type": "string"
            },
            "account": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "node_id": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "organization_billing_email": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "node_id",
                "login",
                "organization_billing_email"
              ],
              "additionalProperties": false
            },
            "billing_cycle": {
              "type": "string"
            },
            "unit_count": {
              "type": "number"
            },
            "on_free_trial": {
              "type": "boolean"
            },
            "free_trial_ends_on": {
              "type": [
                "string",
                "null"
              ]
            },
            "plan": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "monthly_price_in_cents": {
                  "type": "number"
                },
                "yearly_price_in_cents": {
                  "type": "number"
                },
                "price_model": {
                  "type": "string"
                },
                "has_free_trial": {
                  "type": "boolean"
                },
                "unit_name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bullets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "monthly_price_in_cents",
                "yearly_price_in_cents",
                "price_model",
                "has_free_trial",
                "unit_name",
                "bullets"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "account",
            "billing_cycle",
            "free_trial_ends_on",
            "next_billing_date",
            "on_free_trial",
            "plan",
            "unit_count"
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchase"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchase": {
      "type": "object",
      "properties": {
        "account": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "organization_billing_email": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "node_id",
            "login",
            "organization_billing_email"
          ],
          "additionalProperties": false
        },
        "billing_cycle": {
          "type": "string"
        },
        "unit_count": {
          "type": "number"
        },
        "on_free_trial": {
          "type": "boolean"
        },
        "free_trial_ends_on": {
          "type": [
            "string",
            "null"
          ]
        },
        "next_billing_date": {
          "type": "string"
        },
        "plan": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "monthly_price_in_cents": {
              "type": "number"
            },
            "yearly_price_in_cents": {
              "type": "number"
            },
            "price_model": {
              "type": "string"
            },
            "has_free_trial": {
              "type": "boolean"
            },
            "unit_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "bullets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "id",
            "name",
            "description",
            "monthly_price_in_cents",
            "yearly_price_in_cents",
            "price_model",
            "has_free_trial",
            "unit_name",
            "bullets"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "account",
        "billing_cycle",
        "unit_count",
        "on_free_trial",
        "free_trial_ends_on",
        "plan"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchaseChangedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "changed"
        },
        "effective_date": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "login": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "next_billing_date": {
              "type": "string"
            },
            "account": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "node_id": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "organization_billing_email": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "node_id",
                "login",
                "organization_billing_email"
              ],
              "additionalProperties": false
            },
            "billing_cycle": {
              "type": "string"
            },
            "unit_count": {
              "type": "number"
            },
            "on_free_trial": {
              "type": "boolean"
            },
            "free_trial_ends_on": {
              "type": [
                "string",
                "null"
              ]
            },
            "plan": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "monthly_price_in_cents": {
                  "type": "number"
                },
                "yearly_price_in_cents": {
                  "type": "number"
                },
                "price_model": {
                  "type": "string"
                },
                "has_free_trial": {
                  "type": "boolean"
                },
                "unit_name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bullets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "monthly_price_in_cents",
                "yearly_price_in_cents",
                "price_model",
                "has_free_trial",
                "unit_name",
                "bullets"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "account",
            "billing_cycle",
            "free_trial_ends_on",
            "next_billing_date",
            "on_free_trial",
            "plan",
            "unit_count"
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchase"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchasePendingChangeEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pending_change"
        },
        "effective_date": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "login": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "next_billing_date": {
              "type": "string"
            },
            "account": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "node_id": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "organization_billing_email": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "node_id",
                "login",
                "organization_billing_email"
              ],
              "additionalProperties": false
            },
            "billing_cycle": {
              "type": "string"
            },
            "unit_count": {
              "type": "number"
            },
            "on_free_trial": {
              "type": "boolean"
            },
            "free_trial_ends_on": {
              "type": [
                "string",
                "null"
              ]
            },
            "plan": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "monthly_price_in_cents": {
                  "type": "number"
                },
                "yearly_price_in_cents": {
                  "type": "number"
                },
                "price_model": {
                  "type": "string"
                },
                "has_free_trial": {
                  "type": "boolean"
                },
                "unit_name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bullets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "monthly_price_in_cents",
                "yearly_price_in_cents",
                "price_model",
                "has_free_trial",
                "unit_name",
                "bullets"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "account",
            "billing_cycle",
            "free_trial_ends_on",
            "next_billing_date",
            "on_free_trial",
            "plan",
            "unit_count"
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchase"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchasePendingChangeCancelledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pending_change_cancelled"
        },
        "effective_date": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "login": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "next_billing_date": {
              "type": "string"
            },
            "account": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "node_id": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "organization_billing_email": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "node_id",
                "login",
                "organization_billing_email"
              ],
              "additionalProperties": false
            },
            "billing_cycle": {
              "type": "string"
            },
            "unit_count": {
              "type": "number"
            },
            "on_free_trial": {
              "type": "boolean"
            },
            "free_trial_ends_on": {
              "type": [
                "string",
                "null"
              ]
            },
            "plan": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "monthly_price_in_cents": {
                  "type": "number"
                },
                "yearly_price_in_cents": {
                  "type": "number"
                },
                "price_model": {
                  "type": "string"
                },
                "has_free_trial": {
                  "type": "boolean"
                },
                "unit_name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bullets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "monthly_price_in_cents",
                "yearly_price_in_cents",
                "price_model",
                "has_free_trial",
                "unit_name",
                "bullets"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "account",
            "billing_cycle",
            "free_trial_ends_on",
            "next_billing_date",
            "on_free_trial",
            "plan",
            "unit_count"
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchase"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "additionalProperties": false
    },
    "MarketplacePurchasePurchasedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "purchased"
        },
        "effective_date": {
          "type": "string"
        },
        "sender": {
          "type": "object",
          "properties": {
            "login": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "next_billing_date": {
              "type": "string"
            },
            "account": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "node_id": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "organization_billing_email": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "node_id",
                "login",
                "organization_billing_email"
              ],
              "additionalProperties": false
            },
            "billing_cycle": {
              "type": "string"
            },
            "unit_count": {
              "type": "number"
            },
            "on_free_trial": {
              "type": "boolean"
            },
            "free_trial_ends_on": {
              "type": [
                "string",
                "null"
              ]
            },
            "plan": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "monthly_price_in_cents": {
                  "type": "number"
                },
                "yearly_price_in_cents": {
                  "type": "number"
                },
                "price_model": {
                  "type": "string"
                },
                "has_free_trial": {
                  "type": "boolean"
                },
                "unit_name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bullets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "monthly_price_in_cents",
                "yearly_price_in_cents",
                "price_model",
                "has_free_trial",
                "unit_name",
                "bullets"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "account",
            "billing_cycle",
            "free_trial_ends_on",
            "next_billing_date",
            "on_free_trial",
            "plan",
            "unit_count"
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchase"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "additionalProperties": false
    },
    "MemberEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/MemberAddedEvent"
        },
        {
          "$ref": "#/definitions/MemberEditedEvent"
        },
        {
          "$ref": "#/definitions/MemberRemovedEvent"
        }
      ]
    },
    "MemberAddedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "added"
        },
        "changes": {
          "type": "object",
          "properties": {
            "permission": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "enum": [
                    "write",
                    "admin"
                  ]
                }
              },
              "required": [
                "to"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "member": {
          "$ref": "#/definitions/User"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "member",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Activity related to repository collaborators. The type of activity is specified in the action property."
    },
    "MemberEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "member": {
          "$ref": "#/definitions/User"
        },
        "changes": {
          "type": "object",
          "properties": {
            "old_permission": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous permissions of the collaborator if the action was edited."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "old_permission"
          ],
          "additionalProperties": false,
          "description": "The changes to the collaborator permissions"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "member",
        "changes",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MemberRemovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "removed"
        },
        "member": {
          "$ref": "#/definitions/User"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "member",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MembershipEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/MembershipAddedEvent"
        },
        {
          "$ref": "#/definitions/MembershipRemovedEvent"
        }
      ]
    },
    "MembershipAddedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "added"
        },
        "scope": {
          "type": "string",
          "const": "team",
          "description": "The scope of the membership. Currently, can only be `team`."
        },
        "member": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "additionalProperties": false
    },
    "Team": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the team"
        },
        "id": {
          "type": "number",
          "description": "Unique identifier of the team"
        },
        "node_id": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "Description of the team"
        },
        "privacy": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "secret"
          ]
        },
        "url": {
          "type": "string",
          "description": "URL for the team"
        },
        "html_url": {
          "type": "string"
        },
        "members_url": {
          "type": "string"
        },
        "repositories_url": {
          "type": "string"
        },
        "permission": {
          "type": "string",
          "description": "Permission that the team will have for its repositories"
        },
        "parent": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the team"
                },
                "id": {
                  "type": "number",
                  "description": "Unique identifier of the team"
                },
                "node_id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Description of the team"
                },
                "privacy": {
                  "type": "string",
                  "enum": [
                    "open",
                    "closed",
                    "secret"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "URL for the team"
                },
                "html_url": {
                  "type": "string"
                },
                "members_url": {
                  "type": "string"
                },
                "repositories_url": {
                  "type": "string"
                },
                "permission": {
                  "type": "string",
                  "description": "Permission that the team will have for its repositories"
                }
              },
              "required": [
                "name",
                "id",
                "node_id",
                "slug",
                "description",
                "privacy",
                "url",
                "html_url",
                "members_url",
                "repositories_url",
                "permission"
              ],
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "name",
        "id",
        "node_id",
        "slug",
        "description",
        "privacy",
        "url",
        "html_url",
        "members_url",
        "repositories_url",
        "permission"
      ],
      "additionalProperties": false,
      "description": "Groups of organization members that gives permissions on specified repositories."
    },
    "MembershipRemovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "removed"
        },
        "scope": {
          "type": "string",
          "enum": [
            "team",
            "organization"
          ],
          "description": "The scope of the membership. Currently, can only be `team`."
        },
        "member": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "team": {
          "anyOf": [
            {
              "$ref": "#/definitions/Team"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "deleted": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "additionalProperties": false
            }
          ],
          "description": "The [team](https://docs.github.com/en/rest/reference/teams) for the membership."
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "additionalProperties": false
    },
    "MergeGroupEvent": {
      "$ref": "#/definitions/MergeGroupChecksRequestedEvent"
    },
    "MergeGroupChecksRequestedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "checks_requested"
        },
        "merge_group": {
          "type": "object",
          "properties": {
            "head_sha": {
              "type": "string",
              "description": "The SHA of the merge group."
            },
            "head_ref": {
              "type": "string",
              "description": "The full ref of the merge group."
            },
            "base_ref": {
              "type": "string",
              "description": "The full ref of the branch the merge group will be merged into."
            },
            "base_sha": {
              "type": "string",
              "description": "The SHA of the merge group's parent commit."
            },
            "head_commit": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "tree_id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "email"
                  ],
                  "additionalProperties": false
                },
                "committer": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "email"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "tree_id",
                "message",
                "timestamp",
                "author",
                "committer"
              ],
              "additionalProperties": false,
              "description": "An expanded representation of the `head_sha` commit."
            }
          },
          "required": [
            "head_sha",
            "head_ref",
            "base_ref",
            "base_sha",
            "head_commit"
          ],
          "additionalProperties": false,
          "description": "The merge group."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "merge_group",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MetaEvent": {
      "$ref": "#/definitions/MetaDeletedEvent"
    },
    "MetaDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "hook_id": {
          "type": "number",
          "description": "The id of the modified webhook."
        },
        "hook": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "active": {
              "type": "boolean"
            },
            "events": {
              "$ref": "#/definitions/WebhookEvents"
            },
            "config": {
              "type": "object",
              "properties": {
                "content_type": {
                  "type": "string",
                  "enum": [
                    "json",
                    "form"
                  ],
                  "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                },
                "secret": {
                  "type": "string",
                  "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers)."
                },
                "url": {
                  "type": "string",
                  "description": "The URL to which the payloads will be delivered."
                },
                "insecure_ssl": {
                  "type": "string",
                  "enum": [
                    "0",
                    "1"
                  ],
                  "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`."
                }
              },
              "required": [
                "content_type",
                "url",
                "insecure_ssl"
              ],
              "additionalProperties": false,
              "description": "Configuration object of the webhook"
            },
            "updated_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at"
          ],
          "additionalProperties": false,
          "description": "The modified webhook. This will contain different keys based on the type of webhook it is: repository, organization, business, app, or GitHub Marketplace."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "hook_id",
        "hook",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "WebhookEvents": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "create",
              "delete",
              "deployment",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "meta",
              "milestone",
              "organization",
              "org_block",
              "package",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_import",
              "repository_vulnerability_alert",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "security_and_analysis",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_job",
              "workflow_run"
            ]
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "const": "*"
          },
          "minItems": 1,
          "maxItems": 1
        }
      ]
    },
    "MilestoneEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/MilestoneClosedEvent"
        },
        {
          "$ref": "#/definitions/MilestoneCreatedEvent"
        },
        {
          "$ref": "#/definitions/MilestoneDeletedEvent"
        },
        {
          "$ref": "#/definitions/MilestoneEditedEvent"
        },
        {
          "$ref": "#/definitions/MilestoneOpenedEvent"
        }
      ]
    },
    "MilestoneClosedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "closed"
        },
        "milestone": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the milestone.",
              "const": "closed"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "The number of the milestone."
            },
            "title": {
              "type": "string",
              "description": "The title of the milestone."
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "open_issues": {
              "type": "number"
            },
            "closed_issues": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "due_on": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "closed_at",
            "closed_issues",
            "created_at",
            "creator",
            "description",
            "due_on",
            "html_url",
            "id",
            "labels_url",
            "node_id",
            "number",
            "open_issues",
            "state",
            "title",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MilestoneCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "milestone": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the milestone.",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "The number of the milestone."
            },
            "title": {
              "type": "string",
              "description": "The title of the milestone."
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "open_issues": {
              "type": "number"
            },
            "closed_issues": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "due_on": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "closed_at",
            "closed_issues",
            "created_at",
            "creator",
            "description",
            "due_on",
            "html_url",
            "id",
            "labels_url",
            "node_id",
            "number",
            "open_issues",
            "state",
            "title",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MilestoneDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "milestone": {
          "$ref": "#/definitions/Milestone"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MilestoneEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "description": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "due_on": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the due date if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the milestone if the action was `edited`."
        },
        "milestone": {
          "$ref": "#/definitions/Milestone"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "MilestoneOpenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "opened"
        },
        "milestone": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the milestone.",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "labels_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "The number of the milestone."
            },
            "title": {
              "type": "string",
              "description": "The title of the milestone."
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "open_issues": {
              "type": "number"
            },
            "closed_issues": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "due_on": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "closed_at",
            "closed_issues",
            "created_at",
            "creator",
            "description",
            "due_on",
            "html_url",
            "id",
            "labels_url",
            "node_id",
            "number",
            "open_issues",
            "state",
            "title",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "OrgBlockEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/OrgBlockBlockedEvent"
        },
        {
          "$ref": "#/definitions/OrgBlockUnblockedEvent"
        }
      ]
    },
    "OrgBlockBlockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "blocked"
        },
        "blocked_user": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "blocked_user",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "OrgBlockUnblockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unblocked"
        },
        "blocked_user": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "blocked_user",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "OrganizationEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/OrganizationDeletedEvent"
        },
        {
          "$ref": "#/definitions/OrganizationMemberAddedEvent"
        },
        {
          "$ref": "#/definitions/OrganizationMemberInvitedEvent"
        },
        {
          "$ref": "#/definitions/OrganizationMemberRemovedEvent"
        },
        {
          "$ref": "#/definitions/OrganizationRenamedEvent"
        }
      ]
    },
    "OrganizationDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "membership": {
          "$ref": "#/definitions/Membership"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "Membership": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "The state of the user's membership in the team."
        },
        "role": {
          "type": "string",
          "description": "The role of the user in the team."
        },
        "organization_url": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "url",
        "state",
        "role",
        "organization_url",
        "user"
      ],
      "additionalProperties": false,
      "description": "The membership between the user and the organization. Not present when the action is `member_invited`."
    },
    "OrganizationMemberAddedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "member_added"
        },
        "membership": {
          "$ref": "#/definitions/Membership"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "membership",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "OrganizationMemberInvitedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "member_invited"
        },
        "invitation": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "email": {
              "type": [
                "string",
                "null"
              ]
            },
            "role": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "failed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "failed_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "inviter": {
              "$ref": "#/definitions/User"
            },
            "team_count": {
              "type": "number"
            },
            "invitation_teams_url": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "login",
            "email",
            "role",
            "created_at",
            "failed_at",
            "failed_reason",
            "inviter",
            "team_count",
            "invitation_teams_url"
          ],
          "additionalProperties": false,
          "description": "The invitation for the user or email if the action is `member_invited`."
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "invitation",
        "user",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "OrganizationMemberRemovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "member_removed"
        },
        "membership": {
          "$ref": "#/definitions/Membership"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "membership",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "OrganizationRenamedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "login": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "login"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "renamed"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "changes",
        "action",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "PackageEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/PackagePublishedEvent"
        },
        {
          "$ref": "#/definitions/PackageUpdatedEvent"
        }
      ]
    },
    "PackagePublishedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "published"
        },
        "package": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "package_version": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique identifier of the package version."
                    },
                    "version": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": {
                      "type": "string"
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "object",
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/Repository"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "oid": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": [
                                    "number",
                                    "null"
                                  ]
                                },
                                "collection": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": false
                            },
                            "_formatted": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "repository",
                            "info",
                            "attributes",
                            "_formatted"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": {
                      "type": "string"
                    },
                    "release": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "tag_name": {
                          "type": "string"
                        },
                        "target_commitish": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "draft": {
                          "type": "boolean"
                        },
                        "author": {
                          "$ref": "#/definitions/User"
                        },
                        "prerelease": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "published_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "additionalProperties": false
                    },
                    "manifest": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "target_oid": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "container_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "labels": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "manifest": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tag": {
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "docker_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "npm_metadata": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/PackageNPMMetadata"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "nuget_metadata": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/PackageNugetMetadata"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "rubygems_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "download_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sha256": {
                            "type": "string"
                          },
                          "sha1": {
                            "type": "string"
                          },
                          "md5": {
                            "type": "string"
                          },
                          "content_type": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "package_url": {
                      "type": "string"
                    },
                    "author": {
                      "$ref": "#/definitions/User"
                    },
                    "source_url": {
                      "type": "string"
                    },
                    "installation_command": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ],
              "description": "A version of a software package"
            },
            "registry": {
              "type": "object",
              "properties": {
                "about_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "additionalProperties": false,
          "description": "Information about the package."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "package",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PackageNPMMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "npm_user": {
          "type": "string"
        },
        "author": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "bugs": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dev_dependencies": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "peer_dependencies": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "optional_dependencies": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "dist": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "git_head": {
          "type": "string"
        },
        "homepage": {
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "main": {
          "type": "string"
        },
        "repository": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "scripts": {
          "type": "object",
          "additionalProperties": {}
        },
        "id": {
          "type": "string"
        },
        "node_version": {
          "type": "string"
        },
        "npm_version": {
          "type": "string"
        },
        "has_shrinkwrap": {
          "type": "boolean"
        },
        "maintainers": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "contributors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "engines": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bin": {
          "type": "object",
          "additionalProperties": {}
        },
        "man": {
          "type": "object",
          "additionalProperties": {}
        },
        "directories": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "os": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpu": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readme": {
          "type": "string"
        },
        "installation_command": {
          "type": "string"
        },
        "release_id": {
          "type": "number"
        },
        "commit_oid": {
          "type": "string"
        },
        "published_via_actions": {
          "type": "boolean"
        },
        "deleted_by_id": {
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "PackageNugetMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "number"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "branch": {
                  "type": "string"
                },
                "commit": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PackageUpdatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "updated"
        },
        "package": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ]
            },
            "html_url": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "package_version": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique identifier of the package version."
                    },
                    "version": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": {
                      "type": "string"
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "object",
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/Repository"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "oid": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": [
                                    "number",
                                    "null"
                                  ]
                                },
                                "collection": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": false
                            },
                            "_formatted": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "repository",
                            "info",
                            "attributes",
                            "_formatted"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": {
                      "type": "string"
                    },
                    "release": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "tag_name": {
                          "type": "string"
                        },
                        "target_commitish": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "draft": {
                          "type": "boolean"
                        },
                        "author": {
                          "$ref": "#/definitions/User"
                        },
                        "prerelease": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "published_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "additionalProperties": false
                    },
                    "manifest": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "target_oid": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "container_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "labels": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "manifest": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "tag": {
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "docker_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "npm_metadata": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/PackageNPMMetadata"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "nuget_metadata": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/PackageNugetMetadata"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "rubygems_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "download_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sha256": {
                            "type": "string"
                          },
                          "sha1": {
                            "type": "string"
                          },
                          "md5": {
                            "type": "string"
                          },
                          "content_type": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "package_url": {
                      "type": "string"
                    },
                    "author": {
                      "$ref": "#/definitions/User"
                    },
                    "source_url": {
                      "type": "string"
                    },
                    "installation_command": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ],
              "description": "A version of a software package"
            },
            "registry": {
              "type": "object",
              "properties": {
                "about_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "additionalProperties": false,
          "description": "Information about the package."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "package",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PageBuildEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "build": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "error": {
              "type": "object",
              "properties": {
                "message": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "message"
              ],
              "additionalProperties": false
            },
            "pusher": {
              "$ref": "#/definitions/User"
            },
            "commit": {
              "type": "string"
            },
            "duration": {
              "type": "number"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "status",
            "error",
            "pusher",
            "commit",
            "duration",
            "created_at",
            "updated_at"
          ],
          "additionalProperties": false,
          "description": "The [List GitHub Pages builds](https://docs.github.com/en/rest/reference/repos#list-github-pages-builds) itself."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "id",
        "build",
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "Page Build"
    },
    "PingEvent": {
      "type": "object",
      "properties": {
        "zen": {
          "type": "string"
        },
        "hook_id": {
          "type": "number",
          "description": "The ID of the webhook that triggered the ping."
        },
        "hook": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Repository",
                "Organization",
                "App"
              ]
            },
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "active": {
              "type": "boolean"
            },
            "app_id": {
              "type": "number",
              "description": "When you register a new GitHub App, GitHub sends a ping event to the **webhook URL** you specified during registration. The event contains the `app_id`, which is required for [authenticating](https://docs.github.com/en/apps/building-integrations/setting-up-and-registering-github-apps/about-authentication-options-for-github-apps) an app."
            },
            "events": {
              "$ref": "#/definitions/WebhookEvents"
            },
            "config": {
              "type": "object",
              "properties": {
                "content_type": {
                  "type": "string",
                  "enum": [
                    "json",
                    "form"
                  ],
                  "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                },
                "secret": {
                  "type": "string",
                  "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers)."
                },
                "url": {
                  "type": "string",
                  "description": "The URL to which the payloads will be delivered."
                },
                "insecure_ssl": {
                  "type": "string",
                  "enum": [
                    "0",
                    "1"
                  ],
                  "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`."
                }
              },
              "required": [
                "content_type",
                "url",
                "insecure_ssl"
              ],
              "additionalProperties": false,
              "description": "Configuration object of the webhook"
            },
            "updated_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "test_url": {
              "type": "string"
            },
            "ping_url": {
              "type": "string"
            },
            "deliveries_url": {
              "type": "string"
            },
            "last_response": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "null"
                },
                "status": {
                  "type": "string"
                },
                "message": {
                  "type": "null"
                }
              },
              "required": [
                "code",
                "status",
                "message"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at",
            "url",
            "ping_url",
            "deliveries_url"
          ],
          "additionalProperties": false,
          "description": "The [webhook configuration](https://docs.github.com/en/rest/reference/repos#get-a-repository-webhook)."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "zen",
        "hook_id",
        "hook"
      ],
      "additionalProperties": false
    },
    "ProjectEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/ProjectClosedEvent"
        },
        {
          "$ref": "#/definitions/ProjectCreatedEvent"
        },
        {
          "$ref": "#/definitions/ProjectDeletedEvent"
        },
        {
          "$ref": "#/definitions/ProjectEditedEvent"
        },
        {
          "$ref": "#/definitions/ProjectReopenedEvent"
        }
      ]
    },
    "ProjectClosedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "closed"
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Project": {
      "type": "object",
      "properties": {
        "owner_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "columns_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the project"
        },
        "body": {
          "type": [
            "string",
            "null"
          ],
          "description": "Body of the project"
        },
        "number": {
          "type": "number"
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ],
          "description": "State of the project; either 'open' or 'closed'"
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "required": [
        "owner_url",
        "url",
        "html_url",
        "columns_url",
        "id",
        "node_id",
        "name",
        "body",
        "number",
        "state",
        "creator",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false
    },
    "ProjectCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The changes to the project if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the project if the action was `edited`."
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectCardEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/ProjectCardConvertedEvent"
        },
        {
          "$ref": "#/definitions/ProjectCardCreatedEvent"
        },
        {
          "$ref": "#/definitions/ProjectCardDeletedEvent"
        },
        {
          "$ref": "#/definitions/ProjectCardEditedEvent"
        },
        {
          "$ref": "#/definitions/ProjectCardMovedEvent"
        }
      ]
    },
    "ProjectCardConvertedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "converted"
        },
        "changes": {
          "type": "object",
          "properties": {
            "note": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "note"
          ],
          "additionalProperties": false
        },
        "project_card": {
          "$ref": "#/definitions/ProjectCard"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "changes",
        "project_card",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectCard": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "project_url": {
          "type": "string"
        },
        "column_url": {
          "type": "string"
        },
        "column_id": {
          "type": "number"
        },
        "id": {
          "type": "number",
          "description": "The project card's ID"
        },
        "node_id": {
          "type": "string"
        },
        "note": {
          "type": [
            "string",
            "null"
          ]
        },
        "archived": {
          "type": "boolean",
          "description": "Whether or not the card is archived"
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "content_url": {
          "type": "string"
        },
        "after_id": {
          "type": [
            "string",
            "number",
            "null"
          ]
        }
      },
      "required": [
        "url",
        "project_url",
        "column_url",
        "column_id",
        "id",
        "node_id",
        "note",
        "archived",
        "creator",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false
    },
    "ProjectCardCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "project_card": {
          "$ref": "#/definitions/ProjectCard"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectCardDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "project_card": {
          "$ref": "#/definitions/ProjectCard"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectCardEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "note": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "note"
          ],
          "additionalProperties": false
        },
        "project_card": {
          "$ref": "#/definitions/ProjectCard"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "changes",
        "project_card",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectCardMovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "moved"
        },
        "changes": {
          "type": "object",
          "properties": {
            "column_id": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "number"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "column_id"
          ],
          "additionalProperties": false
        },
        "project_card": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "after_id": {
              "type": [
                "string",
                "number",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "project_url": {
              "type": "string"
            },
            "column_url": {
              "type": "string"
            },
            "column_id": {
              "type": "number"
            },
            "id": {
              "type": "number",
              "description": "The project card's ID"
            },
            "node_id": {
              "type": "string"
            },
            "note": {
              "type": [
                "string",
                "null"
              ]
            },
            "archived": {
              "type": "boolean",
              "description": "Whether or not the card is archived"
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "content_url": {
              "type": "string"
            }
          },
          "required": [
            "after_id",
            "archived",
            "column_id",
            "column_url",
            "created_at",
            "creator",
            "id",
            "node_id",
            "note",
            "project_url",
            "updated_at",
            "url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectColumnEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/ProjectColumnCreatedEvent"
        },
        {
          "$ref": "#/definitions/ProjectColumnDeletedEvent"
        },
        {
          "$ref": "#/definitions/ProjectColumnEditedEvent"
        },
        {
          "$ref": "#/definitions/ProjectColumnMovedEvent"
        }
      ]
    },
    "ProjectColumnCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "project_column": {
          "$ref": "#/definitions/ProjectColumn"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectColumn": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "project_url": {
          "type": "string"
        },
        "cards_url": {
          "type": "string"
        },
        "id": {
          "type": "number",
          "description": "The unique identifier of the project column"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the project column"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "project_url",
        "cards_url",
        "id",
        "node_id",
        "name",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false
    },
    "ProjectColumnDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "project_column": {
          "$ref": "#/definitions/ProjectColumn"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectColumnEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project_column": {
          "$ref": "#/definitions/ProjectColumn"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "project_column",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectColumnMovedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "moved"
        },
        "project_column": {
          "$ref": "#/definitions/ProjectColumn"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/ProjectsV2ItemArchivedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemConvertedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemCreatedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemDeletedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemEditedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemReorderedEvent"
        },
        {
          "$ref": "#/definitions/ProjectsV2ItemRestoredEvent"
        }
      ]
    },
    "ProjectsV2ItemArchivedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "archived_at": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "null"
                },
                "to": {
                  "type": "string"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "archived_at"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "archived"
        },
        "projects_v2_item": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "archived_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "project_node_id": {
              "type": "string"
            },
            "content_node_id": {
              "type": "string"
            },
            "content_type": {
              "type": "string",
              "enum": [
                "DraftIssue",
                "Issue",
                "PullRequest"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "archived_at",
            "content_node_id",
            "content_type",
            "created_at",
            "creator",
            "id",
            "node_id",
            "project_node_id",
            "updated_at"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "project_node_id": {
          "type": "string"
        },
        "content_node_id": {
          "type": "string"
        },
        "content_type": {
          "type": "string",
          "enum": [
            "DraftIssue",
            "Issue",
            "PullRequest"
          ]
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "archived_at": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "id",
        "node_id",
        "project_node_id",
        "content_node_id",
        "content_type",
        "creator",
        "created_at",
        "updated_at",
        "archived_at"
      ],
      "additionalProperties": false,
      "description": "The project item itself. To find more information about the project item, you can use `node_id` (the node ID of the project item) and `project_node_id` (the node ID of the project) to query information in the GraphQL API. For more information, see \"[Using the API to manage projects](https://docs.github.com/en/issues/trying-out-the-new-projects-experience/using-the-api-to-manage-projects).\""
    },
    "ProjectsV2ItemConvertedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "content_type": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "const": "DraftIssue"
                },
                "to": {
                  "type": "string",
                  "const": "Issue"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "content_type"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "converted"
        },
        "projects_v2_item": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "content_type": {
              "type": "string",
              "const": "Issue"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "project_node_id": {
              "type": "string"
            },
            "content_node_id": {
              "type": "string"
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "archived_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "archived_at",
            "content_node_id",
            "content_type",
            "created_at",
            "creator",
            "id",
            "node_id",
            "project_node_id",
            "updated_at"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "projects_v2_item": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "archived_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "project_node_id": {
              "type": "string"
            },
            "content_node_id": {
              "type": "string"
            },
            "content_type": {
              "type": "string",
              "enum": [
                "DraftIssue",
                "Issue",
                "PullRequest"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "archived_at",
            "content_node_id",
            "content_type",
            "created_at",
            "creator",
            "id",
            "node_id",
            "project_node_id",
            "updated_at"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/ProjectsV2Item"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemEditedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "field_value": {
              "type": "object",
              "properties": {
                "field_type": {
                  "type": "string",
                  "enum": [
                    "single_select",
                    "date",
                    "number",
                    "text",
                    "iteration"
                  ]
                },
                "field_node_id": {
                  "type": "string"
                }
              },
              "required": [
                "field_type",
                "field_node_id"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "field_value"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "edited"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/ProjectsV2Item"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemReorderedEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "previous_projects_v2_item_node_id": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                },
                "to": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from",
                "to"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "previous_projects_v2_item_node_id"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "reordered"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/ProjectsV2Item"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "ProjectsV2ItemRestoredEvent": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "archived_at": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                },
                "to": {
                  "type": "null"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "archived_at"
          ],
          "additionalProperties": false
        },
        "action": {
          "type": "string",
          "const": "restored"
        },
        "projects_v2_item": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "archived_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "project_node_id": {
              "type": "string"
            },
            "content_node_id": {
              "type": "string"
            },
            "content_type": {
              "type": "string",
              "enum": [
                "DraftIssue",
                "Issue",
                "PullRequest"
              ]
            },
            "creator": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "archived_at",
            "content_node_id",
            "content_type",
            "created_at",
            "creator",
            "id",
            "node_id",
            "project_node_id",
            "updated_at"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "additionalProperties": false
    },
    "PublicEvent": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public.",
              "const": false
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived."
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "repository",
        "sender"
      ],
      "additionalProperties": false,
      "description": "When a private repository is made public."
    },
    "PullRequestEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/PullRequestAssignedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestAutoMergeDisabledEvent"
        },
        {
          "$ref": "#/definitions/PullRequestAutoMergeEnabledEvent"
        },
        {
          "$ref": "#/definitions/PullRequestClosedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestConvertedToDraftEvent"
        },
        {
          "$ref": "#/definitions/PullRequestDequeuedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestEditedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestLabeledEvent"
        },
        {
          "$ref": "#/definitions/PullRequestLockedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestOpenedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestQueuedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReadyForReviewEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReopenedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewRequestRemovedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewRequestedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestSynchronizeEvent"
        },
        {
          "$ref": "#/definitions/PullRequestUnassignedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestUnlabeledEvent"
        },
        {
          "$ref": "#/definitions/PullRequestUnlockedEvent"
        }
      ]
    },
    "PullRequestAssignedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "assigned"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "assignee": {
          "$ref": "#/definitions/User"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequest": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "diff_url": {
          "type": "string"
        },
        "patch_url": {
          "type": "string"
        },
        "issue_url": {
          "type": "string"
        },
        "number": {
          "type": "number",
          "description": "Number uniquely identifying the pull request within its repository."
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ],
          "description": "State of this Pull Request. Either `open` or `closed`."
        },
        "locked": {
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "description": "The title of the pull request."
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "body": {
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "closed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "merged_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "merge_commit_sha": {
          "type": [
            "string",
            "null"
          ]
        },
        "assignee": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "requested_reviewers": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/User"
              },
              {
                "$ref": "#/definitions/Team"
              }
            ]
          }
        },
        "requested_teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "milestone": {
          "anyOf": [
            {
              "$ref": "#/definitions/Milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "commits_url": {
          "type": "string"
        },
        "review_comments_url": {
          "type": "string"
        },
        "review_comment_url": {
          "type": "string"
        },
        "comments_url": {
          "type": "string"
        },
        "statuses_url": {
          "type": "string"
        },
        "head": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "repo": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "repo": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "additionalProperties": false
        },
        "_links": {
          "type": "object",
          "properties": {
            "self": {
              "$ref": "#/definitions/Link"
            },
            "html": {
              "$ref": "#/definitions/Link"
            },
            "issue": {
              "$ref": "#/definitions/Link"
            },
            "comments": {
              "$ref": "#/definitions/Link"
            },
            "review_comments": {
              "$ref": "#/definitions/Link"
            },
            "review_comment": {
              "$ref": "#/definitions/Link"
            },
            "commits": {
              "$ref": "#/definitions/Link"
            },
            "statuses": {
              "$ref": "#/definitions/Link"
            }
          },
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "additionalProperties": false
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "auto_merge": {
          "anyOf": [
            {
              "$ref": "#/definitions/PullRequestAutoMerge"
            },
            {
              "type": "null"
            }
          ]
        },
        "active_lock_reason": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ]
        },
        "draft": {
          "type": "boolean",
          "description": "Indicates whether or not the pull request is a draft."
        },
        "merged": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "mergeable": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "rebaseable": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "mergeable_state": {
          "type": "string"
        },
        "merged_by": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "comments": {
          "type": "number"
        },
        "review_comments": {
          "type": "number"
        },
        "maintainer_can_modify": {
          "type": "boolean",
          "description": "Indicates whether maintainers can modify the pull request."
        },
        "commits": {
          "type": "number"
        },
        "additions": {
          "type": "number"
        },
        "deletions": {
          "type": "number"
        },
        "changed_files": {
          "type": "number"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason",
        "draft",
        "merged",
        "mergeable",
        "rebaseable",
        "mergeable_state",
        "merged_by",
        "comments",
        "review_comments",
        "maintainer_can_modify",
        "commits",
        "additions",
        "deletions",
        "changed_files"
      ],
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "additionalProperties": false
    },
    "PullRequestAutoMerge": {
      "type": "object",
      "properties": {
        "enabled_by": {
          "$ref": "#/definitions/User"
        },
        "merge_method": {
          "type": "string",
          "enum": [
            "merge",
            "squash",
            "rebase"
          ],
          "description": "The merge method to use."
        },
        "commit_title": {
          "type": "string",
          "description": "Title for the merge commit message."
        },
        "commit_message": {
          "type": "string",
          "description": "Commit message for the merge commit."
        }
      },
      "required": [
        "enabled_by",
        "merge_method",
        "commit_title",
        "commit_message"
      ],
      "additionalProperties": false,
      "description": "The status of auto merging a pull request."
    },
    "PullRequestAutoMergeDisabledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "auto_merge_disabled"
        },
        "number": {
          "type": "number"
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "reason": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestAutoMergeEnabledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "auto_merge_enabled"
        },
        "number": {
          "type": "number"
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "reason": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestClosedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "closed"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of this Pull Request. Either `open` or `closed`.",
              "const": "closed"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the pull request within its repository."
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string",
              "description": "The title of the pull request."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean",
              "description": "Indicates whether or not the pull request is a draft."
            },
            "mergeable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "rebaseable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable_state": {
              "type": "string"
            },
            "merged_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments": {
              "type": "number"
            },
            "review_comments": {
              "type": "number"
            },
            "maintainer_can_modify": {
              "type": "boolean",
              "description": "Indicates whether maintainers can modify the pull request."
            },
            "commits": {
              "type": "number"
            },
            "additions": {
              "type": "number"
            },
            "deletions": {
              "type": "number"
            },
            "changed_files": {
              "type": "number"
            }
          },
          "required": [
            "_links",
            "active_lock_reason",
            "additions",
            "assignee",
            "assignees",
            "author_association",
            "auto_merge",
            "base",
            "body",
            "changed_files",
            "closed_at",
            "comments",
            "comments_url",
            "commits",
            "commits_url",
            "created_at",
            "deletions",
            "diff_url",
            "draft",
            "head",
            "html_url",
            "id",
            "issue_url",
            "labels",
            "locked",
            "maintainer_can_modify",
            "merge_commit_sha",
            "mergeable",
            "mergeable_state",
            "merged",
            "merged_at",
            "merged_by",
            "milestone",
            "node_id",
            "number",
            "patch_url",
            "rebaseable",
            "requested_reviewers",
            "requested_teams",
            "review_comment_url",
            "review_comments",
            "review_comments_url",
            "state",
            "statuses_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestConvertedToDraftEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "converted_to_draft"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "draft": {
              "type": "boolean",
              "description": "Indicates whether or not the pull request is a draft.",
              "const": true
            },
            "merged": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "merged_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the pull request within its repository."
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "State of this Pull Request. Either `open` or `closed`."
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string",
              "description": "The title of the pull request."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "mergeable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "rebaseable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable_state": {
              "type": "string"
            },
            "comments": {
              "type": "number"
            },
            "review_comments": {
              "type": "number"
            },
            "maintainer_can_modify": {
              "type": "boolean",
              "description": "Indicates whether maintainers can modify the pull request."
            },
            "commits": {
              "type": "number"
            },
            "additions": {
              "type": "number"
            },
            "deletions": {
              "type": "number"
            },
            "changed_files": {
              "type": "number"
            }
          },
          "required": [
            "_links",
            "active_lock_reason",
            "additions",
            "assignee",
            "assignees",
            "author_association",
            "auto_merge",
            "base",
            "body",
            "changed_files",
            "closed_at",
            "comments",
            "comments_url",
            "commits",
            "commits_url",
            "created_at",
            "deletions",
            "diff_url",
            "draft",
            "head",
            "html_url",
            "id",
            "issue_url",
            "labels",
            "locked",
            "maintainer_can_modify",
            "merge_commit_sha",
            "mergeable",
            "mergeable_state",
            "merged",
            "merged_at",
            "merged_by",
            "milestone",
            "node_id",
            "number",
            "patch_url",
            "rebaseable",
            "requested_reviewers",
            "requested_teams",
            "review_comment_url",
            "review_comments",
            "review_comments_url",
            "state",
            "statuses_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestDequeuedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "dequeued"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "reason": {
          "type": "string",
          "description": "The reason the pull request was removed from a merge queue."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "reason",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "additionalProperties": false
                },
                "sha": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "ref",
                "sha"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the comment if the action was `edited`."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "changes",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestLabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "labeled"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestLockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "locked"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestOpenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "opened"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of this Pull Request. Either `open` or `closed`.",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "merged_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the pull request within its repository."
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string",
              "description": "The title of the pull request."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "draft": {
              "type": "boolean",
              "description": "Indicates whether or not the pull request is a draft."
            },
            "merged": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "rebaseable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable_state": {
              "type": "string"
            },
            "comments": {
              "type": "number"
            },
            "review_comments": {
              "type": "number"
            },
            "maintainer_can_modify": {
              "type": "boolean",
              "description": "Indicates whether maintainers can modify the pull request."
            },
            "commits": {
              "type": "number"
            },
            "additions": {
              "type": "number"
            },
            "deletions": {
              "type": "number"
            },
            "changed_files": {
              "type": "number"
            }
          },
          "required": [
            "_links",
            "active_lock_reason",
            "additions",
            "assignee",
            "assignees",
            "author_association",
            "auto_merge",
            "base",
            "body",
            "changed_files",
            "closed_at",
            "comments",
            "comments_url",
            "commits",
            "commits_url",
            "created_at",
            "deletions",
            "diff_url",
            "draft",
            "head",
            "html_url",
            "id",
            "issue_url",
            "labels",
            "locked",
            "maintainer_can_modify",
            "merge_commit_sha",
            "mergeable",
            "mergeable_state",
            "merged",
            "merged_at",
            "merged_by",
            "milestone",
            "node_id",
            "number",
            "patch_url",
            "rebaseable",
            "requested_reviewers",
            "requested_teams",
            "review_comment_url",
            "review_comments",
            "review_comments_url",
            "state",
            "statuses_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestQueuedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "queued"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReadyForReviewEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "ready_for_review"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of this Pull Request. Either `open` or `closed`.",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "draft": {
              "type": "boolean",
              "description": "Indicates whether or not the pull request is a draft.",
              "const": false
            },
            "merged": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "merged_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the pull request within its repository."
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string",
              "description": "The title of the pull request."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "mergeable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "rebaseable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable_state": {
              "type": "string"
            },
            "comments": {
              "type": "number"
            },
            "review_comments": {
              "type": "number"
            },
            "maintainer_can_modify": {
              "type": "boolean",
              "description": "Indicates whether maintainers can modify the pull request."
            },
            "commits": {
              "type": "number"
            },
            "additions": {
              "type": "number"
            },
            "deletions": {
              "type": "number"
            },
            "changed_files": {
              "type": "number"
            }
          },
          "required": [
            "_links",
            "active_lock_reason",
            "additions",
            "assignee",
            "assignees",
            "author_association",
            "auto_merge",
            "base",
            "body",
            "changed_files",
            "closed_at",
            "comments",
            "comments_url",
            "commits",
            "commits_url",
            "created_at",
            "deletions",
            "diff_url",
            "draft",
            "head",
            "html_url",
            "id",
            "issue_url",
            "labels",
            "locked",
            "maintainer_can_modify",
            "merge_commit_sha",
            "mergeable",
            "mergeable_state",
            "merged",
            "merged_at",
            "merged_by",
            "milestone",
            "node_id",
            "number",
            "patch_url",
            "rebaseable",
            "requested_reviewers",
            "requested_teams",
            "review_comment_url",
            "review_comments",
            "review_comments_url",
            "state",
            "statuses_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "description": "State of this Pull Request. Either `open` or `closed`.",
              "const": "open"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "merged_by": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number",
              "description": "Number uniquely identifying the pull request within its repository."
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string",
              "description": "The title of the pull request."
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            },
            "draft": {
              "type": "boolean",
              "description": "Indicates whether or not the pull request is a draft."
            },
            "mergeable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "rebaseable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mergeable_state": {
              "type": "string"
            },
            "comments": {
              "type": "number"
            },
            "review_comments": {
              "type": "number"
            },
            "maintainer_can_modify": {
              "type": "boolean",
              "description": "Indicates whether maintainers can modify the pull request."
            },
            "commits": {
              "type": "number"
            },
            "additions": {
              "type": "number"
            },
            "deletions": {
              "type": "number"
            },
            "changed_files": {
              "type": "number"
            }
          },
          "required": [
            "_links",
            "active_lock_reason",
            "additions",
            "assignee",
            "assignees",
            "author_association",
            "auto_merge",
            "base",
            "body",
            "changed_files",
            "closed_at",
            "comments",
            "comments_url",
            "commits",
            "commits_url",
            "created_at",
            "deletions",
            "diff_url",
            "draft",
            "head",
            "html_url",
            "id",
            "issue_url",
            "labels",
            "locked",
            "maintainer_can_modify",
            "merge_commit_sha",
            "mergeable",
            "mergeable_state",
            "merged",
            "merged_at",
            "merged_by",
            "milestone",
            "node_id",
            "number",
            "patch_url",
            "rebaseable",
            "requested_reviewers",
            "requested_teams",
            "review_comment_url",
            "review_comments",
            "review_comments_url",
            "state",
            "statuses_url",
            "title",
            "updated_at",
            "url",
            "user"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewRequestRemovedEvent": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "const": "review_request_removed"
            },
            "number": {
              "type": "number",
              "description": "The pull request number."
            },
            "pull_request": {
              "$ref": "#/definitions/PullRequest"
            },
            "requested_reviewer": {
              "$ref": "#/definitions/User"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "installation": {
              "$ref": "#/definitions/InstallationLite"
            },
            "organization": {
              "$ref": "#/definitions/Organization"
            },
            "sender": {
              "$ref": "#/definitions/User"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "const": "review_request_removed"
            },
            "number": {
              "type": "number",
              "description": "The pull request number."
            },
            "pull_request": {
              "$ref": "#/definitions/PullRequest"
            },
            "requested_team": {
              "$ref": "#/definitions/Team"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "installation": {
              "$ref": "#/definitions/InstallationLite"
            },
            "organization": {
              "$ref": "#/definitions/Organization"
            },
            "sender": {
              "$ref": "#/definitions/User"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "additionalProperties": false
        }
      ]
    },
    "PullRequestReviewRequestedEvent": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "const": "review_requested"
            },
            "number": {
              "type": "number",
              "description": "The pull request number."
            },
            "pull_request": {
              "$ref": "#/definitions/PullRequest"
            },
            "requested_reviewer": {
              "$ref": "#/definitions/User"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "installation": {
              "$ref": "#/definitions/InstallationLite"
            },
            "organization": {
              "$ref": "#/definitions/Organization"
            },
            "sender": {
              "$ref": "#/definitions/User"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "const": "review_requested"
            },
            "number": {
              "type": "number",
              "description": "The pull request number."
            },
            "pull_request": {
              "$ref": "#/definitions/PullRequest"
            },
            "requested_team": {
              "$ref": "#/definitions/Team"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "installation": {
              "$ref": "#/definitions/InstallationLite"
            },
            "organization": {
              "$ref": "#/definitions/Organization"
            },
            "sender": {
              "$ref": "#/definitions/User"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "additionalProperties": false
        }
      ]
    },
    "PullRequestSynchronizeEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "synchronize"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "before": {
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "before",
        "after",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestUnassignedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unassigned"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "assignee": {
          "$ref": "#/definitions/User"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestUnlabeledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlabeled"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "label": {
          "$ref": "#/definitions/Label"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestUnlockedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unlocked"
        },
        "number": {
          "type": "number",
          "description": "The pull request number."
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/PullRequestReviewDismissedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewEditedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewSubmittedEvent"
        }
      ]
    },
    "PullRequestReviewDismissedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "dismissed"
        },
        "review": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "dismissed"
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the review"
            },
            "node_id": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ],
              "description": "The text of the review."
            },
            "commit_id": {
              "type": "string",
              "description": "A commit SHA for the review."
            },
            "submitted_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "html_url": {
              "type": "string"
            },
            "pull_request_url": {
              "type": "string"
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "_links": {
              "type": "object",
              "properties": {
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "pull_request": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "html",
                "pull_request"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "_links",
            "author_association",
            "body",
            "commit_id",
            "html_url",
            "id",
            "node_id",
            "pull_request_url",
            "state",
            "submitted_at",
            "user"
          ]
        },
        "pull_request": {
          "$ref": "#/definitions/SimplePullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReview": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier of the review"
        },
        "node_id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "body": {
          "type": [
            "string",
            "null"
          ],
          "description": "The text of the review."
        },
        "commit_id": {
          "type": "string",
          "description": "A commit SHA for the review."
        },
        "submitted_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "state": {
          "type": "string",
          "const": "dismissed"
        },
        "html_url": {
          "type": "string"
        },
        "pull_request_url": {
          "type": "string"
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "_links": {
          "type": "object",
          "properties": {
            "html": {
              "$ref": "#/definitions/Link"
            },
            "pull_request": {
              "$ref": "#/definitions/Link"
            }
          },
          "required": [
            "html",
            "pull_request"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "node_id",
        "user",
        "body",
        "commit_id",
        "submitted_at",
        "state",
        "html_url",
        "pull_request_url",
        "author_association",
        "_links"
      ],
      "additionalProperties": false,
      "description": "The review that was affected."
    },
    "SimplePullRequest": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "diff_url": {
          "type": "string"
        },
        "patch_url": {
          "type": "string"
        },
        "issue_url": {
          "type": "string"
        },
        "number": {
          "type": "number"
        },
        "state": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ]
        },
        "locked": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "body": {
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "closed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "merged_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "merge_commit_sha": {
          "type": [
            "string",
            "null"
          ]
        },
        "assignee": {
          "anyOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "requested_reviewers": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/User"
              },
              {
                "$ref": "#/definitions/Team"
              }
            ]
          }
        },
        "requested_teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "milestone": {
          "anyOf": [
            {
              "$ref": "#/definitions/Milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "draft": {
          "type": "boolean"
        },
        "commits_url": {
          "type": "string"
        },
        "review_comments_url": {
          "type": "string"
        },
        "review_comment_url": {
          "type": "string"
        },
        "comments_url": {
          "type": "string"
        },
        "statuses_url": {
          "type": "string"
        },
        "head": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "repo": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "repo": {
              "$ref": "#/definitions/Repository"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "additionalProperties": false
        },
        "_links": {
          "type": "object",
          "properties": {
            "self": {
              "$ref": "#/definitions/Link"
            },
            "html": {
              "$ref": "#/definitions/Link"
            },
            "issue": {
              "$ref": "#/definitions/Link"
            },
            "comments": {
              "$ref": "#/definitions/Link"
            },
            "review_comments": {
              "$ref": "#/definitions/Link"
            },
            "review_comment": {
              "$ref": "#/definitions/Link"
            },
            "commits": {
              "$ref": "#/definitions/Link"
            },
            "statuses": {
              "$ref": "#/definitions/Link"
            }
          },
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "additionalProperties": false
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "auto_merge": {
          "anyOf": [
            {
              "$ref": "#/definitions/PullRequestAutoMerge"
            },
            {
              "type": "null"
            }
          ]
        },
        "active_lock_reason": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ]
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "draft",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "review": {
          "$ref": "#/definitions/PullRequestReview"
        },
        "pull_request": {
          "$ref": "#/definitions/SimplePullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "changes",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewSubmittedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "submitted"
        },
        "review": {
          "$ref": "#/definitions/PullRequestReview"
        },
        "pull_request": {
          "$ref": "#/definitions/SimplePullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewCommentEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/PullRequestReviewCommentCreatedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewCommentDeletedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewCommentEditedEvent"
        }
      ]
    },
    "PullRequestReviewCommentCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "comment": {
          "$ref": "#/definitions/PullRequestReviewComment"
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewComment": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL for the pull request review comment"
        },
        "pull_request_review_id": {
          "type": "number",
          "description": "The ID of the pull request review to which the comment belongs."
        },
        "id": {
          "type": "number",
          "description": "The ID of the pull request review comment."
        },
        "node_id": {
          "type": "string",
          "description": "The node ID of the pull request review comment."
        },
        "diff_hunk": {
          "type": "string",
          "description": "The diff of the line that the comment refers to."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to which the comment applies."
        },
        "position": {
          "type": [
            "number",
            "null"
          ],
          "description": "The line index in the diff to which the comment applies."
        },
        "original_position": {
          "type": "number",
          "description": "The index of the original line in the diff to which the comment applies."
        },
        "commit_id": {
          "type": "string",
          "description": "The SHA of the commit to which the comment applies."
        },
        "original_commit_id": {
          "type": "string",
          "description": "The SHA of the original commit to which the comment applies."
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "body": {
          "type": "string",
          "description": "The text of the comment."
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "html_url": {
          "type": "string",
          "description": "HTML URL for the pull request review comment."
        },
        "pull_request_url": {
          "type": "string",
          "description": "URL for the pull request that the review comment belongs to."
        },
        "author_association": {
          "$ref": "#/definitions/AuthorAssociation"
        },
        "_links": {
          "type": "object",
          "properties": {
            "self": {
              "$ref": "#/definitions/Link"
            },
            "html": {
              "$ref": "#/definitions/Link"
            },
            "pull_request": {
              "$ref": "#/definitions/Link"
            }
          },
          "required": [
            "self",
            "html",
            "pull_request"
          ],
          "additionalProperties": false
        },
        "reactions": {
          "$ref": "#/definitions/Reactions"
        },
        "start_line": {
          "type": [
            "number",
            "null"
          ],
          "description": "The first line of the range for a multi-line comment."
        },
        "original_start_line": {
          "type": [
            "number",
            "null"
          ],
          "description": "The first line of the range for a multi-line comment."
        },
        "start_side": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "LEFT",
            "RIGHT",
            null
          ],
          "description": "The side of the first line of the range for a multi-line comment."
        },
        "line": {
          "type": [
            "number",
            "null"
          ],
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
        },
        "original_line": {
          "type": "number",
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
        },
        "side": {
          "type": "string",
          "enum": [
            "LEFT",
            "RIGHT"
          ],
          "description": "The side of the first line of the range for a multi-line comment."
        },
        "in_reply_to_id": {
          "type": "number",
          "description": "The comment ID to reply to."
        }
      },
      "required": [
        "url",
        "pull_request_review_id",
        "id",
        "node_id",
        "diff_hunk",
        "path",
        "position",
        "original_position",
        "commit_id",
        "original_commit_id",
        "user",
        "body",
        "created_at",
        "updated_at",
        "html_url",
        "pull_request_url",
        "author_association",
        "_links",
        "reactions",
        "start_line",
        "original_start_line",
        "start_side",
        "line",
        "original_line",
        "side"
      ],
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/pulls#comments) itself."
    },
    "PullRequestReviewCommentDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "comment": {
          "$ref": "#/definitions/PullRequestReviewComment"
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewCommentEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the comment."
        },
        "comment": {
          "$ref": "#/definitions/PullRequestReviewComment"
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "diff_url": {
              "type": "string"
            },
            "patch_url": {
              "type": "string"
            },
            "issue_url": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "state": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "locked": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/User"
            },
            "body": {
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/Team"
                  }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            },
            "milestone": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "draft": {
              "type": "boolean"
            },
            "commits_url": {
              "type": "string"
            },
            "review_comments_url": {
              "type": "string"
            },
            "review_comment_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "statuses_url": {
              "type": "string"
            },
            "head": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "repo": {
                  "$ref": "#/definitions/Repository"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "$ref": "#/definitions/Link"
                },
                "html": {
                  "$ref": "#/definitions/Link"
                },
                "issue": {
                  "$ref": "#/definitions/Link"
                },
                "comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comments": {
                  "$ref": "#/definitions/Link"
                },
                "review_comment": {
                  "$ref": "#/definitions/Link"
                },
                "commits": {
                  "$ref": "#/definitions/Link"
                },
                "statuses": {
                  "$ref": "#/definitions/Link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "additionalProperties": false
            },
            "auto_merge": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PullRequestAutoMerge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/AuthorAssociation"
            },
            "active_lock_reason": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ]
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "changes",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewThreadEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/PullRequestReviewThreadResolvedEvent"
        },
        {
          "$ref": "#/definitions/PullRequestReviewThreadUnresolvedEvent"
        }
      ]
    },
    "PullRequestReviewThreadResolvedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "resolved"
        },
        "thread": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "comments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PullRequestReviewComment"
              }
            }
          },
          "required": [
            "node_id",
            "comments"
          ],
          "additionalProperties": false
        },
        "pull_request": {
          "$ref": "#/definitions/SimplePullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "thread",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PullRequestReviewThreadUnresolvedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unresolved"
        },
        "thread": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "comments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PullRequestReviewComment"
              }
            }
          },
          "required": [
            "node_id",
            "comments"
          ],
          "additionalProperties": false
        },
        "pull_request": {
          "$ref": "#/definitions/SimplePullRequest"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "thread",
        "pull_request",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "PushEvent": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The full git ref that was pushed. Example: `refs/heads/main` or `refs/tags/v3.14.1`."
        },
        "before": {
          "type": "string",
          "description": "The SHA of the most recent commit on `ref` before the push."
        },
        "after": {
          "type": "string",
          "description": "The SHA of the most recent commit on `ref` after the push."
        },
        "created": {
          "type": "boolean",
          "description": "Whether this push created the `ref`."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether this push deleted the `ref`."
        },
        "forced": {
          "type": "boolean",
          "description": "Whether this push was a force push of the `ref`."
        },
        "base_ref": {
          "type": [
            "string",
            "null"
          ]
        },
        "compare": {
          "type": "string",
          "description": "URL that shows the changes in this `ref` update, from the `before` commit to the `after` commit. For a newly created `ref` that is directly based on the default branch, this is the comparison between the head of the default branch and the `after` commit. Otherwise, this shows all commits until the `after` commit."
        },
        "commits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Commit"
          },
          "description": "An array of commit objects describing the pushed commits. (Pushed commits are all commits that are included in the `compare` between the `before` commit and the `after` commit.) The array includes a maximum of 20 commits. If necessary, you can use the [Commits API](https://docs.github.com/en/rest/reference/repos#commits) to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries."
        },
        "head_commit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Commit"
            },
            {
              "type": "null"
            }
          ],
          "description": "For pushes where `after` is or points to a commit object, an expanded representation of that commit. For pushes where `after` refers to an annotated tag object, an expanded representation of the commit pointed to by the annotated tag."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "pusher": {
          "$ref": "#/definitions/Committer"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "ref",
        "before",
        "after",
        "created",
        "deleted",
        "forced",
        "base_ref",
        "compare",
        "commits",
        "head_commit",
        "repository",
        "pusher",
        "sender"
      ],
      "additionalProperties": false
    },
    "Commit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tree_id": {
          "type": "string"
        },
        "distinct": {
          "type": "boolean",
          "description": "Whether this commit is distinct from any that have been pushed before."
        },
        "message": {
          "type": "string",
          "description": "The commit message."
        },
        "timestamp": {
          "type": "string",
          "description": "The ISO 8601 timestamp of the commit."
        },
        "url": {
          "type": "string",
          "description": "URL that points to the commit API resource."
        },
        "author": {
          "$ref": "#/definitions/Committer"
        },
        "committer": {
          "$ref": "#/definitions/Committer"
        },
        "added": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of files added in the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were added."
        },
        "modified": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of files modified by the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were modified."
        },
        "removed": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of files removed in the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were removed."
        }
      },
      "required": [
        "id",
        "tree_id",
        "distinct",
        "message",
        "timestamp",
        "url",
        "author",
        "committer",
        "added",
        "modified",
        "removed"
      ],
      "additionalProperties": false
    },
    "RegistryPackageEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/RegistryPackagePublishedEvent"
        },
        {
          "$ref": "#/definitions/RegistryPackageUpdatedEvent"
        }
      ]
    },
    "RegistryPackagePublishedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "published"
        },
        "registry_package": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "package_version": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique identifier of the package version."
                    },
                    "version": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": {
                      "type": "string"
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "object",
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/Repository"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "oid": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": [
                                    "number",
                                    "null"
                                  ]
                                },
                                "collection": {
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": {}
                            },
                            "_formatted": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "repository",
                            "info"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": {
                      "type": "string"
                    },
                    "release": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "tag_name": {
                          "type": "string"
                        },
                        "target_commitish": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "draft": {
                          "type": "boolean"
                        },
                        "author": {
                          "$ref": "#/definitions/User"
                        },
                        "prerelease": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "published_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "additionalProperties": false
                    },
                    "manifest": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "target_oid": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "docker_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "container_metadata": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "source": {
                                  "type": "string"
                                },
                                "revision": {
                                  "type": "string"
                                },
                                "image_url": {
                                  "type": "string"
                                },
                                "licenses": {
                                  "type": "string"
                                },
                                "all_labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "manifest": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "string"
                                },
                                "media_type": {
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "number"
                                },
                                "config": {
                                  "type": "object",
                                  "properties": {
                                    "digest": {
                                      "type": "string"
                                    },
                                    "media_type": {
                                      "type": "string"
                                    },
                                    "size": {
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "layers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "digest": {
                                        "type": "string"
                                      },
                                      "media_type": {
                                        "type": "string"
                                      },
                                      "size": {
                                        "type": "number"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "tag": {
                          "type": "object",
                          "properties": {
                            "digest": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "npm_metadata": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/PackageNPMMetadata"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "nuget_metadata": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/PackageNugetMetadata"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "rubygems_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "download_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sha256": {
                            "type": "string"
                          },
                          "sha1": {
                            "type": "string"
                          },
                          "md5": {
                            "type": "string"
                          },
                          "content_type": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "package_url": {
                      "type": "string"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "avatar_url": {
                          "type": "string"
                        },
                        "events_url": {
                          "type": "string"
                        },
                        "followers_url": {
                          "type": "string"
                        },
                        "following_url": {
                          "type": "string"
                        },
                        "gists_url": {
                          "type": "string"
                        },
                        "gravatar_id": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "login": {
                          "type": "string"
                        },
                        "node_id": {
                          "type": "string"
                        },
                        "organizations_url": {
                          "type": "string"
                        },
                        "received_events_url": {
                          "type": "string"
                        },
                        "repos_url": {
                          "type": "string"
                        },
                        "site_admin": {
                          "type": "boolean"
                        },
                        "starred_url": {
                          "type": "string"
                        },
                        "subscriptions_url": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "avatar_url",
                        "events_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "gravatar_id",
                        "html_url",
                        "id",
                        "login",
                        "node_id",
                        "organizations_url",
                        "received_events_url",
                        "repos_url",
                        "site_admin",
                        "starred_url",
                        "subscriptions_url",
                        "type",
                        "url"
                      ],
                      "additionalProperties": false
                    },
                    "source_url": {
                      "type": "string"
                    },
                    "installation_command": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ],
              "description": "A version of a software package"
            },
            "registry": {
              "type": "object",
              "properties": {
                "about_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "additionalProperties": false,
          "description": "Information about the package."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "registry_package",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RegistryPackageUpdatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "updated"
        },
        "registry_package": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "updated_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "package_version": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique identifier of the package version."
                    },
                    "version": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": {
                      "type": "string"
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "object",
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/Repository"
                                }
                              },
                              "required": [
                                "repository"
                              ],
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "oid": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": [
                                    "number",
                                    "null"
                                  ]
                                },
                                "collection": {
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": {}
                            },
                            "_formatted": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "repository",
                            "info"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": {
                      "type": "string"
                    },
                    "release": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "tag_name": {
                          "type": "string"
                        },
                        "target_commitish": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "draft": {
                          "type": "boolean"
                        },
                        "author": {
                          "$ref": "#/definitions/User"
                        },
                        "prerelease": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "published_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "additionalProperties": false
                    },
                    "manifest": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "target_oid": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "docker_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "container_metadata": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "source": {
                                  "type": "string"
                                },
                                "revision": {
                                  "type": "string"
                                },
                                "image_url": {
                                  "type": "string"
                                },
                                "licenses": {
                                  "type": "string"
                                },
                                "all_labels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "manifest": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "string"
                                },
                                "media_type": {
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "number"
                                },
                                "config": {
                                  "type": "object",
                                  "properties": {
                                    "digest": {
                                      "type": "string"
                                    },
                                    "media_type": {
                                      "type": "string"
                                    },
                                    "size": {
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "layers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "digest": {
                                        "type": "string"
                                      },
                                      "media_type": {
                                        "type": "string"
                                      },
                                      "size": {
                                        "type": "number"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "tag": {
                          "type": "object",
                          "properties": {
                            "digest": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "npm_metadata": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/PackageNPMMetadata"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "nuget_metadata": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/PackageNugetMetadata"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "rubygems_metadata": {
                      "type": "array",
                      "items": {}
                    },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "download_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sha256": {
                            "type": "string"
                          },
                          "sha1": {
                            "type": "string"
                          },
                          "md5": {
                            "type": "string"
                          },
                          "content_type": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "package_url": {
                      "type": "string"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "avatar_url": {
                          "type": "string"
                        },
                        "events_url": {
                          "type": "string"
                        },
                        "followers_url": {
                          "type": "string"
                        },
                        "following_url": {
                          "type": "string"
                        },
                        "gists_url": {
                          "type": "string"
                        },
                        "gravatar_id": {
                          "type": "string"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "login": {
                          "type": "string"
                        },
                        "node_id": {
                          "type": "string"
                        },
                        "organizations_url": {
                          "type": "string"
                        },
                        "received_events_url": {
                          "type": "string"
                        },
                        "repos_url": {
                          "type": "string"
                        },
                        "site_admin": {
                          "type": "boolean"
                        },
                        "starred_url": {
                          "type": "string"
                        },
                        "subscriptions_url": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "avatar_url",
                        "events_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "gravatar_id",
                        "html_url",
                        "id",
                        "login",
                        "node_id",
                        "organizations_url",
                        "received_events_url",
                        "repos_url",
                        "site_admin",
                        "starred_url",
                        "subscriptions_url",
                        "type",
                        "url"
                      ],
                      "additionalProperties": false
                    },
                    "source_url": {
                      "type": "string"
                    },
                    "installation_command": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "null"
                }
              ],
              "description": "A version of a software package"
            },
            "registry": {
              "type": "object",
              "properties": {
                "about_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "additionalProperties": false,
          "description": "Information about the package."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "registry_package",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleaseEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/ReleaseCreatedEvent"
        },
        {
          "$ref": "#/definitions/ReleaseDeletedEvent"
        },
        {
          "$ref": "#/definitions/ReleaseEditedEvent"
        },
        {
          "$ref": "#/definitions/ReleasePrereleasedEvent"
        },
        {
          "$ref": "#/definitions/ReleasePublishedEvent"
        },
        {
          "$ref": "#/definitions/ReleaseReleasedEvent"
        },
        {
          "$ref": "#/definitions/ReleaseUnpublishedEvent"
        }
      ]
    },
    "ReleaseCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "release": {
          "$ref": "#/definitions/Release"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "Release": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "assets_url": {
          "type": "string"
        },
        "upload_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "tag_name": {
          "type": "string",
          "description": "The name of the tag."
        },
        "target_commitish": {
          "type": "string",
          "description": "Specifies the commitish value that determines where the Git tag is created from."
        },
        "name": {
          "type": "string"
        },
        "draft": {
          "type": "boolean",
          "description": "Wether the release is a draft or published"
        },
        "author": {
          "$ref": "#/definitions/User"
        },
        "prerelease": {
          "type": "boolean",
          "description": "Whether the release is identified as a prerelease or a full release."
        },
        "created_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "published_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseAsset"
          }
        },
        "tarball_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "zipball_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "body": {
          "type": "string"
        },
        "mentions_count": {
          "type": "number"
        },
        "reactions": {
          "$ref": "#/definitions/Reactions"
        },
        "discussion_url": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "assets_url",
        "upload_url",
        "html_url",
        "id",
        "node_id",
        "tag_name",
        "target_commitish",
        "name",
        "draft",
        "author",
        "prerelease",
        "created_at",
        "published_at",
        "assets",
        "tarball_url",
        "zipball_url",
        "body"
      ],
      "additionalProperties": false,
      "description": "The [release](https://docs.github.com/en/rest/reference/repos/#get-a-release) object."
    },
    "ReleaseAsset": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "browser_download_url": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The file name of the asset."
        },
        "label": {
          "type": [
            "string",
            "null"
          ]
        },
        "state": {
          "type": "string",
          "const": "uploaded",
          "description": "State of the release asset."
        },
        "content_type": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "download_count": {
          "type": "number"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "uploader": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "url",
        "browser_download_url",
        "id",
        "node_id",
        "name",
        "label",
        "state",
        "content_type",
        "size",
        "download_count",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false,
      "description": "Data related to a release."
    },
    "ReleaseDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "release": {
          "$ref": "#/definitions/Release"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleaseEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "release": {
          "$ref": "#/definitions/Release"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleasePrereleasedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "prereleased"
        },
        "release": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "prerelease": {
              "type": "boolean",
              "description": "Whether the release is identified as a prerelease or a full release.",
              "const": true
            },
            "url": {
              "type": "string"
            },
            "assets_url": {
              "type": "string"
            },
            "upload_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "tag_name": {
              "type": "string",
              "description": "The name of the tag."
            },
            "target_commitish": {
              "type": "string",
              "description": "Specifies the commitish value that determines where the Git tag is created from."
            },
            "name": {
              "type": "string"
            },
            "draft": {
              "type": "boolean",
              "description": "Wether the release is a draft or published"
            },
            "author": {
              "$ref": "#/definitions/User"
            },
            "created_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "published_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseAsset"
              }
            },
            "tarball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "zipball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string"
            },
            "mentions_count": {
              "type": "number"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "discussion_url": {
              "type": "string"
            }
          },
          "required": [
            "assets",
            "assets_url",
            "author",
            "body",
            "created_at",
            "draft",
            "html_url",
            "id",
            "name",
            "node_id",
            "prerelease",
            "published_at",
            "tag_name",
            "tarball_url",
            "target_commitish",
            "upload_url",
            "url",
            "zipball_url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleasePublishedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "published"
        },
        "release": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "published_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "assets_url": {
              "type": "string"
            },
            "upload_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "tag_name": {
              "type": "string",
              "description": "The name of the tag."
            },
            "target_commitish": {
              "type": "string",
              "description": "Specifies the commitish value that determines where the Git tag is created from."
            },
            "name": {
              "type": "string"
            },
            "draft": {
              "type": "boolean",
              "description": "Wether the release is a draft or published"
            },
            "author": {
              "$ref": "#/definitions/User"
            },
            "prerelease": {
              "type": "boolean",
              "description": "Whether the release is identified as a prerelease or a full release."
            },
            "created_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseAsset"
              }
            },
            "tarball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "zipball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string"
            },
            "mentions_count": {
              "type": "number"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "discussion_url": {
              "type": "string"
            }
          },
          "required": [
            "assets",
            "assets_url",
            "author",
            "body",
            "created_at",
            "draft",
            "html_url",
            "id",
            "name",
            "node_id",
            "prerelease",
            "published_at",
            "tag_name",
            "tarball_url",
            "target_commitish",
            "upload_url",
            "url",
            "zipball_url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleaseReleasedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "released"
        },
        "release": {
          "$ref": "#/definitions/Release"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "ReleaseUnpublishedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unpublished"
        },
        "release": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "published_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "type": "string"
            },
            "assets_url": {
              "type": "string"
            },
            "upload_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "tag_name": {
              "type": "string",
              "description": "The name of the tag."
            },
            "target_commitish": {
              "type": "string",
              "description": "Specifies the commitish value that determines where the Git tag is created from."
            },
            "name": {
              "type": "string"
            },
            "draft": {
              "type": "boolean",
              "description": "Wether the release is a draft or published"
            },
            "author": {
              "$ref": "#/definitions/User"
            },
            "prerelease": {
              "type": "boolean",
              "description": "Whether the release is identified as a prerelease or a full release."
            },
            "created_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseAsset"
              }
            },
            "tarball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "zipball_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "body": {
              "type": "string"
            },
            "mentions_count": {
              "type": "number"
            },
            "reactions": {
              "$ref": "#/definitions/Reactions"
            },
            "discussion_url": {
              "type": "string"
            }
          },
          "required": [
            "assets",
            "assets_url",
            "author",
            "body",
            "created_at",
            "draft",
            "html_url",
            "id",
            "name",
            "node_id",
            "prerelease",
            "published_at",
            "tag_name",
            "tarball_url",
            "target_commitish",
            "upload_url",
            "url",
            "zipball_url"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/RepositoryArchivedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryCreatedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryDeletedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryEditedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryPrivatizedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryPublicizedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryRenamedEvent"
        },
        {
          "$ref": "#/definitions/RepositoryTransferredEvent"
        },
        {
          "$ref": "#/definitions/RepositoryUnarchivedEvent"
        }
      ]
    },
    "RepositoryArchivedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "archived"
        },
        "repository": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived.",
              "const": true
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "description": {
              "type": "object",
              "properties": {
                "from": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "default_branch": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "homepage": {
              "type": "object",
              "properties": {
                "from": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryPrivatizedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "privatized"
        },
        "repository": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public.",
              "const": true
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived."
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryPublicizedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "publicized"
        },
        "repository": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public.",
              "const": false
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived."
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryRenamedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "renamed"
        },
        "changes": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "repository"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryTransferredEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "transferred"
        },
        "changes": {
          "type": "object",
          "properties": {
            "owner": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "owner"
          ],
          "additionalProperties": false
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryUnarchivedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "unarchived"
        },
        "repository": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "archived": {
              "type": "boolean",
              "description": "Whether the repository is archived.",
              "const": false
            },
            "id": {
              "type": "number",
              "description": "Unique identifier of the repository"
            },
            "node_id": {
              "type": "string",
              "description": "The GraphQL identifier of the repository."
            },
            "name": {
              "type": "string",
              "description": "The name of the repository."
            },
            "full_name": {
              "type": "string",
              "description": "The full, globally unique, name of the repository."
            },
            "private": {
              "type": "boolean",
              "description": "Whether the repository is private or public."
            },
            "owner": {
              "$ref": "#/definitions/User"
            },
            "html_url": {
              "type": "string",
              "description": "The URL to view the repository on GitHub.com."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The repository description."
            },
            "fork": {
              "type": "boolean",
              "description": "Whether the repository is a fork."
            },
            "url": {
              "type": "string",
              "description": "The URL to get more information about the repository from the GitHub API."
            },
            "forks_url": {
              "type": "string",
              "description": "The API URL to list the forks of the repository."
            },
            "keys_url": {
              "type": "string",
              "description": "A template for the API URL to get information about deploy keys on the repository."
            },
            "collaborators_url": {
              "type": "string",
              "description": "A template for the API URL to get information about collaborators of the repository."
            },
            "teams_url": {
              "type": "string",
              "description": "The API URL to list the teams on the repository."
            },
            "hooks_url": {
              "type": "string",
              "description": "The API URL to list the hooks on the repository."
            },
            "issue_events_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue events on the repository."
            },
            "events_url": {
              "type": "string",
              "description": "The API URL to list the events of the repository."
            },
            "assignees_url": {
              "type": "string",
              "description": "A template for the API URL to list the available assignees for issues in the repository."
            },
            "branches_url": {
              "type": "string",
              "description": "A template for the API URL to get information about branches in the repository."
            },
            "tags_url": {
              "type": "string",
              "description": "The API URL to get information about tags on the repository."
            },
            "blobs_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
            },
            "git_tags_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git tags of the repository."
            },
            "git_refs_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git refs of the repository."
            },
            "trees_url": {
              "type": "string",
              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
            },
            "statuses_url": {
              "type": "string",
              "description": "A template for the API URL to get information about statuses of a commit."
            },
            "languages_url": {
              "type": "string",
              "description": "The API URL to get information about the languages of the repository."
            },
            "stargazers_url": {
              "type": "string",
              "description": "The API URL to list the stargazers on the repository."
            },
            "contributors_url": {
              "type": "string",
              "description": "A template for the API URL to list the contributors to the repository."
            },
            "subscribers_url": {
              "type": "string",
              "description": "The API URL to list the subscribers on the repository."
            },
            "subscription_url": {
              "type": "string",
              "description": "The API URL to subscribe to notifications for this repository."
            },
            "commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about commits on the repository."
            },
            "git_commits_url": {
              "type": "string",
              "description": "A template for the API URL to get information about Git commits of the repository."
            },
            "comments_url": {
              "type": "string",
              "description": "A template for the API URL to get information about comments on the repository."
            },
            "issue_comment_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issue comments on the repository."
            },
            "contents_url": {
              "type": "string",
              "description": "A template for the API URL to get the contents of the repository."
            },
            "compare_url": {
              "type": "string",
              "description": "A template for the API URL to compare two commits or refs."
            },
            "merges_url": {
              "type": "string",
              "description": "The API URL to merge branches in the repository."
            },
            "archive_url": {
              "type": "string",
              "description": "A template for the API URL to download the repository as an archive."
            },
            "downloads_url": {
              "type": "string",
              "description": "The API URL to list the downloads on the repository."
            },
            "issues_url": {
              "type": "string",
              "description": "A template for the API URL to get information about issues on the repository."
            },
            "pulls_url": {
              "type": "string",
              "description": "A template for the API URL to get information about pull requests on the repository."
            },
            "milestones_url": {
              "type": "string",
              "description": "A template for the API URL to get information about milestones of the repository."
            },
            "notifications_url": {
              "type": "string",
              "description": "A template for the API URL to get information about notifications on the repository."
            },
            "labels_url": {
              "type": "string",
              "description": "A template for the API URL to get information about labels of the repository."
            },
            "releases_url": {
              "type": "string",
              "description": "A template for the API URL to get information about releases on the repository."
            },
            "deployments_url": {
              "type": "string",
              "description": "The API URL to list the deployments of the repository."
            },
            "created_at": {
              "type": [
                "number",
                "string"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "pushed_at": {
              "type": [
                "number",
                "string",
                "null"
              ]
            },
            "git_url": {
              "type": "string"
            },
            "ssh_url": {
              "type": "string"
            },
            "clone_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "homepage": {
              "type": [
                "string",
                "null"
              ]
            },
            "size": {
              "type": "number"
            },
            "stargazers_count": {
              "type": "number"
            },
            "watchers_count": {
              "type": "number"
            },
            "language": {
              "type": [
                "string",
                "null"
              ]
            },
            "has_issues": {
              "type": "boolean",
              "description": "Whether issues are enabled."
            },
            "has_projects": {
              "type": "boolean",
              "description": "Whether projects are enabled."
            },
            "has_downloads": {
              "type": "boolean",
              "description": "Whether downloads are enabled."
            },
            "has_wiki": {
              "type": "boolean",
              "description": "Whether the wiki is enabled."
            },
            "has_pages": {
              "type": "boolean"
            },
            "has_discussions": {
              "type": "boolean",
              "description": "Whether discussions are enabled."
            },
            "forks_count": {
              "type": "number"
            },
            "mirror_url": {
              "type": [
                "string",
                "null"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Returns whether or not this repository is disabled."
            },
            "open_issues_count": {
              "type": "number"
            },
            "license": {
              "anyOf": [
                {
                  "$ref": "#/definitions/License"
                },
                {
                  "type": "null"
                }
              ]
            },
            "forks": {
              "type": "number"
            },
            "open_issues": {
              "type": "number"
            },
            "watchers": {
              "type": "number"
            },
            "stargazers": {
              "type": "number"
            },
            "default_branch": {
              "type": "string",
              "description": "The default branch of the repository."
            },
            "allow_squash_merge": {
              "type": "boolean",
              "description": "Whether to allow squash merges for pull requests."
            },
            "allow_merge_commit": {
              "type": "boolean",
              "description": "Whether to allow merge commits for pull requests."
            },
            "allow_rebase_merge": {
              "type": "boolean",
              "description": "Whether to allow rebase merges for pull requests."
            },
            "allow_auto_merge": {
              "type": "boolean",
              "description": "Whether to allow auto-merge for pull requests."
            },
            "allow_forking": {
              "type": "boolean",
              "description": "Whether to allow private forks"
            },
            "allow_update_branch": {
              "type": "boolean"
            },
            "use_squash_pr_title_as_default": {
              "type": "boolean"
            },
            "squash_merge_commit_message": {
              "type": "string"
            },
            "squash_merge_commit_title": {
              "type": "string"
            },
            "merge_commit_message": {
              "type": "string"
            },
            "merge_commit_title": {
              "type": "string"
            },
            "is_template": {
              "type": "boolean"
            },
            "web_commit_signoff_required": {
              "type": "boolean"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "visibility": {
              "type": "string",
              "enum": [
                "public",
                "private",
                "internal"
              ]
            },
            "delete_branch_on_merge": {
              "type": "boolean",
              "description": "Whether to delete head branches when pull requests are merged"
            },
            "master_branch": {
              "type": "string"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "pull": {
                  "type": "boolean"
                },
                "push": {
                  "type": "boolean"
                },
                "admin": {
                  "type": "boolean"
                },
                "maintain": {
                  "type": "boolean"
                },
                "triage": {
                  "type": "boolean"
                }
              },
              "required": [
                "pull",
                "push",
                "admin"
              ],
              "additionalProperties": false
            },
            "public": {
              "type": "boolean"
            },
            "organization": {
              "type": "string"
            }
          },
          "required": [
            "archive_url",
            "archived",
            "assignees_url",
            "blobs_url",
            "branches_url",
            "clone_url",
            "collaborators_url",
            "comments_url",
            "commits_url",
            "compare_url",
            "contents_url",
            "contributors_url",
            "created_at",
            "default_branch",
            "deployments_url",
            "description",
            "downloads_url",
            "events_url",
            "fork",
            "forks",
            "forks_count",
            "forks_url",
            "full_name",
            "git_commits_url",
            "git_refs_url",
            "git_tags_url",
            "git_url",
            "has_downloads",
            "has_issues",
            "has_pages",
            "has_projects",
            "has_wiki",
            "homepage",
            "hooks_url",
            "html_url",
            "id",
            "is_template",
            "issue_comment_url",
            "issue_events_url",
            "issues_url",
            "keys_url",
            "labels_url",
            "language",
            "languages_url",
            "license",
            "merges_url",
            "milestones_url",
            "mirror_url",
            "name",
            "node_id",
            "notifications_url",
            "open_issues",
            "open_issues_count",
            "owner",
            "private",
            "pulls_url",
            "pushed_at",
            "releases_url",
            "size",
            "ssh_url",
            "stargazers_count",
            "stargazers_url",
            "statuses_url",
            "subscribers_url",
            "subscription_url",
            "svn_url",
            "tags_url",
            "teams_url",
            "topics",
            "trees_url",
            "updated_at",
            "url",
            "visibility",
            "watchers",
            "watchers_count",
            "web_commit_signoff_required"
          ]
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryDispatchEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "client_payload": {
          "type": "object",
          "additionalProperties": {}
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "branch",
        "client_payload",
        "repository",
        "sender",
        "installation"
      ],
      "additionalProperties": false
    },
    "RepositoryImportEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "success",
            "cancelled",
            "failure"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "status",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryVulnerabilityAlertEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertCreateEvent"
        },
        {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertDismissEvent"
        },
        {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertReopenEvent"
        },
        {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertResolveEvent"
        }
      ]
    },
    "RepositoryVulnerabilityAlertCreateEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "create"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "open"
            },
            "id": {
              "type": "number"
            },
            "number": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "affected_range": {
              "type": "string"
            },
            "affected_package_name": {
              "type": "string"
            },
            "dismisser": {
              "$ref": "#/definitions/User"
            },
            "dismiss_reason": {
              "type": "string"
            },
            "dismissed_at": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "external_reference": {
              "type": "string"
            },
            "external_identifier": {
              "type": "string"
            },
            "fixed_in": {
              "type": "string"
            },
            "fixed_at": {
              "type": "string"
            },
            "fix_reason": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "required": [
            "affected_package_name",
            "affected_range",
            "created_at",
            "external_identifier",
            "external_reference",
            "fixed_in",
            "ghsa_id",
            "id",
            "node_id",
            "number",
            "severity",
            "state"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryVulnerabilityAlertAlert": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "number": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "const": "open"
        },
        "affected_range": {
          "type": "string"
        },
        "affected_package_name": {
          "type": "string"
        },
        "dismisser": {
          "$ref": "#/definitions/User"
        },
        "dismiss_reason": {
          "type": "string"
        },
        "dismissed_at": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "ghsa_id": {
          "type": "string"
        },
        "external_reference": {
          "type": "string"
        },
        "external_identifier": {
          "type": "string"
        },
        "fixed_in": {
          "type": "string"
        },
        "fixed_at": {
          "type": "string"
        },
        "fix_reason": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "number",
        "node_id",
        "state",
        "affected_range",
        "affected_package_name",
        "severity",
        "ghsa_id",
        "external_reference",
        "external_identifier",
        "fixed_in",
        "created_at"
      ],
      "additionalProperties": false,
      "description": "The security alert of the vulnerable dependency."
    },
    "RepositoryVulnerabilityAlertDismissEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "dismiss"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dismisser": {
              "$ref": "#/definitions/User"
            },
            "dismiss_reason": {
              "type": "string"
            },
            "dismissed_at": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "const": "dismissed"
            },
            "id": {
              "type": "number"
            },
            "number": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "affected_range": {
              "type": "string"
            },
            "affected_package_name": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "external_reference": {
              "type": "string"
            },
            "external_identifier": {
              "type": "string"
            },
            "fixed_in": {
              "type": "string"
            },
            "fixed_at": {
              "type": "string"
            },
            "fix_reason": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "required": [
            "affected_package_name",
            "affected_range",
            "created_at",
            "dismiss_reason",
            "dismissed_at",
            "dismisser",
            "external_identifier",
            "external_reference",
            "fixed_in",
            "ghsa_id",
            "id",
            "node_id",
            "number",
            "severity",
            "state"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryVulnerabilityAlertReopenEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopen"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "open"
            },
            "id": {
              "type": "number"
            },
            "number": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "affected_range": {
              "type": "string"
            },
            "affected_package_name": {
              "type": "string"
            },
            "dismisser": {
              "$ref": "#/definitions/User"
            },
            "dismiss_reason": {
              "type": "string"
            },
            "dismissed_at": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "external_reference": {
              "type": "string"
            },
            "external_identifier": {
              "type": "string"
            },
            "fixed_in": {
              "type": "string"
            },
            "fixed_at": {
              "type": "string"
            },
            "fix_reason": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "required": [
            "affected_package_name",
            "affected_range",
            "created_at",
            "external_identifier",
            "external_reference",
            "fixed_in",
            "ghsa_id",
            "id",
            "node_id",
            "number",
            "severity",
            "state"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "RepositoryVulnerabilityAlertResolveEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "resolve"
        },
        "alert": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "state": {
              "type": "string",
              "const": "fixed"
            },
            "fixed_at": {
              "type": "string"
            },
            "fix_reason": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "number": {
              "type": "number"
            },
            "node_id": {
              "type": "string"
            },
            "affected_range": {
              "type": "string"
            },
            "affected_package_name": {
              "type": "string"
            },
            "dismisser": {
              "$ref": "#/definitions/User"
            },
            "dismiss_reason": {
              "type": "string"
            },
            "dismissed_at": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "external_reference": {
              "type": "string"
            },
            "external_identifier": {
              "type": "string"
            },
            "fixed_in": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "required": [
            "affected_package_name",
            "affected_range",
            "created_at",
            "external_identifier",
            "external_reference",
            "fix_reason",
            "fixed_at",
            "fixed_in",
            "ghsa_id",
            "id",
            "node_id",
            "number",
            "severity",
            "state"
          ]
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/GitHubOrg"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "SecretScanningAlertEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/SecretScanningAlertCreatedEvent"
        },
        {
          "$ref": "#/definitions/SecretScanningAlertReopenedEvent"
        },
        {
          "$ref": "#/definitions/SecretScanningAlertResolvedEvent"
        }
      ]
    },
    "SecretScanningAlertCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number"
            },
            "secret_type": {
              "type": "string"
            },
            "resolution": {
              "type": "null"
            },
            "resolved_by": {
              "type": "null"
            },
            "resolved_at": {
              "type": "null"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "alert",
        "repository"
      ],
      "additionalProperties": false
    },
    "SecretScanningAlertReopenedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "reopened"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number"
            },
            "secret_type": {
              "type": "string"
            },
            "resolution": {
              "type": "null"
            },
            "resolved_by": {
              "type": "null"
            },
            "resolved_at": {
              "type": "null"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "SecretScanningAlertResolvedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "resolved"
        },
        "alert": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number"
            },
            "secret_type": {
              "type": "string"
            },
            "resolution": {
              "type": "string",
              "enum": [
                "false_positive",
                "wontfix",
                "revoked",
                "used_in_tests"
              ]
            },
            "resolved_by": {
              "$ref": "#/definitions/User"
            },
            "resolved_at": {
              "type": "string"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "SecurityAdvisoryEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/SecurityAdvisoryPerformedEvent"
        },
        {
          "$ref": "#/definitions/SecurityAdvisoryPublishedEvent"
        },
        {
          "$ref": "#/definitions/SecurityAdvisoryUpdatedEvent"
        },
        {
          "$ref": "#/definitions/SecurityAdvisoryWithdrawnEvent"
        }
      ]
    },
    "SecurityAdvisoryPerformedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "performed"
        },
        "security_advisory": {
          "type": "object",
          "properties": {
            "cvss": {
              "type": "object",
              "properties": {
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "score": {
                  "type": "number"
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "ghsa_id": {
              "type": "string"
            },
            "cve_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "summary": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              }
            },
            "published_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package": {
                    "type": "object",
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  },
                  "first_patched_version": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity."
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "additionalProperties": false
    },
    "SecurityAdvisoryPublishedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "published"
        },
        "security_advisory": {
          "type": "object",
          "properties": {
            "cvss": {
              "type": "object",
              "properties": {
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "score": {
                  "type": "number"
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "ghsa_id": {
              "type": "string"
            },
            "cve_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "summary": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              }
            },
            "published_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package": {
                    "type": "object",
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  },
                  "first_patched_version": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity."
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "additionalProperties": false
    },
    "SecurityAdvisoryUpdatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "updated"
        },
        "security_advisory": {
          "type": "object",
          "properties": {
            "cvss": {
              "type": "object",
              "properties": {
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "score": {
                  "type": "number"
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "ghsa_id": {
              "type": "string"
            },
            "cve_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "summary": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              }
            },
            "published_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package": {
                    "type": "object",
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  },
                  "first_patched_version": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity."
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "additionalProperties": false
    },
    "SecurityAdvisoryWithdrawnEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "withdrawn"
        },
        "security_advisory": {
          "type": "object",
          "properties": {
            "cvss": {
              "type": "object",
              "properties": {
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "score": {
                  "type": "number"
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "ghsa_id": {
              "type": "string"
            },
            "cve_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "summary": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              }
            },
            "published_at": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "withdrawn_at": {
              "type": "string"
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package": {
                    "type": "object",
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  },
                  "first_patched_version": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "identifier"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity."
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "additionalProperties": false
    },
    "SponsorshipEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/SponsorshipCancelledEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipCreatedEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipEditedEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipPendingCancellationEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipPendingTierChangeEvent"
        },
        {
          "$ref": "#/definitions/SponsorshipTierChangedEvent"
        }
      ]
    },
    "SponsorshipCancelledEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "cancelled"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "additionalProperties": false
    },
    "SponsorshipTier": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "monthly_price_in_cents": {
          "type": "number"
        },
        "monthly_price_in_dollars": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "is_one_time": {
          "type": "boolean"
        },
        "is_custom_ammount": {
          "type": "boolean"
        }
      },
      "required": [
        "node_id",
        "created_at",
        "description",
        "monthly_price_in_cents",
        "monthly_price_in_dollars",
        "name",
        "is_one_time",
        "is_custom_ammount"
      ],
      "additionalProperties": false,
      "description": "The `tier_changed` and `pending_tier_change` will include the original tier before the change or pending change. For more information, see the pending tier change payload."
    },
    "SponsorshipCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "additionalProperties": false
    },
    "SponsorshipEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "changes": {
          "type": "object",
          "properties": {
            "privacy_level": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The `edited` event types include the details about the change when someone edits a sponsorship to change the privacy."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "changes",
        "sender"
      ],
      "additionalProperties": false
    },
    "SponsorshipPendingCancellationEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pending_cancellation"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "effective_date": {
          "type": "string",
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect."
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "additionalProperties": false
    },
    "SponsorshipPendingTierChangeEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "pending_tier_change"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "effective_date": {
          "type": "string",
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect."
        },
        "changes": {
          "type": "object",
          "properties": {
            "tier": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/SponsorshipTier"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "tier"
          ],
          "additionalProperties": false
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "changes",
        "sender"
      ],
      "additionalProperties": false
    },
    "SponsorshipTierChangedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "tier_changed"
        },
        "sponsorship": {
          "type": "object",
          "properties": {
            "node_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sponsorable": {
              "$ref": "#/definitions/User"
            },
            "sponsor": {
              "$ref": "#/definitions/User"
            },
            "privacy_level": {
              "type": "string"
            },
            "tier": {
              "$ref": "#/definitions/SponsorshipTier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "additionalProperties": false
        },
        "changes": {
          "type": "object",
          "properties": {
            "tier": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/definitions/SponsorshipTier"
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "tier"
          ],
          "additionalProperties": false
        },
        "sender": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "changes",
        "sender"
      ],
      "additionalProperties": false
    },
    "StarEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/StarCreatedEvent"
        },
        {
          "$ref": "#/definitions/StarDeletedEvent"
        }
      ]
    },
    "StarCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "starred_at": {
          "type": "string",
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "starred_at",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "StarDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "starred_at": {
          "type": "null",
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "starred_at",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "StatusEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "The unique identifier of the status."
        },
        "sha": {
          "type": "string",
          "description": "The Commit SHA."
        },
        "name": {
          "type": "string"
        },
        "avatar_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "target_url": {
          "type": [
            "string",
            "null"
          ],
          "description": "The optional link added to the status."
        },
        "context": {
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "The optional human-readable description added to the status."
        },
        "state": {
          "type": "string",
          "enum": [
            "pending",
            "success",
            "failure",
            "error"
          ],
          "description": "The new state. Can be `pending`, `success`, `failure`, or `error`."
        },
        "commit": {
          "type": "object",
          "properties": {
            "sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "commit": {
              "type": "object",
              "properties": {
                "author": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The git author's name."
                    },
                    "email": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The git author's email address."
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "date",
                    "email",
                    "name"
                  ]
                },
                "committer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The git author's name."
                    },
                    "email": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The git author's email address."
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "date",
                    "email",
                    "name"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "tree": {
                  "type": "object",
                  "properties": {
                    "sha": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "sha",
                    "url"
                  ],
                  "additionalProperties": false
                },
                "url": {
                  "type": "string"
                },
                "comment_count": {
                  "type": "number"
                },
                "verification": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "expired_key",
                        "not_signing_key",
                        "gpgverify_error",
                        "gpgverify_unavailable",
                        "unsigned",
                        "unknown_signature_type",
                        "no_user",
                        "unverified_email",
                        "bad_email",
                        "unknown_key",
                        "malformed_signature",
                        "invalid",
                        "valid"
                      ]
                    },
                    "signature": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "payload": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "verified",
                    "reason",
                    "signature",
                    "payload"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "author",
                "committer",
                "message",
                "tree",
                "url",
                "comment_count",
                "verification"
              ],
              "additionalProperties": false
            },
            "url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "comments_url": {
              "type": "string"
            },
            "author": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "committer": {
              "anyOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "type": "null"
                }
              ]
            },
            "parents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "sha",
                  "url",
                  "html_url"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "sha",
            "node_id",
            "commit",
            "url",
            "html_url",
            "comments_url",
            "author",
            "committer",
            "parents"
          ],
          "additionalProperties": false
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "commit": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "sha",
                  "url"
                ],
                "additionalProperties": false
              },
              "protected": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "commit",
              "protected"
            ],
            "additionalProperties": false
          },
          "description": "An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches."
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "id",
        "sha",
        "name",
        "target_url",
        "context",
        "description",
        "state",
        "commit",
        "branches",
        "created_at",
        "updated_at",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "TeamEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/TeamAddedToRepositoryEvent"
        },
        {
          "$ref": "#/definitions/TeamCreatedEvent"
        },
        {
          "$ref": "#/definitions/TeamDeletedEvent"
        },
        {
          "$ref": "#/definitions/TeamEditedEvent"
        },
        {
          "$ref": "#/definitions/TeamRemovedFromRepositoryEvent"
        }
      ]
    },
    "TeamAddedToRepositoryEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "added_to_repository"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "team",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "TeamCreatedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "created"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "team",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "TeamDeletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "deleted"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "team",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "TeamEditedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "edited"
        },
        "changes": {
          "type": "object",
          "properties": {
            "description": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "privacy": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the team's privacy if the action was `edited`."
                }
              },
              "required": [
                "from"
              ],
              "additionalProperties": false
            },
            "repository": {
              "type": "object",
              "properties": {
                "permissions": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `admin` permission on a repository, if the action was `edited`."
                        },
                        "pull": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `pull` permission on a repository, if the action was `edited`."
                        },
                        "push": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `push` permission on a repository, if the action was `edited`."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "permissions"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The changes to the team if the action was `edited`."
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "changes",
        "team",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "TeamRemovedFromRepositoryEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "removed_from_repository"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "team",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "TeamAddEvent": {
      "type": "object",
      "properties": {
        "team": {
          "$ref": "#/definitions/Team"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "team",
        "repository",
        "sender",
        "organization"
      ],
      "additionalProperties": false
    },
    "WatchEvent": {
      "$ref": "#/definitions/WatchStartedEvent"
    },
    "WatchStartedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "started"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "additionalProperties": false
    },
    "WorkflowDispatchEvent": {
      "type": "object",
      "properties": {
        "inputs": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "description": "Inputs to the workflow. Each key represents the name of the input while it's value represents the value of that input."
        },
        "ref": {
          "type": "string",
          "description": "The branch ref from which the workflow was run."
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "workflow": {
          "type": "string",
          "description": "Relative path to the workflow file which contains the workflow."
        }
      },
      "required": [
        "inputs",
        "ref",
        "repository",
        "sender",
        "workflow"
      ],
      "additionalProperties": false
    },
    "WorkflowJobEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/WorkflowJobCompletedEvent"
        },
        {
          "$ref": "#/definitions/WorkflowJobInProgressEvent"
        },
        {
          "$ref": "#/definitions/WorkflowJobQueuedEvent"
        }
      ]
    },
    "WorkflowJobCompletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "completed"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "queued",
                "in_progress",
                "completed"
              ],
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`."
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    },
    "WorkflowJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "run_id": {
          "type": "number"
        },
        "run_attempt": {
          "type": "number"
        },
        "run_url": {
          "type": "string"
        },
        "head_sha": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "check_run_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`."
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStep"
          }
        },
        "conclusion": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "success",
            "failure",
            "cancelled",
            "skipped",
            null
          ]
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
        },
        "runner_id": {
          "type": [
            "number",
            "null"
          ],
          "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_group_id": {
          "type": [
            "number",
            "null"
          ],
          "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_group_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "started_at": {
          "type": "string"
        },
        "completed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "workflow_name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "run_id",
        "run_attempt",
        "run_url",
        "head_sha",
        "node_id",
        "name",
        "check_run_url",
        "html_url",
        "url",
        "status",
        "steps",
        "conclusion",
        "labels",
        "runner_id",
        "runner_name",
        "runner_group_id",
        "runner_group_name",
        "started_at",
        "completed_at",
        "workflow_name"
      ],
      "additionalProperties": false,
      "description": "The workflow job. Many `workflow_job` keys, such as `head_sha`, `conclusion`, and `started_at` are the same as those in a [`check_run`](#check_run) object."
    },
    "WorkflowStep": {
      "anyOf": [
        {
          "$ref": "#/definitions/WorkflowStepInProgress"
        },
        {
          "$ref": "#/definitions/WorkflowStepCompleted"
        }
      ]
    },
    "WorkflowStepInProgress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "const": "in_progress"
        },
        "conclusion": {
          "type": "null"
        },
        "number": {
          "type": "number"
        },
        "started_at": {
          "type": "string"
        },
        "completed_at": {
          "type": "null"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "additionalProperties": false
    },
    "WorkflowStepCompleted": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "const": "completed"
        },
        "conclusion": {
          "type": "string",
          "enum": [
            "failure",
            "skipped",
            "success"
          ]
        },
        "number": {
          "type": "number"
        },
        "started_at": {
          "type": "string"
        },
        "completed_at": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "additionalProperties": false
    },
    "WorkflowJobInProgressEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "in_progress"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`.",
              "const": "in_progress"
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    },
    "WorkflowJobQueuedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "queued"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`.",
              "const": "queued"
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    },
    "WorkflowRunEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/WorkflowRunCompletedEvent"
        },
        {
          "$ref": "#/definitions/WorkflowRunInProgressEvent"
        },
        {
          "$ref": "#/definitions/WorkflowRunRequestedEvent"
        }
      ]
    },
    "WorkflowRunCompletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "completed"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "workflow_run": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ]
            },
            "artifacts_url": {
              "type": "string",
              "description": "The URL to the artifacts for the workflow run."
            },
            "cancel_url": {
              "type": "string",
              "description": "The URL to cancel the workflow run."
            },
            "check_suite_url": {
              "type": "string",
              "description": "The URL to the associated check suite."
            },
            "check_suite_id": {
              "type": "number",
              "description": "The ID of the associated check suite."
            },
            "check_suite_node_id": {
              "type": "string",
              "description": "The node ID of the associated check suite."
            },
            "created_at": {
              "type": "string"
            },
            "event": {
              "type": "string"
            },
            "head_branch": {
              "type": "string"
            },
            "head_commit": {
              "$ref": "#/definitions/SimpleCommit"
            },
            "head_repository": {
              "$ref": "#/definitions/RepositoryLite"
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that points to the version of the workflow being run."
            },
            "path": {
              "type": "string",
              "description": "The full path of the workflow"
            },
            "display_title": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number",
              "description": "The ID of the workflow run."
            },
            "jobs_url": {
              "type": "string",
              "description": "The URL to the jobs for the workflow run."
            },
            "logs_url": {
              "type": "string",
              "description": "The URL to download the logs for the workflow run."
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "description": "The name of the workflow run."
            },
            "pull_requests": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "number": {
                    "type": "number"
                  },
                  "head": {
                    "type": "object",
                    "properties": {
                      "ref": {
                        "type": "string"
                      },
                      "sha": {
                        "type": "string"
                      },
                      "repo": {
                        "$ref": "#/definitions/RepoRef"
                      }
                    },
                    "required": [
                      "ref",
                      "sha",
                      "repo"
                    ],
                    "additionalProperties": false
                  },
                  "base": {
                    "type": "object",
                    "properties": {
                      "ref": {
                        "type": "string"
                      },
                      "sha": {
                        "type": "string"
                      },
                      "repo": {
                        "$ref": "#/definitions/RepoRef"
                      }
                    },
                    "required": [
                      "ref",
                      "sha",
                      "repo"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "url",
                  "id",
                  "number",
                  "head",
                  "base"
                ],
                "additionalProperties": false
              }
            },
            "repository": {
              "$ref": "#/definitions/RepositoryLite"
            },
            "rerun_url": {
              "type": "string",
              "description": "The URL to rerun the workflow run."
            },
            "run_number": {
              "type": "number",
              "description": "The auto incrementing run number for the workflow run."
            },
            "status": {
              "type": "string",
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                "waiting"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "type": "string",
              "description": "The URL to the workflow run."
            },
            "workflow_id": {
              "type": "number",
              "description": "The ID of the parent workflow."
            },
            "workflow_url": {
              "type": "string",
              "description": "The URL to the workflow."
            },
            "run_attempt": {
              "type": "number",
              "description": "Attempt number of the run, 1 for first attempt and higher if the workflow was re-run."
            },
            "referenced_workflows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferencedWorkflow"
              }
            },
            "run_started_at": {
              "type": "string",
              "description": "The start time of the latest run. Resets on re-run."
            },
            "previous_attempt_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "The URL to the previous attempted run of this workflow, if one exists."
            },
            "actor": {
              "$ref": "#/definitions/User"
            },
            "triggering_actor": {
              "$ref": "#/definitions/User"
            }
          },
          "required": [
            "actor",
            "artifacts_url",
            "cancel_url",
            "check_suite_id",
            "check_suite_node_id",
            "check_suite_url",
            "conclusion",
            "created_at",
            "display_title",
            "event",
            "head_branch",
            "head_commit",
            "head_repository",
            "head_sha",
            "html_url",
            "id",
            "jobs_url",
            "logs_url",
            "name",
            "node_id",
            "path",
            "previous_attempt_url",
            "pull_requests",
            "repository",
            "rerun_url",
            "run_attempt",
            "run_number",
            "run_started_at",
            "status",
            "triggering_actor",
            "updated_at",
            "url",
            "workflow_id",
            "workflow_url"
          ]
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "additionalProperties": false
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "artifacts_url": {
          "type": "string",
          "description": "The URL to the artifacts for the workflow run."
        },
        "cancel_url": {
          "type": "string",
          "description": "The URL to cancel the workflow run."
        },
        "check_suite_url": {
          "type": "string",
          "description": "The URL to the associated check suite."
        },
        "check_suite_id": {
          "type": "number",
          "description": "The ID of the associated check suite."
        },
        "check_suite_node_id": {
          "type": "string",
          "description": "The node ID of the associated check suite."
        },
        "conclusion": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            "skipped",
            null
          ]
        },
        "created_at": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "head_branch": {
          "type": "string"
        },
        "head_commit": {
          "$ref": "#/definitions/SimpleCommit"
        },
        "head_repository": {
          "$ref": "#/definitions/RepositoryLite"
        },
        "head_sha": {
          "type": "string",
          "description": "The SHA of the head commit that points to the version of the workflow being run."
        },
        "path": {
          "type": "string",
          "description": "The full path of the workflow"
        },
        "display_title": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "number",
          "description": "The ID of the workflow run."
        },
        "jobs_url": {
          "type": "string",
          "description": "The URL to the jobs for the workflow run."
        },
        "logs_url": {
          "type": "string",
          "description": "The URL to download the logs for the workflow run."
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the workflow run."
        },
        "pull_requests": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "id": {
                "type": "number"
              },
              "number": {
                "type": "number"
              },
              "head": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  },
                  "repo": {
                    "$ref": "#/definitions/RepoRef"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ],
                "additionalProperties": false
              },
              "base": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  },
                  "repo": {
                    "$ref": "#/definitions/RepoRef"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "url",
              "id",
              "number",
              "head",
              "base"
            ],
            "additionalProperties": false
          }
        },
        "repository": {
          "$ref": "#/definitions/RepositoryLite"
        },
        "rerun_url": {
          "type": "string",
          "description": "The URL to rerun the workflow run."
        },
        "run_number": {
          "type": "number",
          "description": "The auto incrementing run number for the workflow run."
        },
        "status": {
          "type": "string",
          "enum": [
            "requested",
            "in_progress",
            "completed",
            "queued",
            "waiting"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "The URL to the workflow run."
        },
        "workflow_id": {
          "type": "number",
          "description": "The ID of the parent workflow."
        },
        "workflow_url": {
          "type": "string",
          "description": "The URL to the workflow."
        },
        "run_attempt": {
          "type": "number",
          "description": "Attempt number of the run, 1 for first attempt and higher if the workflow was re-run."
        },
        "referenced_workflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferencedWorkflow"
          }
        },
        "run_started_at": {
          "type": "string",
          "description": "The start time of the latest run. Resets on re-run."
        },
        "previous_attempt_url": {
          "type": [
            "string",
            "null"
          ],
          "description": "The URL to the previous attempted run of this workflow, if one exists."
        },
        "actor": {
          "$ref": "#/definitions/User"
        },
        "triggering_actor": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "artifacts_url",
        "cancel_url",
        "check_suite_url",
        "check_suite_id",
        "check_suite_node_id",
        "conclusion",
        "created_at",
        "event",
        "head_branch",
        "head_commit",
        "head_repository",
        "head_sha",
        "path",
        "display_title",
        "html_url",
        "id",
        "jobs_url",
        "logs_url",
        "node_id",
        "name",
        "pull_requests",
        "repository",
        "rerun_url",
        "run_number",
        "status",
        "updated_at",
        "url",
        "workflow_id",
        "workflow_url",
        "run_attempt",
        "run_started_at",
        "previous_attempt_url",
        "actor",
        "triggering_actor"
      ],
      "additionalProperties": false
    },
    "RepositoryLite": {
      "type": "object",
      "properties": {
        "archive_url": {
          "type": "string",
          "description": "A template for the API URL to download the repository as an archive."
        },
        "assignees_url": {
          "type": "string",
          "description": "A template for the API URL to list the available assignees for issues in the repository."
        },
        "blobs_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
        },
        "branches_url": {
          "type": "string",
          "description": "A template for the API URL to get information about branches in the repository."
        },
        "collaborators_url": {
          "type": "string",
          "description": "A template for the API URL to get information about collaborators of the repository."
        },
        "comments_url": {
          "type": "string",
          "description": "A template for the API URL to get information about comments on the repository."
        },
        "commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about commits on the repository."
        },
        "compare_url": {
          "type": "string",
          "description": "A template for the API URL to compare two commits or refs."
        },
        "contents_url": {
          "type": "string",
          "description": "A template for the API URL to get the contents of the repository."
        },
        "contributors_url": {
          "type": "string",
          "description": "A template for the API URL to list the contributors to the repository."
        },
        "deployments_url": {
          "type": "string",
          "description": "The API URL to list the deployments of the repository."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "The repository description."
        },
        "downloads_url": {
          "type": "string",
          "description": "The API URL to list the downloads on the repository."
        },
        "events_url": {
          "type": "string",
          "description": "The API URL to list the events of the repository."
        },
        "fork": {
          "type": "boolean",
          "description": "Whether the repository is a fork."
        },
        "forks_url": {
          "type": "string",
          "description": "The API URL to list the forks of the repository."
        },
        "full_name": {
          "type": "string",
          "description": "The full, globally unique, name of the repository."
        },
        "git_commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git commits of the repository."
        },
        "git_refs_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git refs of the repository."
        },
        "git_tags_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git tags of the repository."
        },
        "hooks_url": {
          "type": "string",
          "description": "The API URL to list the hooks on the repository."
        },
        "html_url": {
          "type": "string",
          "description": "The URL to view the repository on GitHub.com."
        },
        "id": {
          "type": "number",
          "description": "Unique identifier of the repository"
        },
        "issue_comment_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue comments on the repository."
        },
        "issue_events_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue events on the repository."
        },
        "issues_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issues on the repository."
        },
        "keys_url": {
          "type": "string",
          "description": "A template for the API URL to get information about deploy keys on the repository."
        },
        "labels_url": {
          "type": "string",
          "description": "A template for the API URL to get information about labels of the repository."
        },
        "languages_url": {
          "type": "string",
          "description": "The API URL to get information about the languages of the repository."
        },
        "merges_url": {
          "type": "string",
          "description": "The API URL to merge branches in the repository."
        },
        "milestones_url": {
          "type": "string",
          "description": "A template for the API URL to get information about milestones of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "node_id": {
          "type": "string",
          "description": "The GraphQL identifier of the repository."
        },
        "notifications_url": {
          "type": "string",
          "description": "A template for the API URL to get information about notifications on the repository."
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "private": {
          "type": "boolean",
          "description": "Whether the repository is private or public."
        },
        "pulls_url": {
          "type": "string",
          "description": "A template for the API URL to get information about pull requests on the repository."
        },
        "releases_url": {
          "type": "string",
          "description": "A template for the API URL to get information about releases on the repository."
        },
        "stargazers_url": {
          "type": "string",
          "description": "The API URL to list the stargazers on the repository."
        },
        "statuses_url": {
          "type": "string",
          "description": "A template for the API URL to get information about statuses of a commit."
        },
        "subscribers_url": {
          "type": "string",
          "description": "The API URL to list the subscribers on the repository."
        },
        "subscription_url": {
          "type": "string",
          "description": "The API URL to subscribe to notifications for this repository."
        },
        "tags_url": {
          "type": "string",
          "description": "The API URL to get information about tags on the repository."
        },
        "teams_url": {
          "type": "string",
          "description": "The API URL to list the teams on the repository."
        },
        "trees_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
        },
        "url": {
          "type": "string",
          "description": "The URL to get more information about the repository from the GitHub API."
        }
      },
      "required": [
        "archive_url",
        "assignees_url",
        "blobs_url",
        "branches_url",
        "collaborators_url",
        "comments_url",
        "commits_url",
        "compare_url",
        "contents_url",
        "contributors_url",
        "deployments_url",
        "description",
        "downloads_url",
        "events_url",
        "fork",
        "forks_url",
        "full_name",
        "git_commits_url",
        "git_refs_url",
        "git_tags_url",
        "hooks_url",
        "html_url",
        "id",
        "issue_comment_url",
        "issue_events_url",
        "issues_url",
        "keys_url",
        "labels_url",
        "languages_url",
        "merges_url",
        "milestones_url",
        "name",
        "node_id",
        "notifications_url",
        "owner",
        "private",
        "pulls_url",
        "releases_url",
        "stargazers_url",
        "statuses_url",
        "subscribers_url",
        "subscription_url",
        "tags_url",
        "teams_url",
        "trees_url",
        "url"
      ],
      "additionalProperties": false
    },
    "WorkflowRunInProgressEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "in_progress"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "workflow_run": {
          "$ref": "#/definitions/WorkflowRun"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "additionalProperties": false
    },
    "WorkflowRunRequestedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "requested"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "workflow_run": {
          "$ref": "#/definitions/WorkflowRun"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "additionalProperties": false
    },
    "EventPayloadMap": {
      "type": "object",
      "properties": {
        "branch_protection_rule": {
          "$ref": "#/definitions/BranchProtectionRuleEvent"
        },
        "check_run": {
          "$ref": "#/definitions/CheckRunEvent"
        },
        "check_suite": {
          "$ref": "#/definitions/CheckSuiteEvent"
        },
        "code_scanning_alert": {
          "$ref": "#/definitions/CodeScanningAlertEvent"
        },
        "commit_comment": {
          "$ref": "#/definitions/CommitCommentEvent"
        },
        "create": {
          "$ref": "#/definitions/CreateEvent"
        },
        "delete": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "dependabot_alert": {
          "$ref": "#/definitions/DependabotAlertEvent"
        },
        "deploy_key": {
          "$ref": "#/definitions/DeployKeyEvent"
        },
        "deployment": {
          "$ref": "#/definitions/DeploymentEvent"
        },
        "deployment_status": {
          "$ref": "#/definitions/DeploymentStatusEvent"
        },
        "discussion": {
          "$ref": "#/definitions/DiscussionEvent"
        },
        "discussion_comment": {
          "$ref": "#/definitions/DiscussionCommentEvent"
        },
        "fork": {
          "$ref": "#/definitions/ForkEvent"
        },
        "github_app_authorization": {
          "$ref": "#/definitions/GithubAppAuthorizationEvent"
        },
        "gollum": {
          "$ref": "#/definitions/GollumEvent"
        },
        "installation": {
          "$ref": "#/definitions/InstallationEvent"
        },
        "installation_repositories": {
          "$ref": "#/definitions/InstallationRepositoriesEvent"
        },
        "installation_target": {
          "$ref": "#/definitions/InstallationTargetEvent"
        },
        "issue_comment": {
          "$ref": "#/definitions/IssueCommentEvent"
        },
        "issues": {
          "$ref": "#/definitions/IssuesEvent"
        },
        "label": {
          "$ref": "#/definitions/LabelEvent"
        },
        "marketplace_purchase": {
          "$ref": "#/definitions/MarketplacePurchaseEvent"
        },
        "member": {
          "$ref": "#/definitions/MemberEvent"
        },
        "membership": {
          "$ref": "#/definitions/MembershipEvent"
        },
        "merge_group": {
          "$ref": "#/definitions/MergeGroupEvent"
        },
        "meta": {
          "$ref": "#/definitions/MetaEvent"
        },
        "milestone": {
          "$ref": "#/definitions/MilestoneEvent"
        },
        "org_block": {
          "$ref": "#/definitions/OrgBlockEvent"
        },
        "organization": {
          "$ref": "#/definitions/OrganizationEvent"
        },
        "package": {
          "$ref": "#/definitions/PackageEvent"
        },
        "page_build": {
          "$ref": "#/definitions/PageBuildEvent"
        },
        "ping": {
          "$ref": "#/definitions/PingEvent"
        },
        "project": {
          "$ref": "#/definitions/ProjectEvent"
        },
        "project_card": {
          "$ref": "#/definitions/ProjectCardEvent"
        },
        "project_column": {
          "$ref": "#/definitions/ProjectColumnEvent"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/ProjectsV2ItemEvent"
        },
        "public": {
          "$ref": "#/definitions/PublicEvent"
        },
        "pull_request": {
          "$ref": "#/definitions/PullRequestEvent"
        },
        "pull_request_review": {
          "$ref": "#/definitions/PullRequestReviewEvent"
        },
        "pull_request_review_comment": {
          "$ref": "#/definitions/PullRequestReviewCommentEvent"
        },
        "pull_request_review_thread": {
          "$ref": "#/definitions/PullRequestReviewThreadEvent"
        },
        "push": {
          "$ref": "#/definitions/PushEvent"
        },
        "registry_package": {
          "$ref": "#/definitions/RegistryPackageEvent"
        },
        "release": {
          "$ref": "#/definitions/ReleaseEvent"
        },
        "repository": {
          "$ref": "#/definitions/RepositoryEvent"
        },
        "repository_dispatch": {
          "$ref": "#/definitions/RepositoryDispatchEvent"
        },
        "repository_import": {
          "$ref": "#/definitions/RepositoryImportEvent"
        },
        "repository_vulnerability_alert": {
          "$ref": "#/definitions/RepositoryVulnerabilityAlertEvent"
        },
        "secret_scanning_alert": {
          "$ref": "#/definitions/SecretScanningAlertEvent"
        },
        "security_advisory": {
          "$ref": "#/definitions/SecurityAdvisoryEvent"
        },
        "sponsorship": {
          "$ref": "#/definitions/SponsorshipEvent"
        },
        "star": {
          "$ref": "#/definitions/StarEvent"
        },
        "status": {
          "$ref": "#/definitions/StatusEvent"
        },
        "team": {
          "$ref": "#/definitions/TeamEvent"
        },
        "team_add": {
          "$ref": "#/definitions/TeamAddEvent"
        },
        "watch": {
          "$ref": "#/definitions/WatchEvent"
        },
        "workflow_dispatch": {
          "$ref": "#/definitions/WorkflowDispatchEvent"
        },
        "workflow_job": {
          "$ref": "#/definitions/WorkflowJobEvent"
        },
        "workflow_run": {
          "$ref": "#/definitions/WorkflowRunEvent"
        }
      },
      "required": [
        "branch_protection_rule",
        "check_run",
        "check_suite",
        "code_scanning_alert",
        "commit_comment",
        "create",
        "delete",
        "dependabot_alert",
        "deploy_key",
        "deployment",
        "deployment_status",
        "discussion",
        "discussion_comment",
        "fork",
        "github_app_authorization",
        "gollum",
        "installation",
        "installation_repositories",
        "installation_target",
        "issue_comment",
        "issues",
        "label",
        "marketplace_purchase",
        "member",
        "membership",
        "merge_group",
        "meta",
        "milestone",
        "org_block",
        "organization",
        "package",
        "page_build",
        "ping",
        "project",
        "project_card",
        "project_column",
        "projects_v2_item",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "registry_package",
        "release",
        "repository",
        "repository_dispatch",
        "repository_import",
        "repository_vulnerability_alert",
        "secret_scanning_alert",
        "security_advisory",
        "sponsorship",
        "star",
        "status",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ],
      "additionalProperties": false
    },
    "Asset": {
      "$ref": "#/definitions/ReleaseAsset"
    },
    "WebhookEvent": {
      "$ref": "#/definitions/Schema"
    },
    "WebhookEventMap": {
      "$ref": "#/definitions/EventPayloadMap"
    },
    "WebhookEventName": {
      "type": "string",
      "enum": [
        "branch_protection_rule",
        "check_run",
        "check_suite",
        "code_scanning_alert",
        "commit_comment",
        "create",
        "delete",
        "dependabot_alert",
        "deploy_key",
        "deployment",
        "deployment_status",
        "discussion",
        "discussion_comment",
        "fork",
        "github_app_authorization",
        "gollum",
        "installation",
        "installation_repositories",
        "installation_target",
        "issue_comment",
        "issues",
        "label",
        "marketplace_purchase",
        "member",
        "membership",
        "merge_group",
        "meta",
        "milestone",
        "org_block",
        "organization",
        "package",
        "page_build",
        "ping",
        "project",
        "project_card",
        "project_column",
        "projects_v2_item",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "registry_package",
        "release",
        "repository",
        "repository_dispatch",
        "repository_import",
        "repository_vulnerability_alert",
        "secret_scanning_alert",
        "security_advisory",
        "sponsorship",
        "star",
        "status",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  }
}