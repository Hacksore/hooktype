{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/WorkflowJobEvent",
  "definitions": {
    "WorkflowJobEvent": {
      "anyOf": [
        {
          "$ref": "#/definitions/WorkflowJobCompletedEvent"
        },
        {
          "$ref": "#/definitions/WorkflowJobInProgressEvent"
        },
        {
          "$ref": "#/definitions/WorkflowJobQueuedEvent"
        }
      ]
    },
    "WorkflowJobCompletedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "completed"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "queued",
                "in_progress",
                "completed"
              ],
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`."
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    },
    "Organization": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "repos_url": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "hooks_url": {
          "type": "string"
        },
        "issues_url": {
          "type": "string"
        },
        "members_url": {
          "type": "string"
        },
        "public_members_url": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "url",
        "repos_url",
        "events_url",
        "hooks_url",
        "issues_url",
        "members_url",
        "public_members_url",
        "avatar_url",
        "description"
      ],
      "additionalProperties": false
    },
    "InstallationLite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "The ID of the installation."
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id"
      ],
      "additionalProperties": false,
      "description": "Installation"
    },
    "Repository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier of the repository"
        },
        "node_id": {
          "type": "string",
          "description": "The GraphQL identifier of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "full_name": {
          "type": "string",
          "description": "The full, globally unique, name of the repository."
        },
        "private": {
          "type": "boolean",
          "description": "Whether the repository is private or public."
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "html_url": {
          "type": "string",
          "description": "The URL to view the repository on GitHub.com."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "The repository description."
        },
        "fork": {
          "type": "boolean",
          "description": "Whether the repository is a fork."
        },
        "url": {
          "type": "string",
          "description": "The URL to get more information about the repository from the GitHub API."
        },
        "forks_url": {
          "type": "string",
          "description": "The API URL to list the forks of the repository."
        },
        "keys_url": {
          "type": "string",
          "description": "A template for the API URL to get information about deploy keys on the repository."
        },
        "collaborators_url": {
          "type": "string",
          "description": "A template for the API URL to get information about collaborators of the repository."
        },
        "teams_url": {
          "type": "string",
          "description": "The API URL to list the teams on the repository."
        },
        "hooks_url": {
          "type": "string",
          "description": "The API URL to list the hooks on the repository."
        },
        "issue_events_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue events on the repository."
        },
        "events_url": {
          "type": "string",
          "description": "The API URL to list the events of the repository."
        },
        "assignees_url": {
          "type": "string",
          "description": "A template for the API URL to list the available assignees for issues in the repository."
        },
        "branches_url": {
          "type": "string",
          "description": "A template for the API URL to get information about branches in the repository."
        },
        "tags_url": {
          "type": "string",
          "description": "The API URL to get information about tags on the repository."
        },
        "blobs_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
        },
        "git_tags_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git tags of the repository."
        },
        "git_refs_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git refs of the repository."
        },
        "trees_url": {
          "type": "string",
          "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
        },
        "statuses_url": {
          "type": "string",
          "description": "A template for the API URL to get information about statuses of a commit."
        },
        "languages_url": {
          "type": "string",
          "description": "The API URL to get information about the languages of the repository."
        },
        "stargazers_url": {
          "type": "string",
          "description": "The API URL to list the stargazers on the repository."
        },
        "contributors_url": {
          "type": "string",
          "description": "A template for the API URL to list the contributors to the repository."
        },
        "subscribers_url": {
          "type": "string",
          "description": "The API URL to list the subscribers on the repository."
        },
        "subscription_url": {
          "type": "string",
          "description": "The API URL to subscribe to notifications for this repository."
        },
        "commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about commits on the repository."
        },
        "git_commits_url": {
          "type": "string",
          "description": "A template for the API URL to get information about Git commits of the repository."
        },
        "comments_url": {
          "type": "string",
          "description": "A template for the API URL to get information about comments on the repository."
        },
        "issue_comment_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issue comments on the repository."
        },
        "contents_url": {
          "type": "string",
          "description": "A template for the API URL to get the contents of the repository."
        },
        "compare_url": {
          "type": "string",
          "description": "A template for the API URL to compare two commits or refs."
        },
        "merges_url": {
          "type": "string",
          "description": "The API URL to merge branches in the repository."
        },
        "archive_url": {
          "type": "string",
          "description": "A template for the API URL to download the repository as an archive."
        },
        "downloads_url": {
          "type": "string",
          "description": "The API URL to list the downloads on the repository."
        },
        "issues_url": {
          "type": "string",
          "description": "A template for the API URL to get information about issues on the repository."
        },
        "pulls_url": {
          "type": "string",
          "description": "A template for the API URL to get information about pull requests on the repository."
        },
        "milestones_url": {
          "type": "string",
          "description": "A template for the API URL to get information about milestones of the repository."
        },
        "notifications_url": {
          "type": "string",
          "description": "A template for the API URL to get information about notifications on the repository."
        },
        "labels_url": {
          "type": "string",
          "description": "A template for the API URL to get information about labels of the repository."
        },
        "releases_url": {
          "type": "string",
          "description": "A template for the API URL to get information about releases on the repository."
        },
        "deployments_url": {
          "type": "string",
          "description": "The API URL to list the deployments of the repository."
        },
        "created_at": {
          "type": [
            "number",
            "string"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "pushed_at": {
          "type": [
            "number",
            "string",
            "null"
          ]
        },
        "git_url": {
          "type": "string"
        },
        "ssh_url": {
          "type": "string"
        },
        "clone_url": {
          "type": "string"
        },
        "svn_url": {
          "type": "string"
        },
        "homepage": {
          "type": [
            "string",
            "null"
          ]
        },
        "size": {
          "type": "number"
        },
        "stargazers_count": {
          "type": "number"
        },
        "watchers_count": {
          "type": "number"
        },
        "language": {
          "type": [
            "string",
            "null"
          ]
        },
        "has_issues": {
          "type": "boolean",
          "description": "Whether issues are enabled."
        },
        "has_projects": {
          "type": "boolean",
          "description": "Whether projects are enabled."
        },
        "has_downloads": {
          "type": "boolean",
          "description": "Whether downloads are enabled."
        },
        "has_wiki": {
          "type": "boolean",
          "description": "Whether the wiki is enabled."
        },
        "has_pages": {
          "type": "boolean"
        },
        "has_discussions": {
          "type": "boolean",
          "description": "Whether discussions are enabled."
        },
        "forks_count": {
          "type": "number"
        },
        "mirror_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "archived": {
          "type": "boolean",
          "description": "Whether the repository is archived."
        },
        "disabled": {
          "type": "boolean",
          "description": "Returns whether or not this repository is disabled."
        },
        "open_issues_count": {
          "type": "number"
        },
        "license": {
          "anyOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "type": "null"
            }
          ]
        },
        "forks": {
          "type": "number"
        },
        "open_issues": {
          "type": "number"
        },
        "watchers": {
          "type": "number"
        },
        "stargazers": {
          "type": "number"
        },
        "default_branch": {
          "type": "string",
          "description": "The default branch of the repository."
        },
        "allow_squash_merge": {
          "type": "boolean",
          "description": "Whether to allow squash merges for pull requests."
        },
        "allow_merge_commit": {
          "type": "boolean",
          "description": "Whether to allow merge commits for pull requests."
        },
        "allow_rebase_merge": {
          "type": "boolean",
          "description": "Whether to allow rebase merges for pull requests."
        },
        "allow_auto_merge": {
          "type": "boolean",
          "description": "Whether to allow auto-merge for pull requests."
        },
        "allow_forking": {
          "type": "boolean",
          "description": "Whether to allow private forks"
        },
        "allow_update_branch": {
          "type": "boolean"
        },
        "use_squash_pr_title_as_default": {
          "type": "boolean"
        },
        "squash_merge_commit_message": {
          "type": "string"
        },
        "squash_merge_commit_title": {
          "type": "string"
        },
        "merge_commit_message": {
          "type": "string"
        },
        "merge_commit_title": {
          "type": "string"
        },
        "is_template": {
          "type": "boolean"
        },
        "web_commit_signoff_required": {
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "visibility": {
          "type": "string",
          "enum": [
            "public",
            "private",
            "internal"
          ]
        },
        "delete_branch_on_merge": {
          "type": "boolean",
          "description": "Whether to delete head branches when pull requests are merged"
        },
        "master_branch": {
          "type": "string"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "pull": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "admin": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            }
          },
          "required": [
            "pull",
            "push",
            "admin"
          ],
          "additionalProperties": false
        },
        "public": {
          "type": "boolean"
        },
        "organization": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id",
        "name",
        "full_name",
        "private",
        "owner",
        "html_url",
        "description",
        "fork",
        "url",
        "forks_url",
        "keys_url",
        "collaborators_url",
        "teams_url",
        "hooks_url",
        "issue_events_url",
        "events_url",
        "assignees_url",
        "branches_url",
        "tags_url",
        "blobs_url",
        "git_tags_url",
        "git_refs_url",
        "trees_url",
        "statuses_url",
        "languages_url",
        "stargazers_url",
        "contributors_url",
        "subscribers_url",
        "subscription_url",
        "commits_url",
        "git_commits_url",
        "comments_url",
        "issue_comment_url",
        "contents_url",
        "compare_url",
        "merges_url",
        "archive_url",
        "downloads_url",
        "issues_url",
        "pulls_url",
        "milestones_url",
        "notifications_url",
        "labels_url",
        "releases_url",
        "deployments_url",
        "created_at",
        "updated_at",
        "pushed_at",
        "git_url",
        "ssh_url",
        "clone_url",
        "svn_url",
        "homepage",
        "size",
        "stargazers_count",
        "watchers_count",
        "language",
        "has_issues",
        "has_projects",
        "has_downloads",
        "has_wiki",
        "has_pages",
        "forks_count",
        "mirror_url",
        "archived",
        "open_issues_count",
        "license",
        "forks",
        "open_issues",
        "watchers",
        "default_branch",
        "is_template",
        "web_commit_signoff_required",
        "topics",
        "visibility"
      ],
      "additionalProperties": false,
      "description": "A git repository"
    },
    "User": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": [
            "string",
            "null"
          ]
        },
        "avatar_url": {
          "type": "string"
        },
        "gravatar_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "followers_url": {
          "type": "string"
        },
        "following_url": {
          "type": "string"
        },
        "gists_url": {
          "type": "string"
        },
        "starred_url": {
          "type": "string"
        },
        "subscriptions_url": {
          "type": "string"
        },
        "organizations_url": {
          "type": "string"
        },
        "repos_url": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "received_events_url": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Bot",
            "User",
            "Organization"
          ]
        },
        "site_admin": {
          "type": "boolean"
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "additionalProperties": false
    },
    "License": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "spdx_id": {
          "type": "string"
        },
        "url": {
          "type": [
            "string",
            "null"
          ]
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "name",
        "spdx_id",
        "url",
        "node_id"
      ],
      "additionalProperties": false
    },
    "WorkflowStep": {
      "anyOf": [
        {
          "$ref": "#/definitions/WorkflowStepInProgress"
        },
        {
          "$ref": "#/definitions/WorkflowStepCompleted"
        }
      ]
    },
    "WorkflowStepInProgress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "const": "in_progress"
        },
        "conclusion": {
          "type": "null"
        },
        "number": {
          "type": "number"
        },
        "started_at": {
          "type": "string"
        },
        "completed_at": {
          "type": "null"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "additionalProperties": false
    },
    "WorkflowStepCompleted": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "const": "completed"
        },
        "conclusion": {
          "type": "string",
          "enum": [
            "failure",
            "skipped",
            "success"
          ]
        },
        "number": {
          "type": "number"
        },
        "started_at": {
          "type": "string"
        },
        "completed_at": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "additionalProperties": false
    },
    "WorkflowJobInProgressEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "in_progress"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`.",
              "const": "in_progress"
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    },
    "WorkflowJobQueuedEvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "queued"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "installation": {
          "$ref": "#/definitions/InstallationLite"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "workflow_job": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`.",
              "const": "queued"
            },
            "id": {
              "type": "number"
            },
            "run_id": {
              "type": "number"
            },
            "run_attempt": {
              "type": "number"
            },
            "run_url": {
              "type": "string"
            },
            "head_sha": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "check_run_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStep"
              }
            },
            "conclusion": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "success",
                "failure",
                "cancelled",
                "skipped",
                null
              ]
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
            },
            "runner_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_id": {
              "type": [
                "number",
                "null"
              ],
              "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
            },
            "started_at": {
              "type": "string"
            },
            "completed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "workflow_name": {
              "type": "string"
            }
          },
          "required": [
            "check_run_url",
            "completed_at",
            "conclusion",
            "head_sha",
            "html_url",
            "id",
            "labels",
            "name",
            "node_id",
            "run_attempt",
            "run_id",
            "run_url",
            "runner_group_id",
            "runner_group_name",
            "runner_id",
            "runner_name",
            "started_at",
            "status",
            "steps",
            "url",
            "workflow_name"
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "additionalProperties": false
    }
  }
}